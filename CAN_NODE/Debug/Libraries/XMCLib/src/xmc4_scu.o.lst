   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_scu.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_CLOCK_GetUsbClockSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_CLOCK_GetUsbClockSource:
  25              	.LFB138:
  26              	 .file 1 "C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc/xmc4_scu.h"
   1:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @date 2019-02-18
   4:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *****************************************************************************
   7:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.
  11:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  12:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  14:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * do so, all subject to the following:
  20:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  21:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * a source language processor.
  27:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  28:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *****************************************************************************
  40:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  41:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Change History
  42:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * --------------
  43:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  44:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  45:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  46:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  47:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  48:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  49:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  50:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  51:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  52:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  53:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  54:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  55:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent,
  56:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  57:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  58:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  59:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  60:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  61:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  62:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks
  63:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  64:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  65:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  66:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  67:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(),
  68:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  69:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  70:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(),
  71:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  72:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  73:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  74:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  75:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  76:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  77:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  79:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  80:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  81:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  82:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  83:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2019-02-18:
  84:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fix conditional definition of XMC_SCU_PARITY_t elements
  85:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
  86:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
  87:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SetParityWriteValue(uint8_t val)
  88:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_GetParityReadValue(void)
  89:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  90:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2020-11-11:
  91:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Change making declaration of functions XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature()
  92:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  93:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @endcond
  94:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  95:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  96:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
  97:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  98:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  99:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 100:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 101:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
 102:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 103:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 104:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
 105:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 106:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
 107:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 108:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 109:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
 110:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 111:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 112:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 113:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 114:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 115:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 116:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 117:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 118:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 119:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * MACROS
 120:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 121:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 122:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 123:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 124:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 125:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 126:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 127:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 128:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 129:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 130:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 131:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 132:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 133:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 134:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 135:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 136:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 137:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 138:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 139:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 140:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 141:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 142:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 143:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 144:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 145:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 146:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 147:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 148:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 149:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 150:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 151:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 152:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 153:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 154:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 155:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 156:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 157:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 158:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 159:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 160:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 161:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 162:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 163:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 164:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 165:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 166:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 167:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 168:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 169:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 170:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 171:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 172:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 173:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 174:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 175:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 176:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 177:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 178:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 179:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 180:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 181:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 182:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 183:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 184:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 185:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 186:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 187:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 188:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 189:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 190:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 191:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 192:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 193:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 194:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 195:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 196:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 197:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 198:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 199:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 200:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 201:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 202:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 203:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 204:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 205:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 206:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 207:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 208:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 209:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 210:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 211:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 212:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 213:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 214:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose.
 215:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 216:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 217:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP
 218:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 219:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 220:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 221:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */
 222:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */
 223:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */
 224:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */
 225:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 226:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 227:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 228:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 229:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 230:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 231:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 232:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 233:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 234:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */
 235:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 236:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 237:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 238:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 239:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 240:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 241:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 242:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 243:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 244:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 245:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 246:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 247:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 248:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */
 249:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENDS2_Msk)
 250:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */
 251:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 252:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 253:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU1_Msk)
 254:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 255:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 256:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU2_Msk)
 257:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 258:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 259:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 260:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 261:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */
 262:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 263:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 264:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 265:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 266:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 267:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 268:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 269:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 270:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 271:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 272:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 273:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 274:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENECAT0_Msk)
 275:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ECAT_MEM = SCU_PARITY_PEEN_PEENECAT0_Msk, /**< ECAT0 SRAM parity error trap. */
 276:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 277:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 278:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 279:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 280:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 281:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 282:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 283:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 284:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 285:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 286:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 287:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 288:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 289:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 290:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 291:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 292:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 293:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 294:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 295:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 296:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 297:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 298:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register.
 299:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 300:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 301:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 302:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 303:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 304:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 305:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 306:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 307:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 308:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 309:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 310:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 311:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 312:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 313:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 314:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 315:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */
 316:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */
 317:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */
 318:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */
 319:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */
 320:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */
 321:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 322:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 323:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 324:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 325:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 326:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 327:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 328:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 329:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 330:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 331:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 332:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 333:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */
 334:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 335:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 336:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 337:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 338:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 339:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 340:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 341:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 342:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 343:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 344:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 345:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 346:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 347:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 348:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 349:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 350:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 351:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 352:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 353:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 354:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 355:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 356:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 357:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 358:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 359:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 360:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 361:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 362:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 363:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 364:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 365:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 366:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 367:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 368:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 369:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 370:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)
 371:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 372:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 373:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 374:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 375:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 376:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 377:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 378:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 379:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 380:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 381:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 382:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 383:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 384:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 385:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 386:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 387:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 388:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 389:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 390:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 391:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 392:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 393:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 394:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 395:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 396:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 397:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 398:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 399:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 400:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 401:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 402:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 403:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 404:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 405:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 406:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 407:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 408:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 409:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 410:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 411:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 412:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 413:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 414:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 415:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 416:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 417:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 418:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 419:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 420:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 421:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 422:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 423:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 424:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 425:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 426:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 427:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 428:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating.
 429:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 430:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 431:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 432:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 433:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 434:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 435:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 436:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 437:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 438:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 439:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 440:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 441:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 442:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 443:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 444:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 445:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 446:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 447:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 448:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 449:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 450:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 451:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 452:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 453:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 454:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 455:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 456:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 457:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 458:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 459:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 460:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 461:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 462:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 463:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 464:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 465:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 466:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 467:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 468:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 469:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 470:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 471:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 472:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)
 473:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 474:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 475:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 476:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 477:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 478:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 479:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 480:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 481:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 482:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 483:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 484:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 485:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 486:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 487:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 488:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 489:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 490:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 491:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 492:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 493:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 494:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 495:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 496:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 497:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 498:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 499:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 500:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 501:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 502:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 503:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 504:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 505:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 506:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 507:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 508:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 509:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 510:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register.
 511:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 512:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 513:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 514:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 515:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 516:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 517:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 518:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 519:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 520:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 521:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 522:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 523:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register.
 524:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 525:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 526:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 527:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 528:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 529:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 530:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 531:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 532:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 533:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 534:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 535:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 536:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 537:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock.
 538:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 539:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 540:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 541:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 542:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 543:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 544:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 545:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 546:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 547:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 548:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 549:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 550:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 551:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 552:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 553:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 554:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 555:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 556:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 557:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 558:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 559:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 560:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 561:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock.
 562:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 563:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 564:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 565:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 566:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock
 567:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 568:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock
 569:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 570:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 571:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 572:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 573:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 574:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 575:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 576:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 577:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 578:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 579:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 580:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 581:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 582:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 583:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 584:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 585:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 586:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 587:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 588:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 589:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 590:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 591:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 592:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 593:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 594:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 595:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 596:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 597:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 598:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 599:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 600:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 601:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 602:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 603:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 604:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 605:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 606:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 607:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 608:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 609:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 610:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 611:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 612:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 613:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock
 614:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 615:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 616:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 617:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 618:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 619:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 620:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 621:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 622:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 623:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 624:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 625:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 626:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 627:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration:
 628:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 629:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 630:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 631:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 632:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 633:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 634:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 635:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 636:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 637:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 638:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE
 639:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 640:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 641:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 642:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 643:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 644:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 645:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 646:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 647:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 648:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 649:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 650:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 651:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 652:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 653:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 654:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 655:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 656:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 657:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 658:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 659:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 660:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 661:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 662:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 663:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 664:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 665:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 666:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 667:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 668:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 669:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 670:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 671:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 672:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 673:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled.
 674:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 675:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 676:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 677:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 678:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  state.
 679:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 680:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 681:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 682:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 683:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 684:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 685:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 686:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 687:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 688:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 689:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 690:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 691:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 692:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 693:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 694:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 695:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 696:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 697:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 698:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 699:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 700:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 701:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 702:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 703:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 704:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 705:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 706:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 707:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 708:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 709:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 710:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 711:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 712:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 713:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 714:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped.
 715:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 716:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 717:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled.
 718:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 719:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 720:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 721:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 722:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 723:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 724:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 725:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 726:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 727:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 728:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 729:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 730:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 731:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 732:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 733:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 734:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 735:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 736:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 737:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 738:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 739:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 740:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 741:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 742:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 743:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 744:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 745:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 746:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 747:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 748:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 749:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 750:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 751:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 752:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 753:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 754:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 755:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 756:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 757:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 758:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 759:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 760:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 761:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 762:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 763:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control
 764:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 765:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 766:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 767:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 768:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 769:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 770:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 771:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 772:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 773:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 774:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 775:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 776:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 777:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 778:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 779:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 780:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 781:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 782:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 783:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 784:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 785:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 786:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 787:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 788:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 789:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 790:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 791:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 792:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 793:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 794:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   */
 795:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 796:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 797:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin.
 798:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 799:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 800:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin.
 801:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 802:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 803:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 804:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 805:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 806:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 807:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 808:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 809:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 810:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 811:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 812:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 813:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 814:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 815:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 816:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 817:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 818:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 819:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 820:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 821:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 822:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 823:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 824:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 825:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 826:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 827:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 828:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 829:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 830:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 831:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 832:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 833:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 834:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 835:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 836:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 837:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 838:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 839:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 840:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 841:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 842:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 843:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 844:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 845:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 846:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 847:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 848:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 849:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 850:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 851:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 852:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 853:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 854:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 855:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 856:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 857:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 858:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 859:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 860:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 861:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 862:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 863:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 864:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 865:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 866:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 867:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 868:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 869:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 870:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 871:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 872:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 873:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 874:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 875:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 876:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 877:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 878:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 879:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 880:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 881:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 882:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 883:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 884:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 885:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 886:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 887:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 888:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 889:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 890:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 891:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 892:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 893:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 894:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 895:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 896:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 897:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 898:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 899:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 900:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 901:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 902:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 903:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 904:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 905:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 906:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 907:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 908:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 909:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 910:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 911:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 912:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 913:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 914:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 915:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 916:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 917:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 918:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 919:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 920:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 921:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 922:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 923:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired
 924:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 925:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 926:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 927:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 928:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 929:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 930:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 931:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 932:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 933:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 934:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 935:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 936:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 937:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 938:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 939:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 940:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 941:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 942:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 943:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 944:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 945:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 946:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 947:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 948:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 949:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 950:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 951:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 952:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 953:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 954:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 955:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 956:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 957:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 958:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 959:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 960:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 961:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 962:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 963:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 964:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 965:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 966:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 967:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 968:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 969:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 970:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 971:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** extern "C" {
 972:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 973:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 974:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 975:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 976:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 977:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 978:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 979:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 980:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 981:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 982:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 983:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 984:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 985:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 986:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 987:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 988:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 989:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 990:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 991:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 992:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
 993:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 994:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 995:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 996:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 997:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 998:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 999:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1000:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1001:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1002:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1003:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
1004:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
1005:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1006:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
1007:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1008:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
1009:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1010:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1011:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1012:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1013:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1014:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
1015:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
1016:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1017:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1018:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1019:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1020:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1021:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1022:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1023:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1024:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1025:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1026:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1027:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1028:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1030:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1031:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1032:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1033:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1034:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1035:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1036:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1037:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1038:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1039:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1041:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1042:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1044:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1045:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1046:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1047:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1048:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1049:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1050:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1051:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1052:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1053:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1054:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1055:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1056:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1057:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1058:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1059:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1060:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1061:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1062:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result.
1063:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1064:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1065:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1066:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1067:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1068:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1069:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1070:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1071:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1072:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1073:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1074:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1075:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1076:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1077:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1078:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1079:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1080:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1081:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1082:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n
1083:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1084:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1085:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1086:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1087:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1088:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1089:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1090:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1091:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1092:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1093:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1094:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1095:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1096:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1097:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1098:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1099:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1100:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1101:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1102:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1103:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1104:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1105:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1106:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1107:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1108:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1109:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1110:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1111:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1112:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1113:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1114:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1115:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1116:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1117:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1118:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1119:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1120:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1121:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1122:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1123:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1124:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1125:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1126:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1127:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1128:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1129:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1130:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1131:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1132:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1133:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1134:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1135:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1136:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1137:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1138:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1139:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1140:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1141:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1142:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1143:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1144:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1145:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1146:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1147:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC41) || (UC_SERIES == XMC42) || (UC_SERIES == XMC44))
1148:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1149:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1150:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1151:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1152:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1153:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1154:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1155:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1156:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in
1157:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1158:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1159:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1160:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1161:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1162:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1163:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1164:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1165:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1166:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1167:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1168:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1169:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1170:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1171:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1172:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1173:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1174:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1175:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1176:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1177:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1178:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1179:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1180:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1181:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1182:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1183:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1184:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1185:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1186:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1187:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1188:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1189:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1190:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1191:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1192:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1193:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1194:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1195:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1196:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1197:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1198:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1199:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1200:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1201:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1202:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1203:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1204:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1205:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1206:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1207:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1208:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1209:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1210:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1211:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1212:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1213:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1214:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1215:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1216:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1217:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1218:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1219:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1220:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1221:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1222:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1223:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1224:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1225:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1226:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1227:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1228:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1229:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1230:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1231:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1232:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1233:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1234:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1235:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1236:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1238:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1239:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1240:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1241:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1242:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1243:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1244:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1245:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1246:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1247:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1248:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1249:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1250:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1251:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1252:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1253:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1254:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1255:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1256:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1257:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1258:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1259:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1260:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1261:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1262:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1263:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1267:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1268:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1269:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1270:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1271:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1272:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1273:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1274:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1275:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1276:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1277:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1278:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1279:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1280:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1281:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1282:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1283:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1284:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1285:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1286:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1287:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1288:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain.
1289:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1290:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface.
1291:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1292:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1293:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1294:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1295:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1296:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1297:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1298:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1299:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1300:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1301:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1302:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1303:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1304:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1305:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1306:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1307:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1308:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1309:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1310:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain.
1311:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1312:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface.
1313:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1314:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1316:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1317:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1318:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1319:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1320:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1321:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1322:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple
1323:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1324:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1325:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1326:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1327:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1328:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1329:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the
1330:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1331:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1332:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1333:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1334:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1335:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1336:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1337:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1338:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1339:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple
1340:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1341:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1342:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1343:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1344:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1345:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1346:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1347:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1348:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1349:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1350:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1351:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1352:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1353:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1354:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1355:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1356:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1357:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1358:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1359:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1360:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1361:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the
1362:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1363:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1364:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1365:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1366:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1367:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1368:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1369:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1370:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1371:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1372:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1373:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1374:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1375:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1376:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1377:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit
1378:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1379:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1380:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1381:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1382:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1383:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1384:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1385:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1386:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1387:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1388:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1389:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1390:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1391:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1392:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1393:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced.
1394:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time.
1395:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1396:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1397:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1398:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1399:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1400:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1401:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1402:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1403:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1404:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1405:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1406:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1407:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1408:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1409:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1410:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1411:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1412:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1413:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1414:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1415:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1416:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1417:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);
1418:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1419:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1420:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1421:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1422:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1423:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1424:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1425:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1426:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1427:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1428:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API.
1429:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1430:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1431:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1432:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1433:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1434:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1436:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1437:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1438:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1439:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1440:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1441:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1442:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1444:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1446:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1448:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1449:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1450:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1451:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1452:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1453:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1454:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1455:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1456:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1457:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1458:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1459:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1460:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1461:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1462:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1463:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1464:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1465:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1466:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1467:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1468:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1469:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1470:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1471:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1472:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1473:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1474:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1475:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1476:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1477:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1478:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1479:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1480:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1481:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1482:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1483:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1484:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1485:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1486:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1487:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1488:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1489:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1490:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1491:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1492:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1493:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state.
1494:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1495:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1496:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1497:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1498:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1499:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1500:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1501:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1502:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1503:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1504:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1505:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1506:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1507:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1508:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1509:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1510:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to
1511:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1512:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the
1513:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors
1514:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1515:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1516:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1517:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1518:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1519:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1520:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1521:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1522:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1523:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1524:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1525:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1526:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1527:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1528:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1529:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1530:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1531:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1532:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1533:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1534:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1535:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1536:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1537:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1538:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1539:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1540:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1541:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1542:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1543:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1544:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1545:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1546:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1547:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1548:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1549:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1550:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1551:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1552:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1553:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1554:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1555:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1556:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1557:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1558:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1559:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1560:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1561:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1562:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1563:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1564:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1565:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1566:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1567:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1568:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1569:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1570:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1571:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1572:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1573:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1574:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1575:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1576:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1577:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1578:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1579:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1580:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1581:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1582:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1583:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1584:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1585:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1586:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1587:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1588:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1589:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1590:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1591:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1592:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1593:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1594:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1595:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1596:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1597:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1598:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1599:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the
1600:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1601:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1602:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1603:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1604:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1605:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);
1606:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1607:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1608:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1609:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity logic should be overriden.\n
1610:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1611:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1612:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1613:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1614:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1615:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1616:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable access to parity bits of SRAM modules for various types of peripherals.
1617:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable direct write to parity bits using value selected using XMC_SCU_PARITY_SetParityWriteValue
1618:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1619:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_SetParityWriteValue() \n\n\n
1620:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1621:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1622:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
1623:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
1624:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->MCHKCON = memory;
1625:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
1626:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1627:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1628:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity test has to be enabled.\n
1629:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type.
1630:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Only a single memory type should be specified.
1631:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1632:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1633:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1634:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1635:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects parity test output from a memory instance that can be inspected using XMC_SCU_PARITY_Get
1636:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetParityReadValue() \n\n\n
1638:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1639:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1640:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
1641:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
1642:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTSR = memory;
1643:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
1644:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1645:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1646:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param write_value parity bits value stored with next write access\n
1647:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1648:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1650:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits corresponding to the next write access are sele
1652:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1653:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1654:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1655:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1656:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1657:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SetParityWriteValue(uint8_t write_value)
1658:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
1659:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTPR = ((write_value << SCU_PARITY_PMTPR_PWR_Pos) & SCU_PARITY_PMTPR_PWR_Msk);
1660:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
1661:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1662:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1663:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return parity bits generated during last read access
1664:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1665:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1666:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits generated during the most recent read access ca
1667:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1668:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1669:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1670:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1671:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1672:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint8_t XMC_SCU_PARITY_GetParityReadValue(void)
1673:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
1674:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return ((SCU_PARITY->PMTPR & SCU_PARITY_PMTPR_PRD_Msk) >> SCU_PARITY_PMTPR_PRD_Pos);
1675:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
1676:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1677:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1678:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1679:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1680:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1681:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1682:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1683:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1684:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1685:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1686:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1687:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1688:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1689:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1690:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1691:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1692:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1693:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1694:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1695:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1696:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1697:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1698:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1699:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1700:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1701:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1702:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1703:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1704:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1705:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1706:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1707:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1708:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1709:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1710:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1711:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1712:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1713:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1714:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1715:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1716:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1717:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1718:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1719:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1720:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1721:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1722:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1723:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1724:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1725:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register.
1726:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1727:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1728:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1729:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1730:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1731:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1732:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1733:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1734:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1735:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1736:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1737:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1738:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1739:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1740:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1741:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1742:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1743:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1744:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1745:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency.
1746:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1747:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1748:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1749:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1750:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1751:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1752:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1753:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1754:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1755:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1756:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1757:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1758:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1759:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1760:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1761:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1762:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1763:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1764:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
1765:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1766:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
1767:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1768:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1769:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1770:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1771:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1772:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1773:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1774:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1775:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1776:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1777:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1778:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1779:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1780:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1781:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1782:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1783:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1784:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1785:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1786:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1787:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1788:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1789:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1790:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1791:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1792:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1793:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1794:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1795:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1796:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1797:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1798:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1799:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
  27              	 .loc 1 1799 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1800:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
  39              	 .loc 1 1800 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 9B69     	 ldr r3,[r3,#24]
  42 0008 03F48033 	 and r3,r3,#65536
1801:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
  43              	 .loc 1 1801 0
  44 000c 1846     	 mov r0,r3
  45 000e BD46     	 mov sp,r7
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 13
  48              	 
  49 0010 5DF8047B 	 ldr r7,[sp],#4
  50              	.LCFI3:
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0014 7047     	 bx lr
  54              	.L4:
  55 0016 00BF     	 .align 2
  56              	.L3:
  57 0018 00460050 	 .word 1342195200
  58              	 .cfi_endproc
  59              	.LFE138:
  61              	 .section .text.XMC_SCU_CLOCK_GetWdtClockSource,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_SCU_CLOCK_GetWdtClockSource:
  67              	.LFB139:
1802:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1803:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1804:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1805:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1806:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1807:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1808:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1809:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1810:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1811:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1812:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1813:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1814:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1815:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1816:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1817:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1818:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1819:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1821:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1822:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1823:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1824:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1825:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1826:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1827:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1828:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1829:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1830:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1831:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1832:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1833:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1834:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on
1835:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1836:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1837:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1838:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1839:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1840:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
  68              	 .loc 1 1840 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72              	 
  73 0000 80B4     	 push {r7}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 4
  76              	 .cfi_offset 7,-4
  77 0002 00AF     	 add r7,sp,#0
  78              	.LCFI5:
  79              	 .cfi_def_cfa_register 7
1841:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
  80              	 .loc 1 1841 0
  81 0004 044B     	 ldr r3,.L7
  82 0006 5B6A     	 ldr r3,[r3,#36]
  83 0008 03F44033 	 and r3,r3,#196608
1842:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
  84              	 .loc 1 1842 0
  85 000c 1846     	 mov r0,r3
  86 000e BD46     	 mov sp,r7
  87              	.LCFI6:
  88              	 .cfi_def_cfa_register 13
  89              	 
  90 0010 5DF8047B 	 ldr r7,[sp],#4
  91              	.LCFI7:
  92              	 .cfi_restore 7
  93              	 .cfi_def_cfa_offset 0
  94 0014 7047     	 bx lr
  95              	.L8:
  96 0016 00BF     	 .align 2
  97              	.L7:
  98 0018 00460050 	 .word 1342195200
  99              	 .cfi_endproc
 100              	.LFE139:
 102              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockSource,"ax",%progbits
 103              	 .align 2
 104              	 .thumb
 105              	 .thumb_func
 107              	XMC_SCU_CLOCK_GetExternalOutputClockSource:
 108              	.LFB142:
1843:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1844:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1845:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1846:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1847:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1848:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1849:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1850:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1851:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1852:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1853:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1854:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1855:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1856:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1857:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1858:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1859:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1860:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1861:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1862:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1863:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1864:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1865:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1866:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1867:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1868:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1869:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1870:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1871:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1872:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1873:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1874:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1875:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1876:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1877:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1878:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1879:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
1880:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1881:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
1882:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1883:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1884:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1885:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1886:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1887:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1888:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1889:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1890:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1891:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1892:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1893:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1894:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1895:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1896:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1897:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1898:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1899:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1900:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1901:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1902:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1903:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1904:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1905:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1906:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1907:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1908:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1909:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1910:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1911:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1912:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1913:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1914:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1915:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1916:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1917:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1918:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1919:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1920:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
1921:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1922:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
1923:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1924:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1925:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1926:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1927:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1928:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1929:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1930:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1931:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1932:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1933:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1934:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1935:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1936:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1937:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1938:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1939:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1940:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1941:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1942:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1943:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1944:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1945:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1946:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1947:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1948:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1949:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1950:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1951:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1952:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1953:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1954:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1955:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1956:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1957:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1958:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1959:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1960:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1961:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1962:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1963:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1964:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1965:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1966:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1967:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1968:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1969:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 109              	 .loc 1 1969 0
 110              	 .cfi_startproc
 111              	 
 112              	 
 113              	 
 114 0000 80B4     	 push {r7}
 115              	.LCFI8:
 116              	 .cfi_def_cfa_offset 4
 117              	 .cfi_offset 7,-4
 118 0002 00AF     	 add r7,sp,#0
 119              	.LCFI9:
 120              	 .cfi_def_cfa_register 7
1970:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
 121              	 .loc 1 1970 0
 122 0004 054B     	 ldr r3,.L11
 123 0006 9B6A     	 ldr r3,[r3,#40]
 124 0008 DBB2     	 uxtb r3,r3
 125 000a 03F00303 	 and r3,r3,#3
 126 000e DBB2     	 uxtb r3,r3
1971:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
 127              	 .loc 1 1971 0
 128 0010 1846     	 mov r0,r3
 129 0012 BD46     	 mov sp,r7
 130              	.LCFI10:
 131              	 .cfi_def_cfa_register 13
 132              	 
 133 0014 5DF8047B 	 ldr r7,[sp],#4
 134              	.LCFI11:
 135              	 .cfi_restore 7
 136              	 .cfi_def_cfa_offset 0
 137 0018 7047     	 bx lr
 138              	.L12:
 139 001a 00BF     	 .align 2
 140              	.L11:
 141 001c 00460050 	 .word 1342195200
 142              	 .cfi_endproc
 143              	.LFE142:
 145              	 .section .text.XMC_SCU_CLOCK_GetECATClockDivider,"ax",%progbits
 146              	 .align 2
 147              	 .thumb
 148              	 .thumb_func
 150              	XMC_SCU_CLOCK_GetECATClockDivider:
 151              	.LFB154:
1972:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1973:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1974:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1975:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1976:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1977:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1978:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1979:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1980:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1981:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1982:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1983:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1984:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1985:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1986:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1987:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1988:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1989:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1990:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1991:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
1992:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1993:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1994:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1995:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1996:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1997:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1998:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1999:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
2000:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
2001:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
2003:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2004:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
2005:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2006:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
2007:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2008:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2009:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2010:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2011:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2012:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
2013:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2014:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2015:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2016:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2017:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2018:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2019:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2020:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
2021:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
2022:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2023:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
2024:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2025:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
2026:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2027:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
2028:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****                        ((uint32_t)source);
2029:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2030:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2031:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2032:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
2033:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2034:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2035:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2036:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2037:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2038:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
2039:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
2040:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2041:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
2042:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2043:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
2044:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2045:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
2046:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2047:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2048:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2049:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2050:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2051:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
2052:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
2053:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2054:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2055:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2056:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2057:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
2058:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is
2059:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
2060:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2061:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2062:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2063:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
2064:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2065:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2066:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
2067:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
2068:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2069:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2070:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
2071:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
2072:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2073:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2074:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2075:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
2076:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2077:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
2078:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2079:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2080:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2081:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2082:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
2083:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
2084:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
2085:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
2086:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2087:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2088:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2089:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2090:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2091:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2092:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2093:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2094:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2095:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2096:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2097:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2098:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2099:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2100:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2101:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2102:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2103:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2104:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2105:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2106:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2107:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2108:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2109:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2110:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2111:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2112:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2113:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2114:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2115:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2116:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2117:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2118:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2119:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2120:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2121:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2122:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2123:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2124:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2125:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2126:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2127:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2128:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2129:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2130:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2131:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2132:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2133:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2134:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2135:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2136:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2137:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2138:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2139:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2140:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2141:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2142:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2143:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2144:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2145:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2146:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2147:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2148:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2149:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2150:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2151:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2152:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2153:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2154:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2155:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2156:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2157:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2158:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2159:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2160:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2161:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2162:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2163:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2164:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2165:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2166:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2167:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2168:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2169:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2170:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2171:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2172:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2173:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2174:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2175:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2176:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2177:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2178:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2179:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2180:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2181:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2182:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2183:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2184:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2185:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2186:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2187:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2188:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2189:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2190:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2191:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2192:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2193:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2194:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2195:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2196:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2197:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2198:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2199:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2200:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2201:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2202:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2203:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2204:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2205:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2206:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2207:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2208:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2209:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2210:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2211:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2212:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2213:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2214:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2215:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2216:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2217:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2218:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2219:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2220:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2221:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2222:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2223:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2224:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2225:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2226:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2227:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2228:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2229:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2230:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2231:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2232:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2233:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2234:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2235:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2236:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2237:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2238:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2239:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2240:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2241:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2242:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2243:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2244:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2245:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2246:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2247:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2248:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2249:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2250:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2251:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2252:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2253:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2254:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2255:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2256:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2257:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2258:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2259:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2260:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2261:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2262:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2263:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2264:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2265:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2266:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2267:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2268:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2269:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2270:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2271:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2272:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2273:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2274:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2275:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2276:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2277:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2278:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2279:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2280:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2281:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2282:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2283:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2284:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2285:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2286:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2287:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2288:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2289:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2290:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2291:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2292:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2293:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2294:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2295:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2296:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2297:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2298:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2299:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2300:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2301:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2302:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2303:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2304:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2305:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2306:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2307:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2308:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2309:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2310:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2311:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2312:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2313:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2314:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2315:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2316:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2317:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2318:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
2319:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2320:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
2321:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2322:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2323:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2324:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2325:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2326:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2327:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2328:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2329:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2330:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2331:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2332:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2333:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2334:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2335:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2336:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2337:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2338:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2339:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2340:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2341:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2342:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2343:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2344:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2345:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2346:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2347:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2348:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2349:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2350:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2351:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 152              	 .loc 1 2351 0
 153              	 .cfi_startproc
 154              	 
 155              	 
 156              	 
 157 0000 80B4     	 push {r7}
 158              	.LCFI12:
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 00AF     	 add r7,sp,#0
 162              	.LCFI13:
 163              	 .cfi_def_cfa_register 7
2352:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
 164              	 .loc 1 2352 0
 165 0004 044B     	 ldr r3,.L15
 166 0006 9B6B     	 ldr r3,[r3,#56]
 167 0008 03F00303 	 and r3,r3,#3
2353:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
 168              	 .loc 1 2353 0
 169 000c 1846     	 mov r0,r3
 170 000e BD46     	 mov sp,r7
 171              	.LCFI14:
 172              	 .cfi_def_cfa_register 13
 173              	 
 174 0010 5DF8047B 	 ldr r7,[sp],#4
 175              	.LCFI15:
 176              	 .cfi_restore 7
 177              	 .cfi_def_cfa_offset 0
 178 0014 7047     	 bx lr
 179              	.L16:
 180 0016 00BF     	 .align 2
 181              	.L15:
 182 0018 00460050 	 .word 1342195200
 183              	 .cfi_endproc
 184              	.LFE154:
 186              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 187              	 .align 2
 188              	 .thumb
 189              	 .thumb_func
 191              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 192              	.LFB155:
2354:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2355:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2356:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2357:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2358:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2359:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2360:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2361:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2362:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the
2363:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2364:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status
2365:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2366:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2367:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2368:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2369:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2370:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2371:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2372:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2373:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2374:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2375:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2376:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the
2377:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * external oscillator.
2378:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2379:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2380:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2381:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2382:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2383:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2384:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2385:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2386:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2387:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2388:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2389:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2390:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2391:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2392:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2393:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2394:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2395:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2396:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2397:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2398:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2399:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2400:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2401:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2402:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2404:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2405:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2406:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2407:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2408:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2409:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2410:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2411:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2412:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2413:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2414:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2415:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2416:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2417:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2418:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2419:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2420:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2421:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2422:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2423:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2424:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2425:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2426:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2427:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2428:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2429:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2430:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2431:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2432:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2433:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2434:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2435:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2436:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2437:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays
2438:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2439:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status
2440:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2441:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2442:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator()
2443:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2444:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2445:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2446:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2447:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2448:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2449:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2450:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2451:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2452:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2453:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2454:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2455:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2456:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2457:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2458:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2459:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2460:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2461:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2462:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2463:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2464:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2465:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2466:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2467:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2468:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2469:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2470:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2471:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2472:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2473:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2474:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2475:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2476:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2477:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2478:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2479:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2480:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2481:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2482:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2483:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2484:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2485:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2486:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2487:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2488:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2489:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2490:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2491:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2492:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2493:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2494:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2495:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2496:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2497:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2498:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2499:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2500:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2501:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2502:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2503:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2504:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2505:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin
2506:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2507:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2508:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2509:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2510:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2511:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2512:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2513:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2514:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2515:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2516:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2517:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2518:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2519:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2520:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2521:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2522:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2523:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2524:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2525:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2526:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2527:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2528:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2529:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2530:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2531:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2532:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2533:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2534:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2535:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2536:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2537:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2538:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2539:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2540:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2541:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2542:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2543:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2544:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2545:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2546:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2547:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2548:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2549:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2550:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2551:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2552:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2553:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2554:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2555:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2556:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2557:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2558:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2559:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2560:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2561:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2562:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2563:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** 
2564:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2565:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2566:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2567:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2568:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2569:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2570:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2571:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2572:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2573:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2574:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2575:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2576:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2577:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** {
 193              	 .loc 1 2577 0
 194              	 .cfi_startproc
 195              	 
 196              	 
 197              	 
 198 0000 80B4     	 push {r7}
 199              	.LCFI16:
 200              	 .cfi_def_cfa_offset 4
 201              	 .cfi_offset 7,-4
 202 0002 00AF     	 add r7,sp,#0
 203              	.LCFI17:
 204              	 .cfi_def_cfa_register 7
2578:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 205              	 .loc 1 2578 0
 206 0004 064B     	 ldr r3,.L19
 207 0006 1A68     	 ldr r2,[r3]
 208 0008 064B     	 ldr r3,.L19+4
 209 000a 1B69     	 ldr r3,[r3,#16]
 210 000c 03F00103 	 and r3,r3,#1
 211 0010 02FA03F3 	 lsl r3,r2,r3
2579:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc4_scu.h **** }
 212              	 .loc 1 2579 0
 213 0014 1846     	 mov r0,r3
 214 0016 BD46     	 mov sp,r7
 215              	.LCFI18:
 216              	 .cfi_def_cfa_register 13
 217              	 
 218 0018 5DF8047B 	 ldr r7,[sp],#4
 219              	.LCFI19:
 220              	 .cfi_restore 7
 221              	 .cfi_def_cfa_offset 0
 222 001c 7047     	 bx lr
 223              	.L20:
 224 001e 00BF     	 .align 2
 225              	.L19:
 226 0020 00000000 	 .word SystemCoreClock
 227 0024 00460050 	 .word 1342195200
 228              	 .cfi_endproc
 229              	.LFE155:
 231              	 .section .text.XMC_SCU_CLOCK_GetCpuClockFrequency,"ax",%progbits
 232              	 .align 2
 233              	 .thumb
 234              	 .thumb_func
 236              	XMC_SCU_CLOCK_GetCpuClockFrequency:
 237              	.LFB172:
 238              	 .file 2 "C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2019-12-02
   4:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
   7:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.
  11:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  12:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  14:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * do so, all subject to the following:
  20:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  21:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * a source language processor.
  27:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  28:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
  40:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  41:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  42:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  43:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  44:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  45:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  46:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  47:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  48:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  49:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  50:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  51:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  52:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  54:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  55:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  56:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  57:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  58:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  59:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  60:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  62:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  63:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  64:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * 2019-12-02:
  65:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  66:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  67:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond
  68:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  69:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
  70:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  71:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  72:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
  73:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  74:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  75:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  76:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc_common.h"
  77:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
  78:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
  79:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  80:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  81:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
  82:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
  83:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
  84:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  85:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  86:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  87:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  88:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  89:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  90:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  91:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control
  93:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  95:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  96:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  97:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
  98:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  99:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 100:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic
 101:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 102:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
 103:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 104:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
 105:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
 106:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 107:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 108:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 109:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 110:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 111:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 112:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 113:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 114:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 115:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 116:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 117:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 118:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 119:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 120:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 121:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 122:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 123:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 124:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 125:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 126:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 127:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 128:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 129:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 130:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 131:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 132:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 133:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 134:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 135:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 136:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 137:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 138:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 139:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 140:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 141:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 142:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 143:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 144:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 146:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 147:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 148:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 149:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 150:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 151:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 153:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 154:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 155:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 156:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 157:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 158:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 159:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 160:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 161:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 162:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 163:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 164:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 165:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 166:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 167:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 168:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 169:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 170:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 171:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 172:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 173:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 174:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 175:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 176:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 177:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 178:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS
 179:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** {
 180:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 181:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 182:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 183:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 184:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 185:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 186:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 187:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 188:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 189:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 190:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 191:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 192:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 193:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 194:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 195:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 196:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 197:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 198:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 199:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 200:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 202:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc1_scu.h"
 203:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 204:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc4_scu.h"
 205:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #else
 206:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 207:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 210:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 211:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 212:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 213:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 214:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 215:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 216:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 217:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 218:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 219:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 220:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 221:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 222:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 223:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 224:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 225:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 226:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 227:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 228:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 229:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 230:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 231:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 232:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 233:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 234:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 235:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 236:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 237:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 238:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 239:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** {
 240:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 241:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** }
 242:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 243:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 244:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 245:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 246:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 247:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 248:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 249:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 250:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 251:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 252:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 253:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 254:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 255:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 256:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 257:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 258:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 259:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 260:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 261:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 262:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 263:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 264:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** {
 265:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 266:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** }
 267:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 268:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 269:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 270:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for
 271:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 272:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 273:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 274:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 275:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 276:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 277:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 278:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 279:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 280:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 281:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 282:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 283:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock.
 284:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration.
 285:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 286:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 287:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 288:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 289:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 290:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 291:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 292:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 293:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 294:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 295:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 296:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 297:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 298:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 299:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 300:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 301:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 302:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 303:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 304:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 305:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 306:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 307:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 308:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 309:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 310:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 311:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 312:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 313:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 314:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 315:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 316:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 317:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 318:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 319:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 320:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 321:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 322:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 323:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 324:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 325:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 326:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 327:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 328:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 329:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 330:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 331:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 332:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 333:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 334:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 335:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 336:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 337:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 338:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 339:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 340:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 341:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 342:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 343:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 344:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 345:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 346:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 347:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 348:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 349:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 350:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 351:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 352:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 353:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 354:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular
 355:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 356:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 357:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation.
 358:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 359:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 360:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 361:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 362:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 363:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 364:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 365:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 366:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 367:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 368:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 370:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 371:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 372:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 373:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 374:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 375:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 376:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 377:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 378:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 379:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 380:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 381:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 382:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 383:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 384:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 385:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 386:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 387:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 388:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 389:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 390:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset.
 391:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in
 392:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 393:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 394:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 395:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 396:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 397:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 398:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 399:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 400:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** {
 401:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 402:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** }
 403:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 404:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 405:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 406:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 407:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 408:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 409:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 410:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 411:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 412:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 413:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 414:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 415:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** {
 416:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 417:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 418:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** }
 419:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 420:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 421:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 422:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 423:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 424:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 425:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 426:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 427:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 428:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 429:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 430:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 431:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 432:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 433:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 434:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** {
 239              	 .loc 2 434 0
 240              	 .cfi_startproc
 241              	 
 242              	 
 243              	 
 244 0000 80B4     	 push {r7}
 245              	.LCFI20:
 246              	 .cfi_def_cfa_offset 4
 247              	 .cfi_offset 7,-4
 248 0002 00AF     	 add r7,sp,#0
 249              	.LCFI21:
 250              	 .cfi_def_cfa_register 7
 435:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 251              	 .loc 2 435 0
 252 0004 034B     	 ldr r3,.L23
 253 0006 1B68     	 ldr r3,[r3]
 436:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** }
 254              	 .loc 2 436 0
 255 0008 1846     	 mov r0,r3
 256 000a BD46     	 mov sp,r7
 257              	.LCFI22:
 258              	 .cfi_def_cfa_register 13
 259              	 
 260 000c 5DF8047B 	 ldr r7,[sp],#4
 261              	.LCFI23:
 262              	 .cfi_restore 7
 263              	 .cfi_def_cfa_offset 0
 264 0010 7047     	 bx lr
 265              	.L24:
 266 0012 00BF     	 .align 2
 267              	.L23:
 268 0014 00000000 	 .word SystemCoreClock
 269              	 .cfi_endproc
 270              	.LFE172:
 272              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
 273              	 .align 2
 274              	 .thumb
 275              	 .thumb_func
 277              	XMC_SCU_GetMirrorStatus:
 278              	.LFB173:
 437:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 438:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 439:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 440:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 441:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 442:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 443:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 444:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 445:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 446:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 447:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void);
 448:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 449:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 450:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 451:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 452:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 453:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 454:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 455:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 456:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 457:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 458:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 459:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 460:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 461:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 462:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 463:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 464:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 465:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 466:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 467:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 468:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 469:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 470:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 471:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 472:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 473:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 474:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 475:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 476:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 477:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 478:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 479:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 480:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 481:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 482:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 483:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 484:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 485:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 486:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 487:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 488:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 489:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 490:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 491:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the
 492:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 493:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 494:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 495:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 496:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 497:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 498:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 499:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 500:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 501:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 502:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 503:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 504:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 505:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 506:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 507:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 508:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 509:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 510:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 511:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 512:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done.
 513:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 514:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 515:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 516:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 517:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 518:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 519:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 520:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 521:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 522:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 523:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 524:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 525:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 526:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 527:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 528:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 529:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 530:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 531:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 532:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 533:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 534:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 535:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** 
 536:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** /**
 537:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 538:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 539:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 540:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 541:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  *
 542:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 543:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 544:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 545:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 546:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 547:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 548:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 549:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 550:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****  */
 551:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 552:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** {
 279              	 .loc 2 552 0
 280              	 .cfi_startproc
 281              	 
 282              	 
 283              	 
 284 0000 80B4     	 push {r7}
 285              	.LCFI24:
 286              	 .cfi_def_cfa_offset 4
 287              	 .cfi_offset 7,-4
 288 0002 00AF     	 add r7,sp,#0
 289              	.LCFI25:
 290              	 .cfi_def_cfa_register 7
 553:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h ****   return (SCU_GENERAL->MIRRSTS);
 291              	 .loc 2 553 0
 292 0004 034B     	 ldr r3,.L27
 293 0006 D3F8C430 	 ldr r3,[r3,#196]
 554:C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/XMCLib/inc\xmc_scu.h **** }
 294              	 .loc 2 554 0
 295 000a 1846     	 mov r0,r3
 296 000c BD46     	 mov sp,r7
 297              	.LCFI26:
 298              	 .cfi_def_cfa_register 13
 299              	 
 300 000e 5DF8047B 	 ldr r7,[sp],#4
 301              	.LCFI27:
 302              	 .cfi_restore 7
 303              	 .cfi_def_cfa_offset 0
 304 0012 7047     	 bx lr
 305              	.L28:
 306              	 .align 2
 307              	.L27:
 308 0014 00400050 	 .word 1342193664
 309              	 .cfi_endproc
 310              	.LFE173:
 312              	 .section .bss.event_handler_list,"aw",%nobits
 313              	 .align 2
 316              	event_handler_list:
 317 0000 00000000 	 .space 128
 317      00000000 
 317      00000000 
 317      00000000 
 317      00000000 
 318              	 .section .text.XMC_SCU_lDelay,"ax",%progbits
 319              	 .align 2
 320              	 .thumb
 321              	 .thumb_func
 323              	XMC_SCU_lDelay:
 324              	.LFB174:
 325              	 .file 3 "../Libraries/XMCLib/src/xmc4_scu.c"
   1:../Libraries/XMCLib/src/xmc4_scu.c **** /**
   2:../Libraries/XMCLib/src/xmc4_scu.c ****  * @file xmc4_scu.c
   3:../Libraries/XMCLib/src/xmc4_scu.c ****  * @date 2020-12-21
   4:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   5:../Libraries/XMCLib/src/xmc4_scu.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_scu.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc4_scu.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   9:../Libraries/XMCLib/src/xmc4_scu.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_scu.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  12:../Libraries/XMCLib/src/xmc4_scu.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  14:../Libraries/XMCLib/src/xmc4_scu.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc4_scu.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc4_scu.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc4_scu.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc4_scu.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc4_scu.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  21:../Libraries/XMCLib/src/xmc4_scu.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc4_scu.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc4_scu.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc4_scu.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc4_scu.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc4_scu.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  28:../Libraries/XMCLib/src/xmc4_scu.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc4_scu.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc4_scu.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc4_scu.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc4_scu.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc4_scu.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc4_scu.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  36:../Libraries/XMCLib/src/xmc4_scu.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc4_scu.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc4_scu.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc4_scu.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  41:../Libraries/XMCLib/src/xmc4_scu.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc4_scu.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  44:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  47:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-05-20:
  48:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_ASSERT() hanging issues have fixed.  <br>
  49:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Line indentation aligned with 120 characters. <br>
  50:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  51:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_EnableEvent,XMC_SCU_INTERRUPT_DisableEvent,
  53:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_TriggerEvent,XMC_SCU_INTERUPT_GetEventStatus,
  54:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_ClearEventStatus are added
  55:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added Weak implementation for OSCHP_GetFrequency()
  56:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  57:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-11-30:
  58:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Documentation improved <br>
  59:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Following API functionalities are improved
  60:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_CLOCK_GatePeripheralClock, XMC_SCU_CLOCK_UngatePeripheralClock, XMC_SCU_CLOCK_IsPe
  61:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_RESET_AssertPeripheralReset, XMC_SCU_RESET_DeassertPeripheralReset, XMC_SCU_RESET_
  62:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  63:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-12-08:
  64:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_GetTemperature renamed to XMC_SCU_GetTemperatureMeasurement
  65:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  66:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-03-09:
  67:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Optimize write only registers
  68:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetPinMode
  69:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  70:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent,
  71:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  72:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  73:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  74:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  75:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-04-06:
  76:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_ReadFromRetentionMemory functionality
  77:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  78:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-05-19:
  79:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Changed XMC_SCU_CLOCK_StartSystemPll to avoid using floating point calculation which might
  80:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  81:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(),
  82:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  83:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  84:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(),
  85:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  86:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  87:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  88:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-06-15:
  89:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  90:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  91:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  92:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  93:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2018-06-21:
  94:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_HIB_SetSR1Input()
  95:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_CLOCK_EnableLowPowerOscillator()
  96:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  97:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2019-12-16:
  98:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  99:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 100:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2019-09-30:
 101:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixes on XMC_SCU_CLOCK_StartUsbPll(), XMC_SCU_CLOCK_StartSystemPll() and XMC_SCU_CLOCK_Ste
 102:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 103:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2020-11-11:
 104:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Change making implementation of functions XMC_SCU_HighTemperature(), XMC_SCU_LowTemperatur
 105:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 106:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2020-12-21:
 107:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Updated XMC_SCU_CLOCK_Init to enable USB PLL locking when the System PLL is disabled.
 108:../Libraries/XMCLib/src/xmc4_scu.c ****  * @endcond
 109:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 110:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 111:../Libraries/XMCLib/src/xmc4_scu.c **** 
 112:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 113:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 114:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief SCU low level driver API prototype definition for XMC4 family of microcontrollers.
 115:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 116:../Libraries/XMCLib/src/xmc4_scu.c ****  * <b>Detailed description of file:</b> <br>
 117:../Libraries/XMCLib/src/xmc4_scu.c ****  * APIs provided in this file cover the following functional blocks of SCU: <br>
 118:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- GCU (APIs prefixed with XMC_SCU_GEN_) <br>
 119:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Temperature Monitoring, Bootmode selection, CCU Start, Comparator configuration etc  <br>
 120:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- CCU (APIs prefixed with XMC_SCU_CLOCK_) <br>
 121:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Clock sources init, Clock tree init, Clock gating, Sleep Management etc <br>
 122:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- RCU (APIs prefixed with XMC_SCU_RESET_) <br>
 123:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Reset Init, Cause, Manual Reset Assert/Deassert <br>
 124:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- INTERRUPT (APIs prefixed with XMC_SCU_INTERRUPT_) <br>
 125:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Manual Assert/Deassert, Acknowledge etc <br>
 126:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- PARITY (APIs prefixed with XMC_SCU_PARITY_) <br>
 127:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Acknowledge etc <br>
 128:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- HIBERNATION (APIs prefixed with XMC_SCU_HIB_) <br>
 129:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Hibernation entry/exit config, entry/wakeup sequences, LPAC configuration etc <br>
 130:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- TRAP (APIs prefixed with XMC_SCU_TRAP_) <br>
 131:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Enable/Disable, Acknowledge etc <br>
 132:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 133:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 134:../Libraries/XMCLib/src/xmc4_scu.c **** 
 135:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 136:../Libraries/XMCLib/src/xmc4_scu.c ****  * HEADER FILES
 137:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 138:../Libraries/XMCLib/src/xmc4_scu.c **** #include "xmc_scu.h"
 139:../Libraries/XMCLib/src/xmc4_scu.c **** 
 140:../Libraries/XMCLib/src/xmc4_scu.c **** #if UC_FAMILY == XMC4
 141:../Libraries/XMCLib/src/xmc4_scu.c **** 
 142:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 143:../Libraries/XMCLib/src/xmc4_scu.c ****  * MACROS
 144:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 145:../Libraries/XMCLib/src/xmc4_scu.c **** #define FOSCREF   (2500000UL)    /**< Oscillator reference frequency (fOSCREF) monitored by Oscilla
 146:../Libraries/XMCLib/src/xmc4_scu.c **** #define FREQ_1MHZ (1000000UL)    /**< Used during calculation. */
 147:../Libraries/XMCLib/src/xmc4_scu.c **** 
 148:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OFI_FREQUENCY
 149:../Libraries/XMCLib/src/xmc4_scu.c **** #define OFI_FREQUENCY (24000000UL)    /**< Fast internal backup clock source. */
 150:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 151:../Libraries/XMCLib/src/xmc4_scu.c **** 
 152:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSI_FREQUENCY
 153:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSI_FREQUENCY (32768UL)    /**< Internal slow clock source. */
 154:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 155:../Libraries/XMCLib/src/xmc4_scu.c **** 
 156:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSCHP_FREQUENCY
 157:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSCHP_FREQUENCY (12000000U)    /**< External crystal High Precision Oscillator. */
 158:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 159:../Libraries/XMCLib/src/xmc4_scu.c **** 
 160:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
 161:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLLV_Msk | \
 162:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLSP_Msk)  /**< Used to verify the OSC fr
 163:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                           usable or not.*/
 164:../Libraries/XMCLib/src/xmc4_scu.c **** 
 165:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_START_GROUP    (0UL)    /**< The ADC group whose channel input is compared 
 166:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 167:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 168:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 169:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_END_GROUP      (1UL)    /**< The ADC group whose channel input is compared 
 170:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 171:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC end 
 172:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 173:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_START_ADC_CHANNEL  (6UL)    /**< The ADC channel whose channel input is compare
 174:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 175:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 176:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 177:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_END_ADC_CHANNEL    (7UL)    /**< The ADC channel whose channel input is compare
 178:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 179:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC ends
 180:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 181:../Libraries/XMCLib/src/xmc4_scu.c **** 
 182:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_GRPNUM(GROUP_NUM)   (((GROUP_NUM) == XMC_SCU_ORC_ADC_START_GROUP) || \
 183:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((GROUP_NUM) == XMC_SCU_ORC_ADC_END_GROUP) ) /**< Used to v
 184:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 185:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 186:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end group num
 187:../Libraries/XMCLib/src/xmc4_scu.c **** 
 188:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_CHNUM(CH_NUM)       (((CH_NUM) == XMC_SCU_ORC_START_ADC_CHANNEL) || \
 189:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((CH_NUM) == XMC_SCU_ORC_END_ADC_CHANNEL) )  /**< Used to v
 190:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 191:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 192:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end channel n
 193:../Libraries/XMCLib/src/xmc4_scu.c **** 
 194:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_INTERRUPT_EVENT_MAX            (32U)      /**< Maximum supported SCU events. */
 195:../Libraries/XMCLib/src/xmc4_scu.c **** 
 196:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_HDCR_HIBIOSEL_Size (4U)
 197:../Libraries/XMCLib/src/xmc4_scu.c **** 
 198:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN (0x2U)
 199:../Libraries/XMCLib/src/xmc4_scu.c **** 
 200:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB13V (0.0058F)
 201:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB33V (0.0225F)
 202:../Libraries/XMCLib/src/xmc4_scu.c **** 
 203:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 204:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL DATA
 205:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 206:../Libraries/XMCLib/src/xmc4_scu.c **** static XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler_list[XMC_SCU_INTERRUPT_EVENT_MAX]; /**< For 
 207:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                                func
 208:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                                occu
 209:../Libraries/XMCLib/src/xmc4_scu.c **** 
 210:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 211:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL ROUTINES
 212:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 213:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(UC_ID)
 214:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a non-weak function, which retrieves high precision external oscillator frequency. */
 215:../Libraries/XMCLib/src/xmc4_scu.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 216:../Libraries/XMCLib/src/xmc4_scu.c **** {
 217:../Libraries/XMCLib/src/xmc4_scu.c ****   return (OSCHP_FREQUENCY);
 218:../Libraries/XMCLib/src/xmc4_scu.c **** }
 219:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 220:../Libraries/XMCLib/src/xmc4_scu.c **** 
 221:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 222:../Libraries/XMCLib/src/xmc4_scu.c **** static void XMC_SCU_lDelay(uint32_t cycles);
 223:../Libraries/XMCLib/src/xmc4_scu.c **** 
 224:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 225:../Libraries/XMCLib/src/xmc4_scu.c ****  * API IMPLEMENTATION
 226:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 227:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 228:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_lDelay(uint32_t delay)
 229:../Libraries/XMCLib/src/xmc4_scu.c **** {
 326              	 .loc 3 229 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 80B5     	 push {r7,lr}
 331              	.LCFI28:
 332              	 .cfi_def_cfa_offset 8
 333              	 .cfi_offset 7,-8
 334              	 .cfi_offset 14,-4
 335 0002 84B0     	 sub sp,sp,#16
 336              	.LCFI29:
 337              	 .cfi_def_cfa_offset 24
 338 0004 00AF     	 add r7,sp,#0
 339              	.LCFI30:
 340              	 .cfi_def_cfa_register 7
 341 0006 7860     	 str r0,[r7,#4]
 230:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t i;
 231:../Libraries/XMCLib/src/xmc4_scu.c **** 
 232:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 342              	 .loc 3 232 0
 343 0008 FFF7FEFF 	 bl SystemCoreClockUpdate
 233:../Libraries/XMCLib/src/xmc4_scu.c ****   delay =  delay * (uint32_t)(SystemCoreClock / FREQ_1MHZ);
 344              	 .loc 3 233 0
 345 000c 0B4B     	 ldr r3,.L32
 346 000e 1B68     	 ldr r3,[r3]
 347 0010 0B4A     	 ldr r2,.L32+4
 348 0012 A2FB0323 	 umull r2,r3,r2,r3
 349 0016 9A0C     	 lsrs r2,r3,#18
 350 0018 7B68     	 ldr r3,[r7,#4]
 351 001a 02FB03F3 	 mul r3,r2,r3
 352 001e 7B60     	 str r3,[r7,#4]
 234:../Libraries/XMCLib/src/xmc4_scu.c **** 
 235:../Libraries/XMCLib/src/xmc4_scu.c ****   for (i = 0U; i < delay; ++i)
 353              	 .loc 3 235 0
 354 0020 0023     	 movs r3,#0
 355 0022 FB60     	 str r3,[r7,#12]
 356 0024 03E0     	 b .L30
 357              	.L31:
 236:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 237:../Libraries/XMCLib/src/xmc4_scu.c ****     __NOP();
 358              	 .loc 3 237 0 discriminator 3
 359              	
 360 0026 00BF     	 nop
 361              	
 235:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 362              	 .loc 3 235 0 discriminator 3
 363              	 .thumb
 364 0028 FB68     	 ldr r3,[r7,#12]
 365 002a 0133     	 adds r3,r3,#1
 366 002c FB60     	 str r3,[r7,#12]
 367              	.L30:
 235:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 368              	 .loc 3 235 0 is_stmt 0 discriminator 1
 369 002e FA68     	 ldr r2,[r7,#12]
 370 0030 7B68     	 ldr r3,[r7,#4]
 371 0032 9A42     	 cmp r2,r3
 372 0034 F7D3     	 bcc .L31
 238:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 239:../Libraries/XMCLib/src/xmc4_scu.c **** }
 373              	 .loc 3 239 0 is_stmt 1
 374 0036 1037     	 adds r7,r7,#16
 375              	.LCFI31:
 376              	 .cfi_def_cfa_offset 8
 377 0038 BD46     	 mov sp,r7
 378              	.LCFI32:
 379              	 .cfi_def_cfa_register 13
 380              	 
 381 003a 80BD     	 pop {r7,pc}
 382              	.L33:
 383              	 .align 2
 384              	.L32:
 385 003c 00000000 	 .word SystemCoreClock
 386 0040 83DE1B43 	 .word 1125899907
 387              	 .cfi_endproc
 388              	.LFE174:
 390              	 .section .text.XMC_SCU_INTERRUPT_EnableEvent,"ax",%progbits
 391              	 .align 2
 392              	 .global XMC_SCU_INTERRUPT_EnableEvent
 393              	 .thumb
 394              	 .thumb_func
 396              	XMC_SCU_INTERRUPT_EnableEvent:
 397              	.LFB175:
 240:../Libraries/XMCLib/src/xmc4_scu.c **** 
 241:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable the SCU event */
 242:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 243:../Libraries/XMCLib/src/xmc4_scu.c **** {
 398              	 .loc 3 243 0
 399              	 .cfi_startproc
 400              	 
 401              	 
 402              	 
 403 0000 80B4     	 push {r7}
 404              	.LCFI33:
 405              	 .cfi_def_cfa_offset 4
 406              	 .cfi_offset 7,-4
 407 0002 83B0     	 sub sp,sp,#12
 408              	.LCFI34:
 409              	 .cfi_def_cfa_offset 16
 410 0004 00AF     	 add r7,sp,#0
 411              	.LCFI35:
 412              	 .cfi_def_cfa_register 7
 413 0006 7860     	 str r0,[r7,#4]
 244:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK |= (uint32_t)event;
 414              	 .loc 3 244 0
 415 0008 0549     	 ldr r1,.L35
 416 000a 054B     	 ldr r3,.L35
 417 000c 9A68     	 ldr r2,[r3,#8]
 418 000e 7B68     	 ldr r3,[r7,#4]
 419 0010 1343     	 orrs r3,r3,r2
 420 0012 8B60     	 str r3,[r1,#8]
 245:../Libraries/XMCLib/src/xmc4_scu.c **** }
 421              	 .loc 3 245 0
 422 0014 0C37     	 adds r7,r7,#12
 423              	.LCFI36:
 424              	 .cfi_def_cfa_offset 4
 425 0016 BD46     	 mov sp,r7
 426              	.LCFI37:
 427              	 .cfi_def_cfa_register 13
 428              	 
 429 0018 5DF8047B 	 ldr r7,[sp],#4
 430              	.LCFI38:
 431              	 .cfi_restore 7
 432              	 .cfi_def_cfa_offset 0
 433 001c 7047     	 bx lr
 434              	.L36:
 435 001e 00BF     	 .align 2
 436              	.L35:
 437 0020 74400050 	 .word 1342193780
 438              	 .cfi_endproc
 439              	.LFE175:
 441              	 .section .text.XMC_SCU_INTERRUPT_DisableEvent,"ax",%progbits
 442              	 .align 2
 443              	 .global XMC_SCU_INTERRUPT_DisableEvent
 444              	 .thumb
 445              	 .thumb_func
 447              	XMC_SCU_INTERRUPT_DisableEvent:
 448              	.LFB176:
 246:../Libraries/XMCLib/src/xmc4_scu.c **** 
 247:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the SCU event */
 248:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 249:../Libraries/XMCLib/src/xmc4_scu.c **** {
 449              	 .loc 3 249 0
 450              	 .cfi_startproc
 451              	 
 452              	 
 453              	 
 454 0000 80B4     	 push {r7}
 455              	.LCFI39:
 456              	 .cfi_def_cfa_offset 4
 457              	 .cfi_offset 7,-4
 458 0002 83B0     	 sub sp,sp,#12
 459              	.LCFI40:
 460              	 .cfi_def_cfa_offset 16
 461 0004 00AF     	 add r7,sp,#0
 462              	.LCFI41:
 463              	 .cfi_def_cfa_register 7
 464 0006 7860     	 str r0,[r7,#4]
 250:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK &= (uint32_t)~event;
 465              	 .loc 3 250 0
 466 0008 0549     	 ldr r1,.L38
 467 000a 054B     	 ldr r3,.L38
 468 000c 9A68     	 ldr r2,[r3,#8]
 469 000e 7B68     	 ldr r3,[r7,#4]
 470 0010 DB43     	 mvns r3,r3
 471 0012 1340     	 ands r3,r3,r2
 472 0014 8B60     	 str r3,[r1,#8]
 251:../Libraries/XMCLib/src/xmc4_scu.c **** }
 473              	 .loc 3 251 0
 474 0016 0C37     	 adds r7,r7,#12
 475              	.LCFI42:
 476              	 .cfi_def_cfa_offset 4
 477 0018 BD46     	 mov sp,r7
 478              	.LCFI43:
 479              	 .cfi_def_cfa_register 13
 480              	 
 481 001a 5DF8047B 	 ldr r7,[sp],#4
 482              	.LCFI44:
 483              	 .cfi_restore 7
 484              	 .cfi_def_cfa_offset 0
 485 001e 7047     	 bx lr
 486              	.L39:
 487              	 .align 2
 488              	.L38:
 489 0020 74400050 	 .word 1342193780
 490              	 .cfi_endproc
 491              	.LFE176:
 493              	 .section .text.XMC_SCU_INTERRUPT_TriggerEvent,"ax",%progbits
 494              	 .align 2
 495              	 .global XMC_SCU_INTERRUPT_TriggerEvent
 496              	 .thumb
 497              	 .thumb_func
 499              	XMC_SCU_INTERRUPT_TriggerEvent:
 500              	.LFB177:
 252:../Libraries/XMCLib/src/xmc4_scu.c **** 
 253:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to trigger the SCU event */
 254:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 255:../Libraries/XMCLib/src/xmc4_scu.c **** {
 501              	 .loc 3 255 0
 502              	 .cfi_startproc
 503              	 
 504              	 
 505              	 
 506 0000 80B4     	 push {r7}
 507              	.LCFI45:
 508              	 .cfi_def_cfa_offset 4
 509              	 .cfi_offset 7,-4
 510 0002 83B0     	 sub sp,sp,#12
 511              	.LCFI46:
 512              	 .cfi_def_cfa_offset 16
 513 0004 00AF     	 add r7,sp,#0
 514              	.LCFI47:
 515              	 .cfi_def_cfa_register 7
 516 0006 7860     	 str r0,[r7,#4]
 256:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRSET |= (uint32_t)event;
 517              	 .loc 3 256 0
 518 0008 0549     	 ldr r1,.L41
 519 000a 054B     	 ldr r3,.L41
 520 000c 1A69     	 ldr r2,[r3,#16]
 521 000e 7B68     	 ldr r3,[r7,#4]
 522 0010 1343     	 orrs r3,r3,r2
 523 0012 0B61     	 str r3,[r1,#16]
 257:../Libraries/XMCLib/src/xmc4_scu.c **** }
 524              	 .loc 3 257 0
 525 0014 0C37     	 adds r7,r7,#12
 526              	.LCFI48:
 527              	 .cfi_def_cfa_offset 4
 528 0016 BD46     	 mov sp,r7
 529              	.LCFI49:
 530              	 .cfi_def_cfa_register 13
 531              	 
 532 0018 5DF8047B 	 ldr r7,[sp],#4
 533              	.LCFI50:
 534              	 .cfi_restore 7
 535              	 .cfi_def_cfa_offset 0
 536 001c 7047     	 bx lr
 537              	.L42:
 538 001e 00BF     	 .align 2
 539              	.L41:
 540 0020 74400050 	 .word 1342193780
 541              	 .cfi_endproc
 542              	.LFE177:
 544              	 .section .text.XMC_SCU_INTERUPT_GetEventStatus,"ax",%progbits
 545              	 .align 2
 546              	 .global XMC_SCU_INTERUPT_GetEventStatus
 547              	 .thumb
 548              	 .thumb_func
 550              	XMC_SCU_INTERUPT_GetEventStatus:
 551              	.LFB178:
 258:../Libraries/XMCLib/src/xmc4_scu.c **** 
 259:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the SCU event status */
 260:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void)
 261:../Libraries/XMCLib/src/xmc4_scu.c **** {
 552              	 .loc 3 261 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556              	 
 557 0000 80B4     	 push {r7}
 558              	.LCFI51:
 559              	 .cfi_def_cfa_offset 4
 560              	 .cfi_offset 7,-4
 561 0002 00AF     	 add r7,sp,#0
 562              	.LCFI52:
 563              	 .cfi_def_cfa_register 7
 262:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_INTERRUPT->SRRAW);
 564              	 .loc 3 262 0
 565 0004 034B     	 ldr r3,.L45
 566 0006 5B68     	 ldr r3,[r3,#4]
 263:../Libraries/XMCLib/src/xmc4_scu.c **** }
 567              	 .loc 3 263 0
 568 0008 1846     	 mov r0,r3
 569 000a BD46     	 mov sp,r7
 570              	.LCFI53:
 571              	 .cfi_def_cfa_register 13
 572              	 
 573 000c 5DF8047B 	 ldr r7,[sp],#4
 574              	.LCFI54:
 575              	 .cfi_restore 7
 576              	 .cfi_def_cfa_offset 0
 577 0010 7047     	 bx lr
 578              	.L46:
 579 0012 00BF     	 .align 2
 580              	.L45:
 581 0014 74400050 	 .word 1342193780
 582              	 .cfi_endproc
 583              	.LFE178:
 585              	 .section .text.XMC_SCU_INTERRUPT_ClearEventStatus,"ax",%progbits
 586              	 .align 2
 587              	 .global XMC_SCU_INTERRUPT_ClearEventStatus
 588              	 .thumb
 589              	 .thumb_func
 591              	XMC_SCU_INTERRUPT_ClearEventStatus:
 592              	.LFB179:
 264:../Libraries/XMCLib/src/xmc4_scu.c **** 
 265:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear the SCU event status */
 266:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event)
 267:../Libraries/XMCLib/src/xmc4_scu.c **** {
 593              	 .loc 3 267 0
 594              	 .cfi_startproc
 595              	 
 596              	 
 597              	 
 598 0000 80B4     	 push {r7}
 599              	.LCFI55:
 600              	 .cfi_def_cfa_offset 4
 601              	 .cfi_offset 7,-4
 602 0002 83B0     	 sub sp,sp,#12
 603              	.LCFI56:
 604              	 .cfi_def_cfa_offset 16
 605 0004 00AF     	 add r7,sp,#0
 606              	.LCFI57:
 607              	 .cfi_def_cfa_register 7
 608 0006 7860     	 str r0,[r7,#4]
 268:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRCLR = (uint32_t)event;
 609              	 .loc 3 268 0
 610 0008 034A     	 ldr r2,.L48
 611 000a 7B68     	 ldr r3,[r7,#4]
 612 000c D360     	 str r3,[r2,#12]
 269:../Libraries/XMCLib/src/xmc4_scu.c **** }
 613              	 .loc 3 269 0
 614 000e 0C37     	 adds r7,r7,#12
 615              	.LCFI58:
 616              	 .cfi_def_cfa_offset 4
 617 0010 BD46     	 mov sp,r7
 618              	.LCFI59:
 619              	 .cfi_def_cfa_register 13
 620              	 
 621 0012 5DF8047B 	 ldr r7,[sp],#4
 622              	.LCFI60:
 623              	 .cfi_restore 7
 624              	 .cfi_def_cfa_offset 0
 625 0016 7047     	 bx lr
 626              	.L49:
 627              	 .align 2
 628              	.L48:
 629 0018 74400050 	 .word 1342193780
 630              	 .cfi_endproc
 631              	.LFE179:
 633              	 .section .text.XMC_SCU_GetBootMode,"ax",%progbits
 634              	 .align 2
 635              	 .global XMC_SCU_GetBootMode
 636              	 .thumb
 637              	 .thumb_func
 639              	XMC_SCU_GetBootMode:
 640              	.LFB180:
 270:../Libraries/XMCLib/src/xmc4_scu.c **** 
 271:../Libraries/XMCLib/src/xmc4_scu.c **** 
 272:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the currently deployed device bootmode */
 273:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetBootMode(void)
 274:../Libraries/XMCLib/src/xmc4_scu.c **** {
 641              	 .loc 3 274 0
 642              	 .cfi_startproc
 643              	 
 644              	 
 645              	 
 646 0000 80B4     	 push {r7}
 647              	.LCFI61:
 648              	 .cfi_def_cfa_offset 4
 649              	 .cfi_offset 7,-4
 650 0002 00AF     	 add r7,sp,#0
 651              	.LCFI62:
 652              	 .cfi_def_cfa_register 7
 275:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(SCU_GENERAL->STCON & SCU_GENERAL_STCON_SWCON_Msk);
 653              	 .loc 3 275 0
 654 0004 044B     	 ldr r3,.L52
 655 0006 1B69     	 ldr r3,[r3,#16]
 656 0008 03F47063 	 and r3,r3,#3840
 276:../Libraries/XMCLib/src/xmc4_scu.c **** }
 657              	 .loc 3 276 0
 658 000c 1846     	 mov r0,r3
 659 000e BD46     	 mov sp,r7
 660              	.LCFI63:
 661              	 .cfi_def_cfa_register 13
 662              	 
 663 0010 5DF8047B 	 ldr r7,[sp],#4
 664              	.LCFI64:
 665              	 .cfi_restore 7
 666              	 .cfi_def_cfa_offset 0
 667 0014 7047     	 bx lr
 668              	.L53:
 669 0016 00BF     	 .align 2
 670              	.L52:
 671 0018 00400050 	 .word 1342193664
 672              	 .cfi_endproc
 673              	.LFE180:
 675              	 .section .text.XMC_SCU_SetBootMode,"ax",%progbits
 676              	 .align 2
 677              	 .global XMC_SCU_SetBootMode
 678              	 .thumb
 679              	 .thumb_func
 681              	XMC_SCU_SetBootMode:
 682              	.LFB181:
 277:../Libraries/XMCLib/src/xmc4_scu.c **** 
 278:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program a new device bootmode */
 279:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t bootmode)
 280:../Libraries/XMCLib/src/xmc4_scu.c **** {
 683              	 .loc 3 280 0
 684              	 .cfi_startproc
 685              	 
 686              	 
 687              	 
 688 0000 80B4     	 push {r7}
 689              	.LCFI65:
 690              	 .cfi_def_cfa_offset 4
 691              	 .cfi_offset 7,-4
 692 0002 83B0     	 sub sp,sp,#12
 693              	.LCFI66:
 694              	 .cfi_def_cfa_offset 16
 695 0004 00AF     	 add r7,sp,#0
 696              	.LCFI67:
 697              	 .cfi_def_cfa_register 7
 698 0006 0346     	 mov r3,r0
 699 0008 FB80     	 strh r3,[r7,#6]
 281:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->STCON = (uint32_t)bootmode;
 700              	 .loc 3 281 0
 701 000a 044A     	 ldr r2,.L55
 702 000c FB88     	 ldrh r3,[r7,#6]
 703 000e 1361     	 str r3,[r2,#16]
 282:../Libraries/XMCLib/src/xmc4_scu.c **** }
 704              	 .loc 3 282 0
 705 0010 0C37     	 adds r7,r7,#12
 706              	.LCFI68:
 707              	 .cfi_def_cfa_offset 4
 708 0012 BD46     	 mov sp,r7
 709              	.LCFI69:
 710              	 .cfi_def_cfa_register 13
 711              	 
 712 0014 5DF8047B 	 ldr r7,[sp],#4
 713              	.LCFI70:
 714              	 .cfi_restore 7
 715              	 .cfi_def_cfa_offset 0
 716 0018 7047     	 bx lr
 717              	.L56:
 718 001a 00BF     	 .align 2
 719              	.L55:
 720 001c 00400050 	 .word 1342193664
 721              	 .cfi_endproc
 722              	.LFE181:
 724              	 .section .text.XMC_SCU_ReadGPR,"ax",%progbits
 725              	 .align 2
 726              	 .global XMC_SCU_ReadGPR
 727              	 .thumb
 728              	 .thumb_func
 730              	XMC_SCU_ReadGPR:
 731              	.LFB182:
 283:../Libraries/XMCLib/src/xmc4_scu.c **** 
 284:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from General purpose register */
 285:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadGPR(const uint32_t index)
 286:../Libraries/XMCLib/src/xmc4_scu.c **** {
 732              	 .loc 3 286 0
 733              	 .cfi_startproc
 734              	 
 735              	 
 736              	 
 737 0000 80B4     	 push {r7}
 738              	.LCFI71:
 739              	 .cfi_def_cfa_offset 4
 740              	 .cfi_offset 7,-4
 741 0002 83B0     	 sub sp,sp,#12
 742              	.LCFI72:
 743              	 .cfi_def_cfa_offset 16
 744 0004 00AF     	 add r7,sp,#0
 745              	.LCFI73:
 746              	 .cfi_def_cfa_register 7
 747 0006 7860     	 str r0,[r7,#4]
 287:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->GPR[index]);
 748              	 .loc 3 287 0
 749 0008 054A     	 ldr r2,.L59
 750 000a 7B68     	 ldr r3,[r7,#4]
 751 000c 0A33     	 adds r3,r3,#10
 752 000e 9B00     	 lsls r3,r3,#2
 753 0010 1344     	 add r3,r3,r2
 754 0012 5B68     	 ldr r3,[r3,#4]
 288:../Libraries/XMCLib/src/xmc4_scu.c **** }
 755              	 .loc 3 288 0
 756 0014 1846     	 mov r0,r3
 757 0016 0C37     	 adds r7,r7,#12
 758              	.LCFI74:
 759              	 .cfi_def_cfa_offset 4
 760 0018 BD46     	 mov sp,r7
 761              	.LCFI75:
 762              	 .cfi_def_cfa_register 13
 763              	 
 764 001a 5DF8047B 	 ldr r7,[sp],#4
 765              	.LCFI76:
 766              	 .cfi_restore 7
 767              	 .cfi_def_cfa_offset 0
 768 001e 7047     	 bx lr
 769              	.L60:
 770              	 .align 2
 771              	.L59:
 772 0020 00400050 	 .word 1342193664
 773              	 .cfi_endproc
 774              	.LFE182:
 776              	 .section .text.XMC_SCU_WriteGPR,"ax",%progbits
 777              	 .align 2
 778              	 .global XMC_SCU_WriteGPR
 779              	 .thumb
 780              	 .thumb_func
 782              	XMC_SCU_WriteGPR:
 783              	.LFB183:
 289:../Libraries/XMCLib/src/xmc4_scu.c **** 
 290:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write to GPR */
 291:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data)
 292:../Libraries/XMCLib/src/xmc4_scu.c **** {
 784              	 .loc 3 292 0
 785              	 .cfi_startproc
 786              	 
 787              	 
 788              	 
 789 0000 80B4     	 push {r7}
 790              	.LCFI77:
 791              	 .cfi_def_cfa_offset 4
 792              	 .cfi_offset 7,-4
 793 0002 83B0     	 sub sp,sp,#12
 794              	.LCFI78:
 795              	 .cfi_def_cfa_offset 16
 796 0004 00AF     	 add r7,sp,#0
 797              	.LCFI79:
 798              	 .cfi_def_cfa_register 7
 799 0006 7860     	 str r0,[r7,#4]
 800 0008 3960     	 str r1,[r7]
 293:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GPR[index] = data;
 801              	 .loc 3 293 0
 802 000a 064A     	 ldr r2,.L62
 803 000c 7B68     	 ldr r3,[r7,#4]
 804 000e 0A33     	 adds r3,r3,#10
 805 0010 9B00     	 lsls r3,r3,#2
 806 0012 1344     	 add r3,r3,r2
 807 0014 3A68     	 ldr r2,[r7]
 808 0016 5A60     	 str r2,[r3,#4]
 294:../Libraries/XMCLib/src/xmc4_scu.c **** }
 809              	 .loc 3 294 0
 810 0018 0C37     	 adds r7,r7,#12
 811              	.LCFI80:
 812              	 .cfi_def_cfa_offset 4
 813 001a BD46     	 mov sp,r7
 814              	.LCFI81:
 815              	 .cfi_def_cfa_register 13
 816              	 
 817 001c 5DF8047B 	 ldr r7,[sp],#4
 818              	.LCFI82:
 819              	 .cfi_restore 7
 820              	 .cfi_def_cfa_offset 0
 821 0020 7047     	 bx lr
 822              	.L63:
 823 0022 00BF     	 .align 2
 824              	.L62:
 825 0024 00400050 	 .word 1342193664
 826              	 .cfi_endproc
 827              	.LFE183:
 829              	 .section .text.XMC_SCU_EnableOutOfRangeComparator,"ax",%progbits
 830              	 .align 2
 831              	 .global XMC_SCU_EnableOutOfRangeComparator
 832              	 .thumb
 833              	 .thumb_func
 835              	XMC_SCU_EnableOutOfRangeComparator:
 836              	.LFB184:
 295:../Libraries/XMCLib/src/xmc4_scu.c **** 
 296:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 297:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 298:../Libraries/XMCLib/src/xmc4_scu.c **** {
 837              	 .loc 3 298 0
 838              	 .cfi_startproc
 839              	 
 840              	 
 841              	 
 842 0000 80B4     	 push {r7}
 843              	.LCFI83:
 844              	 .cfi_def_cfa_offset 4
 845              	 .cfi_offset 7,-4
 846 0002 83B0     	 sub sp,sp,#12
 847              	.LCFI84:
 848              	 .cfi_def_cfa_offset 16
 849 0004 00AF     	 add r7,sp,#0
 850              	.LCFI85:
 851              	 .cfi_def_cfa_register 7
 852 0006 7860     	 str r0,[r7,#4]
 853 0008 3960     	 str r1,[r7]
 299:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Group Number", XMC_SCU_CHECK_GRPNUM(group));
 300:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Channel Number", XMC_SCU_CHECK_CHNUM(channel)
 301:../Libraries/XMCLib/src/xmc4_scu.c **** 
 302:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] |= (uint32_t)(1UL << channel);
 854              	 .loc 3 302 0
 855 000a 0A49     	 ldr r1,.L65
 856 000c 094A     	 ldr r2,.L65
 857 000e 7B68     	 ldr r3,[r7,#4]
 858 0010 2833     	 adds r3,r3,#40
 859 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 860 0016 3B68     	 ldr r3,[r7]
 861 0018 0120     	 movs r0,#1
 862 001a 00FA03F3 	 lsl r3,r0,r3
 863 001e 1A43     	 orrs r2,r2,r3
 864 0020 7B68     	 ldr r3,[r7,#4]
 865 0022 2833     	 adds r3,r3,#40
 866 0024 41F82320 	 str r2,[r1,r3,lsl#2]
 303:../Libraries/XMCLib/src/xmc4_scu.c **** }
 867              	 .loc 3 303 0
 868 0028 0C37     	 adds r7,r7,#12
 869              	.LCFI86:
 870              	 .cfi_def_cfa_offset 4
 871 002a BD46     	 mov sp,r7
 872              	.LCFI87:
 873              	 .cfi_def_cfa_register 13
 874              	 
 875 002c 5DF8047B 	 ldr r7,[sp],#4
 876              	.LCFI88:
 877              	 .cfi_restore 7
 878              	 .cfi_def_cfa_offset 0
 879 0030 7047     	 bx lr
 880              	.L66:
 881 0032 00BF     	 .align 2
 882              	.L65:
 883 0034 00400050 	 .word 1342193664
 884              	 .cfi_endproc
 885              	.LFE184:
 887              	 .section .text.XMC_SCU_DisableOutOfRangeComparator,"ax",%progbits
 888              	 .align 2
 889              	 .global XMC_SCU_DisableOutOfRangeComparator
 890              	 .thumb
 891              	 .thumb_func
 893              	XMC_SCU_DisableOutOfRangeComparator:
 894              	.LFB185:
 304:../Libraries/XMCLib/src/xmc4_scu.c **** 
 305:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 306:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 307:../Libraries/XMCLib/src/xmc4_scu.c **** {
 895              	 .loc 3 307 0
 896              	 .cfi_startproc
 897              	 
 898              	 
 899              	 
 900 0000 80B4     	 push {r7}
 901              	.LCFI89:
 902              	 .cfi_def_cfa_offset 4
 903              	 .cfi_offset 7,-4
 904 0002 83B0     	 sub sp,sp,#12
 905              	.LCFI90:
 906              	 .cfi_def_cfa_offset 16
 907 0004 00AF     	 add r7,sp,#0
 908              	.LCFI91:
 909              	 .cfi_def_cfa_register 7
 910 0006 7860     	 str r0,[r7,#4]
 911 0008 3960     	 str r1,[r7]
 308:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Group Number", XMC_SCU_CHECK_GRPNUM(group))
 309:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Channel Number", XMC_SCU_CHECK_CHNUM(channe
 310:../Libraries/XMCLib/src/xmc4_scu.c **** 
 311:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] &= (uint32_t)~(1UL << channel);
 912              	 .loc 3 311 0
 913 000a 0A49     	 ldr r1,.L68
 914 000c 094A     	 ldr r2,.L68
 915 000e 7B68     	 ldr r3,[r7,#4]
 916 0010 2833     	 adds r3,r3,#40
 917 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 918 0016 3B68     	 ldr r3,[r7]
 919 0018 0120     	 movs r0,#1
 920 001a 00FA03F3 	 lsl r3,r0,r3
 921 001e DB43     	 mvns r3,r3
 922 0020 1A40     	 ands r2,r2,r3
 923 0022 7B68     	 ldr r3,[r7,#4]
 924 0024 2833     	 adds r3,r3,#40
 925 0026 41F82320 	 str r2,[r1,r3,lsl#2]
 312:../Libraries/XMCLib/src/xmc4_scu.c **** }
 926              	 .loc 3 312 0
 927 002a 0C37     	 adds r7,r7,#12
 928              	.LCFI92:
 929              	 .cfi_def_cfa_offset 4
 930 002c BD46     	 mov sp,r7
 931              	.LCFI93:
 932              	 .cfi_def_cfa_register 13
 933              	 
 934 002e 5DF8047B 	 ldr r7,[sp],#4
 935              	.LCFI94:
 936              	 .cfi_restore 7
 937              	 .cfi_def_cfa_offset 0
 938 0032 7047     	 bx lr
 939              	.L69:
 940              	 .align 2
 941              	.L68:
 942 0034 00400050 	 .word 1342193664
 943              	 .cfi_endproc
 944              	.LFE185:
 946              	 .section .text.XMC_SCU_CalibrateTemperatureSensor,"ax",%progbits
 947              	 .align 2
 948              	 .global XMC_SCU_CalibrateTemperatureSensor
 949              	 .thumb
 950              	 .thumb_func
 952              	XMC_SCU_CalibrateTemperatureSensor:
 953              	.LFB186:
 313:../Libraries/XMCLib/src/xmc4_scu.c **** 
 314:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to calibrate temperature sensor */
 315:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain)
 316:../Libraries/XMCLib/src/xmc4_scu.c **** {
 954              	 .loc 3 316 0
 955              	 .cfi_startproc
 956              	 
 957              	 
 958              	 
 959 0000 80B4     	 push {r7}
 960              	.LCFI95:
 961              	 .cfi_def_cfa_offset 4
 962              	 .cfi_offset 7,-4
 963 0002 83B0     	 sub sp,sp,#12
 964              	.LCFI96:
 965              	 .cfi_def_cfa_offset 16
 966 0004 00AF     	 add r7,sp,#0
 967              	.LCFI97:
 968              	 .cfi_def_cfa_register 7
 969 0006 7860     	 str r0,[r7,#4]
 970 0008 3960     	 str r1,[r7]
 317:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 971              	 .loc 3 317 0
 972 000a 0749     	 ldr r1,.L71
 973 000c 7B68     	 ldr r3,[r7,#4]
 974 000e 1A01     	 lsls r2,r3,#4
 318:../Libraries/XMCLib/src/xmc4_scu.c ****                          (uint32_t)(gain << SCU_GENERAL_DTSCON_GAIN_Pos) |
 975              	 .loc 3 318 0
 976 0010 3B68     	 ldr r3,[r7]
 977 0012 DB02     	 lsls r3,r3,#11
 317:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 978              	 .loc 3 317 0
 979 0014 1343     	 orrs r3,r3,r2
 319:../Libraries/XMCLib/src/xmc4_scu.c ****                          (uint32_t)(0x4UL << SCU_GENERAL_DTSCON_REFTRIM_Pos) |
 980              	 .loc 3 319 0
 981 0016 43F40803 	 orr r3,r3,#8912896
 317:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 982              	 .loc 3 317 0
 983 001a C1F88C30 	 str r3,[r1,#140]
 320:../Libraries/XMCLib/src/xmc4_scu.c ****                          (uint32_t)(0x8UL << SCU_GENERAL_DTSCON_BGTRIM_Pos));
 321:../Libraries/XMCLib/src/xmc4_scu.c **** }
 984              	 .loc 3 321 0
 985 001e 0C37     	 adds r7,r7,#12
 986              	.LCFI98:
 987              	 .cfi_def_cfa_offset 4
 988 0020 BD46     	 mov sp,r7
 989              	.LCFI99:
 990              	 .cfi_def_cfa_register 13
 991              	 
 992 0022 5DF8047B 	 ldr r7,[sp],#4
 993              	.LCFI100:
 994              	 .cfi_restore 7
 995              	 .cfi_def_cfa_offset 0
 996 0026 7047     	 bx lr
 997              	.L72:
 998              	 .align 2
 999              	.L71:
 1000 0028 00400050 	 .word 1342193664
 1001              	 .cfi_endproc
 1002              	.LFE186:
 1004              	 .section .text.XMC_SCU_EnableTemperatureSensor,"ax",%progbits
 1005              	 .align 2
 1006              	 .global XMC_SCU_EnableTemperatureSensor
 1007              	 .thumb
 1008              	 .thumb_func
 1010              	XMC_SCU_EnableTemperatureSensor:
 1011              	.LFB187:
 322:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable die temperature measurement by powering the DTS module. */
 323:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableTemperatureSensor(void)
 324:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1012              	 .loc 3 324 0
 1013              	 .cfi_startproc
 1014              	 
 1015              	 
 1016              	 
 1017 0000 80B4     	 push {r7}
 1018              	.LCFI101:
 1019              	 .cfi_def_cfa_offset 4
 1020              	 .cfi_offset 7,-4
 1021 0002 00AF     	 add r7,sp,#0
 1022              	.LCFI102:
 1023              	 .cfi_def_cfa_register 7
 325:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~(SCU_GENERAL_DTSCON_PWD_Msk);
 1024              	 .loc 3 325 0
 1025 0004 054A     	 ldr r2,.L74
 1026 0006 054B     	 ldr r3,.L74
 1027 0008 D3F88C30 	 ldr r3,[r3,#140]
 1028 000c 23F00103 	 bic r3,r3,#1
 1029 0010 C2F88C30 	 str r3,[r2,#140]
 326:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1030              	 .loc 3 326 0
 1031 0014 BD46     	 mov sp,r7
 1032              	.LCFI103:
 1033              	 .cfi_def_cfa_register 13
 1034              	 
 1035 0016 5DF8047B 	 ldr r7,[sp],#4
 1036              	.LCFI104:
 1037              	 .cfi_restore 7
 1038              	 .cfi_def_cfa_offset 0
 1039 001a 7047     	 bx lr
 1040              	.L75:
 1041              	 .align 2
 1042              	.L74:
 1043 001c 00400050 	 .word 1342193664
 1044              	 .cfi_endproc
 1045              	.LFE187:
 1047              	 .section .text.XMC_SCU_DisableTemperatureSensor,"ax",%progbits
 1048              	 .align 2
 1049              	 .global XMC_SCU_DisableTemperatureSensor
 1050              	 .thumb
 1051              	 .thumb_func
 1053              	XMC_SCU_DisableTemperatureSensor:
 1054              	.LFB188:
 327:../Libraries/XMCLib/src/xmc4_scu.c **** 
 328:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable die temperature measurement by powering the DTS module off. */
 329:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableTemperatureSensor(void)
 330:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1055              	 .loc 3 330 0
 1056              	 .cfi_startproc
 1057              	 
 1058              	 
 1059              	 
 1060 0000 80B4     	 push {r7}
 1061              	.LCFI105:
 1062              	 .cfi_def_cfa_offset 4
 1063              	 .cfi_offset 7,-4
 1064 0002 00AF     	 add r7,sp,#0
 1065              	.LCFI106:
 1066              	 .cfi_def_cfa_register 7
 331:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_PWD_Msk;
 1067              	 .loc 3 331 0
 1068 0004 054A     	 ldr r2,.L77
 1069 0006 054B     	 ldr r3,.L77
 1070 0008 D3F88C30 	 ldr r3,[r3,#140]
 1071 000c 43F00103 	 orr r3,r3,#1
 1072 0010 C2F88C30 	 str r3,[r2,#140]
 332:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1073              	 .loc 3 332 0
 1074 0014 BD46     	 mov sp,r7
 1075              	.LCFI107:
 1076              	 .cfi_def_cfa_register 13
 1077              	 
 1078 0016 5DF8047B 	 ldr r7,[sp],#4
 1079              	.LCFI108:
 1080              	 .cfi_restore 7
 1081              	 .cfi_def_cfa_offset 0
 1082 001a 7047     	 bx lr
 1083              	.L78:
 1084              	 .align 2
 1085              	.L77:
 1086 001c 00400050 	 .word 1342193664
 1087              	 .cfi_endproc
 1088              	.LFE188:
 1090              	 .section .text.XMC_SCU_IsTemperatureSensorEnabled,"ax",%progbits
 1091              	 .align 2
 1092              	 .global XMC_SCU_IsTemperatureSensorEnabled
 1093              	 .thumb
 1094              	 .thumb_func
 1096              	XMC_SCU_IsTemperatureSensorEnabled:
 1097              	.LFB189:
 333:../Libraries/XMCLib/src/xmc4_scu.c **** 
 334:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to provide the die temperature sensor power status. */
 335:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorEnabled(void)
 336:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1098              	 .loc 3 336 0
 1099              	 .cfi_startproc
 1100              	 
 1101              	 
 1102              	 
 1103 0000 80B4     	 push {r7}
 1104              	.LCFI109:
 1105              	 .cfi_def_cfa_offset 4
 1106              	 .cfi_offset 7,-4
 1107 0002 00AF     	 add r7,sp,#0
 1108              	.LCFI110:
 1109              	 .cfi_def_cfa_register 7
 337:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSCON & SCU_GENERAL_DTSCON_PWD_Msk) == 0U);
 1110              	 .loc 3 337 0
 1111 0004 074B     	 ldr r3,.L81
 1112 0006 D3F88C30 	 ldr r3,[r3,#140]
 1113 000a 03F00103 	 and r3,r3,#1
 1114 000e 002B     	 cmp r3,#0
 1115 0010 0CBF     	 ite eq
 1116 0012 0123     	 moveq r3,#1
 1117 0014 0023     	 movne r3,#0
 1118 0016 DBB2     	 uxtb r3,r3
 338:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1119              	 .loc 3 338 0
 1120 0018 1846     	 mov r0,r3
 1121 001a BD46     	 mov sp,r7
 1122              	.LCFI111:
 1123              	 .cfi_def_cfa_register 13
 1124              	 
 1125 001c 5DF8047B 	 ldr r7,[sp],#4
 1126              	.LCFI112:
 1127              	 .cfi_restore 7
 1128              	 .cfi_def_cfa_offset 0
 1129 0020 7047     	 bx lr
 1130              	.L82:
 1131 0022 00BF     	 .align 2
 1132              	.L81:
 1133 0024 00400050 	 .word 1342193664
 1134              	 .cfi_endproc
 1135              	.LFE189:
 1137              	 .section .text.XMC_SCU_IsTemperatureSensorReady,"ax",%progbits
 1138              	 .align 2
 1139              	 .global XMC_SCU_IsTemperatureSensorReady
 1140              	 .thumb
 1141              	 .thumb_func
 1143              	XMC_SCU_IsTemperatureSensorReady:
 1144              	.LFB190:
 339:../Libraries/XMCLib/src/xmc4_scu.c **** 
 340:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check if the die temperature sensor is ready to start a measurement. */
 341:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorReady(void)
 342:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1145              	 .loc 3 342 0
 1146              	 .cfi_startproc
 1147              	 
 1148              	 
 1149              	 
 1150 0000 80B4     	 push {r7}
 1151              	.LCFI113:
 1152              	 .cfi_def_cfa_offset 4
 1153              	 .cfi_offset 7,-4
 1154 0002 00AF     	 add r7,sp,#0
 1155              	.LCFI114:
 1156              	 .cfi_def_cfa_register 7
 343:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RDY_Msk) != 0U);
 1157              	 .loc 3 343 0
 1158 0004 074B     	 ldr r3,.L85
 1159 0006 D3F89030 	 ldr r3,[r3,#144]
 1160 000a 03F48043 	 and r3,r3,#16384
 1161 000e 002B     	 cmp r3,#0
 1162 0010 14BF     	 ite ne
 1163 0012 0123     	 movne r3,#1
 1164 0014 0023     	 moveq r3,#0
 1165 0016 DBB2     	 uxtb r3,r3
 344:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1166              	 .loc 3 344 0
 1167 0018 1846     	 mov r0,r3
 1168 001a BD46     	 mov sp,r7
 1169              	.LCFI115:
 1170              	 .cfi_def_cfa_register 13
 1171              	 
 1172 001c 5DF8047B 	 ldr r7,[sp],#4
 1173              	.LCFI116:
 1174              	 .cfi_restore 7
 1175              	 .cfi_def_cfa_offset 0
 1176 0020 7047     	 bx lr
 1177              	.L86:
 1178 0022 00BF     	 .align 2
 1179              	.L85:
 1180 0024 00400050 	 .word 1342193664
 1181              	 .cfi_endproc
 1182              	.LFE190:
 1184              	 .section .text.XMC_SCU_StartTemperatureMeasurement,"ax",%progbits
 1185              	 .align 2
 1186              	 .global XMC_SCU_StartTemperatureMeasurement
 1187              	 .thumb
 1188              	 .thumb_func
 1190              	XMC_SCU_StartTemperatureMeasurement:
 1191              	.LFB191:
 345:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to start device temperature measurements */
 346:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void)
 347:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1192              	 .loc 3 347 0
 1193              	 .cfi_startproc
 1194              	 
 1195              	 
 1196 0000 80B5     	 push {r7,lr}
 1197              	.LCFI117:
 1198              	 .cfi_def_cfa_offset 8
 1199              	 .cfi_offset 7,-8
 1200              	 .cfi_offset 14,-4
 1201 0002 82B0     	 sub sp,sp,#8
 1202              	.LCFI118:
 1203              	 .cfi_def_cfa_offset 16
 1204 0004 00AF     	 add r7,sp,#0
 1205              	.LCFI119:
 1206              	 .cfi_def_cfa_register 7
 348:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status = XMC_SCU_STATUS_OK;
 1207              	 .loc 3 348 0
 1208 0006 0023     	 movs r3,#0
 1209 0008 FB71     	 strb r3,[r7,#7]
 349:../Libraries/XMCLib/src/xmc4_scu.c **** 
 350:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1210              	 .loc 3 350 0
 1211 000a FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1212 000e 0346     	 mov r3,r0
 1213 0010 83F00103 	 eor r3,r3,#1
 1214 0014 DBB2     	 uxtb r3,r3
 1215 0016 002B     	 cmp r3,#0
 1216 0018 01D0     	 beq .L88
 351:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 352:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 1217              	 .loc 3 352 0
 1218 001a 0123     	 movs r3,#1
 1219 001c FB71     	 strb r3,[r7,#7]
 1220              	.L88:
 353:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 354:../Libraries/XMCLib/src/xmc4_scu.c **** 
 355:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorBusy() == true)
 1221              	 .loc 3 355 0
 1222 001e FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorBusy
 1223 0022 0346     	 mov r3,r0
 1224 0024 002B     	 cmp r3,#0
 1225 0026 01D0     	 beq .L89
 356:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 357:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_BUSY;
 1226              	 .loc 3 357 0
 1227 0028 0223     	 movs r3,#2
 1228 002a FB71     	 strb r3,[r7,#7]
 1229              	.L89:
 358:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 359:../Libraries/XMCLib/src/xmc4_scu.c **** 
 360:../Libraries/XMCLib/src/xmc4_scu.c ****   /* And start the measurement */
 361:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_START_Msk;
 1230              	 .loc 3 361 0
 1231 002c 064A     	 ldr r2,.L91
 1232 002e 064B     	 ldr r3,.L91
 1233 0030 D3F88C30 	 ldr r3,[r3,#140]
 1234 0034 43F00203 	 orr r3,r3,#2
 1235 0038 C2F88C30 	 str r3,[r2,#140]
 362:../Libraries/XMCLib/src/xmc4_scu.c **** 
 363:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 1236              	 .loc 3 363 0
 1237 003c FB79     	 ldrb r3,[r7,#7]
 364:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1238              	 .loc 3 364 0
 1239 003e 1846     	 mov r0,r3
 1240 0040 0837     	 adds r7,r7,#8
 1241              	.LCFI120:
 1242              	 .cfi_def_cfa_offset 8
 1243 0042 BD46     	 mov sp,r7
 1244              	.LCFI121:
 1245              	 .cfi_def_cfa_register 13
 1246              	 
 1247 0044 80BD     	 pop {r7,pc}
 1248              	.L92:
 1249 0046 00BF     	 .align 2
 1250              	.L91:
 1251 0048 00400050 	 .word 1342193664
 1252              	 .cfi_endproc
 1253              	.LFE191:
 1255              	 .section .text.XMC_SCU_GetTemperatureMeasurement,"ax",%progbits
 1256              	 .align 2
 1257              	 .global XMC_SCU_GetTemperatureMeasurement
 1258              	 .thumb
 1259              	 .thumb_func
 1261              	XMC_SCU_GetTemperatureMeasurement:
 1262              	.LFB192:
 365:../Libraries/XMCLib/src/xmc4_scu.c **** 
 366:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the temperature measured */
 367:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetTemperatureMeasurement(void)
 368:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1263              	 .loc 3 368 0
 1264              	 .cfi_startproc
 1265              	 
 1266              	 
 1267 0000 80B5     	 push {r7,lr}
 1268              	.LCFI122:
 1269              	 .cfi_def_cfa_offset 8
 1270              	 .cfi_offset 7,-8
 1271              	 .cfi_offset 14,-4
 1272 0002 82B0     	 sub sp,sp,#8
 1273              	.LCFI123:
 1274              	 .cfi_def_cfa_offset 16
 1275 0004 00AF     	 add r7,sp,#0
 1276              	.LCFI124:
 1277              	 .cfi_def_cfa_register 7
 369:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t temperature;
 370:../Libraries/XMCLib/src/xmc4_scu.c **** 
 371:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1278              	 .loc 3 371 0
 1279 0006 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1280 000a 0346     	 mov r3,r0
 1281 000c 83F00103 	 eor r3,r3,#1
 1282 0010 DBB2     	 uxtb r3,r3
 1283 0012 002B     	 cmp r3,#0
 1284 0014 03D0     	 beq .L94
 372:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 373:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = 0x7FFFFFFFUL;
 1285              	 .loc 3 373 0
 1286 0016 6FF00043 	 mvn r3,#-2147483648
 1287 001a 7B60     	 str r3,[r7,#4]
 1288 001c 05E0     	 b .L95
 1289              	.L94:
 374:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 375:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 376:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 377:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = (uint32_t)((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RESULT_Msk) >> SCU_GENERAL
 1290              	 .loc 3 377 0
 1291 001e 054B     	 ldr r3,.L97
 1292 0020 D3F89030 	 ldr r3,[r3,#144]
 1293 0024 C3F30903 	 ubfx r3,r3,#0,#10
 1294 0028 7B60     	 str r3,[r7,#4]
 1295              	.L95:
 378:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 379:../Libraries/XMCLib/src/xmc4_scu.c **** 
 380:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((uint32_t)temperature);
 1296              	 .loc 3 380 0
 1297 002a 7B68     	 ldr r3,[r7,#4]
 381:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1298              	 .loc 3 381 0
 1299 002c 1846     	 mov r0,r3
 1300 002e 0837     	 adds r7,r7,#8
 1301              	.LCFI125:
 1302              	 .cfi_def_cfa_offset 8
 1303 0030 BD46     	 mov sp,r7
 1304              	.LCFI126:
 1305              	 .cfi_def_cfa_register 13
 1306              	 
 1307 0032 80BD     	 pop {r7,pc}
 1308              	.L98:
 1309              	 .align 2
 1310              	.L97:
 1311 0034 00400050 	 .word 1342193664
 1312              	 .cfi_endproc
 1313              	.LFE192:
 1315              	 .section .text.XMC_SCU_IsTemperatureSensorBusy,"ax",%progbits
 1316              	 .align 2
 1317              	 .global XMC_SCU_IsTemperatureSensorBusy
 1318              	 .thumb
 1319              	 .thumb_func
 1321              	XMC_SCU_IsTemperatureSensorBusy:
 1322              	.LFB193:
 382:../Libraries/XMCLib/src/xmc4_scu.c **** 
 383:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to know whether Die temperature sensor is busy */
 384:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorBusy(void)
 385:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1323              	 .loc 3 385 0
 1324              	 .cfi_startproc
 1325              	 
 1326              	 
 1327              	 
 1328 0000 80B4     	 push {r7}
 1329              	.LCFI127:
 1330              	 .cfi_def_cfa_offset 4
 1331              	 .cfi_offset 7,-4
 1332 0002 00AF     	 add r7,sp,#0
 1333              	.LCFI128:
 1334              	 .cfi_def_cfa_register 7
 386:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_BUSY_Msk) != 0U);
 1335              	 .loc 3 386 0
 1336 0004 074B     	 ldr r3,.L101
 1337 0006 D3F89030 	 ldr r3,[r3,#144]
 1338 000a 03F40043 	 and r3,r3,#32768
 1339 000e 002B     	 cmp r3,#0
 1340 0010 14BF     	 ite ne
 1341 0012 0123     	 movne r3,#1
 1342 0014 0023     	 moveq r3,#0
 1343 0016 DBB2     	 uxtb r3,r3
 387:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1344              	 .loc 3 387 0
 1345 0018 1846     	 mov r0,r3
 1346 001a BD46     	 mov sp,r7
 1347              	.LCFI129:
 1348              	 .cfi_def_cfa_register 13
 1349              	 
 1350 001c 5DF8047B 	 ldr r7,[sp],#4
 1351              	.LCFI130:
 1352              	 .cfi_restore 7
 1353              	 .cfi_def_cfa_offset 0
 1354 0020 7047     	 bx lr
 1355              	.L102:
 1356 0022 00BF     	 .align 2
 1357              	.L101:
 1358 0024 00400050 	 .word 1342193664
 1359              	 .cfi_endproc
 1360              	.LFE193:
 1362              	 .section .text.XMC_SCU_WriteToRetentionMemory,"ax",%progbits
 1363              	 .align 2
 1364              	 .global XMC_SCU_WriteToRetentionMemory
 1365              	 .thumb
 1366              	 .thumb_func
 1368              	XMC_SCU_WriteToRetentionMemory:
 1369              	.LFB194:
 388:../Libraries/XMCLib/src/xmc4_scu.c **** 
 389:../Libraries/XMCLib/src/xmc4_scu.c **** 
 390:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC41) || (UC_SERIES == XMC42) || (UC_SERIES == XMC44))
 391:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone past the ceiling */
 392:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HighTemperature(void)
 393:../Libraries/XMCLib/src/xmc4_scu.c **** {
 394:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 395:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 396:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 397:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 398:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 399:../Libraries/XMCLib/src/xmc4_scu.c **** 
 400:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 401:../Libraries/XMCLib/src/xmc4_scu.c **** 
 402:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */
 403:../Libraries/XMCLib/src/xmc4_scu.c ****   if (dtscon)
 404:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 405:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 406:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 407:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 408:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 409:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 410:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 411:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 412:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_OVERFL_Msk;
 413:../Libraries/XMCLib/src/xmc4_scu.c **** 
 414:../Libraries/XMCLib/src/xmc4_scu.c ****     if (dtempalarm)
 415:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 416:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 417:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 418:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 419:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 420:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 421:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 422:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 423:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 424:../Libraries/XMCLib/src/xmc4_scu.c **** }
 425:../Libraries/XMCLib/src/xmc4_scu.c **** 
 426:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program raw values of temperature limits into the DTS */
 427:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp)
 428:../Libraries/XMCLib/src/xmc4_scu.c **** {
 429:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up the DTS module */
 430:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~SCU_GENERAL_DTSCON_PWD_Msk;
 431:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = 0;
 432:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = (lower_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk);
 433:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM |= (uint32_t)((upper_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk) << SCU_GENERAL_
 434:../Libraries/XMCLib/src/xmc4_scu.c **** }
 435:../Libraries/XMCLib/src/xmc4_scu.c **** 
 436:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone below the stipulated limit */
 437:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_LowTemperature(void)
 438:../Libraries/XMCLib/src/xmc4_scu.c **** {
 439:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 440:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 441:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 442:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 443:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 444:../Libraries/XMCLib/src/xmc4_scu.c **** 
 445:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 446:../Libraries/XMCLib/src/xmc4_scu.c **** 
 447:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */
 448:../Libraries/XMCLib/src/xmc4_scu.c ****   if (dtscon)
 449:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 450:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 451:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 452:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 453:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 454:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 455:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 456:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 457:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_UNDERFL_Msk;
 458:../Libraries/XMCLib/src/xmc4_scu.c **** 
 459:../Libraries/XMCLib/src/xmc4_scu.c ****     if (dtempalarm)
 460:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 461:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 462:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 463:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 464:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 465:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 466:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 467:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 468:../Libraries/XMCLib/src/xmc4_scu.c **** 
 469:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 470:../Libraries/XMCLib/src/xmc4_scu.c **** }
 471:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 472:../Libraries/XMCLib/src/xmc4_scu.c **** 
 473:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write into Retention memory in hibernate domain */
 474:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data)
 475:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1370              	 .loc 3 475 0
 1371              	 .cfi_startproc
 1372              	 
 1373              	 
 1374              	 
 1375 0000 80B4     	 push {r7}
 1376              	.LCFI131:
 1377              	 .cfi_def_cfa_offset 4
 1378              	 .cfi_offset 7,-4
 1379 0002 85B0     	 sub sp,sp,#20
 1380              	.LCFI132:
 1381              	 .cfi_def_cfa_offset 24
 1382 0004 00AF     	 add r7,sp,#0
 1383              	.LCFI133:
 1384              	 .cfi_def_cfa_register 7
 1385 0006 7860     	 str r0,[r7,#4]
 1386 0008 3960     	 str r1,[r7]
 476:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 477:../Libraries/XMCLib/src/xmc4_scu.c **** 
 478:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */
 479:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = (uint32_t)((address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1387              	 .loc 3 479 0
 1388 000a 7B68     	 ldr r3,[r7,#4]
 1389 000c 1B04     	 lsls r3,r3,#16
 1390 000e 03F47023 	 and r3,r3,#983040
 1391 0012 FB60     	 str r3,[r7,#12]
 480:../Libraries/XMCLib/src/xmc4_scu.c **** 
 481:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 482:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr |= (uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk);
 1392              	 .loc 3 482 0
 1393 0014 FB68     	 ldr r3,[r7,#12]
 1394 0016 43F00103 	 orr r3,r3,#1
 1395 001a FB60     	 str r3,[r7,#12]
 483:../Libraries/XMCLib/src/xmc4_scu.c **** 
 484:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write desired data into RMDATA register */
 485:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMDATA = data;
 1396              	 .loc 3 485 0
 1397 001c 0A4A     	 ldr r2,.L105
 1398 001e 3B68     	 ldr r3,[r7]
 1399 0020 C2F8CC30 	 str r3,[r2,#204]
 486:../Libraries/XMCLib/src/xmc4_scu.c **** 
 487:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write address & direction of transfer into RMACR register */
 488:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1400              	 .loc 3 488 0
 1401 0024 084A     	 ldr r2,.L105
 1402 0026 FB68     	 ldr r3,[r7,#12]
 1403 0028 C2F8C830 	 str r3,[r2,#200]
 489:../Libraries/XMCLib/src/xmc4_scu.c **** 
 490:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 491:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1404              	 .loc 3 491 0
 1405 002c 00BF     	 nop
 1406              	.L104:
 1407              	 .loc 3 491 0 is_stmt 0 discriminator 1
 1408 002e 064B     	 ldr r3,.L105
 1409 0030 D3F8C430 	 ldr r3,[r3,#196]
 1410 0034 03F40053 	 and r3,r3,#8192
 1411 0038 002B     	 cmp r3,#0
 1412 003a F8D1     	 bne .L104
 492:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 493:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 494:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1413              	 .loc 3 494 0 is_stmt 1
 1414 003c 1437     	 adds r7,r7,#20
 1415              	.LCFI134:
 1416              	 .cfi_def_cfa_offset 4
 1417 003e BD46     	 mov sp,r7
 1418              	.LCFI135:
 1419              	 .cfi_def_cfa_register 13
 1420              	 
 1421 0040 5DF8047B 	 ldr r7,[sp],#4
 1422              	.LCFI136:
 1423              	 .cfi_restore 7
 1424              	 .cfi_def_cfa_offset 0
 1425 0044 7047     	 bx lr
 1426              	.L106:
 1427 0046 00BF     	 .align 2
 1428              	.L105:
 1429 0048 00400050 	 .word 1342193664
 1430              	 .cfi_endproc
 1431              	.LFE194:
 1433              	 .section .text.XMC_SCU_ReadFromRetentionMemory,"ax",%progbits
 1434              	 .align 2
 1435              	 .global XMC_SCU_ReadFromRetentionMemory
 1436              	 .thumb
 1437              	 .thumb_func
 1439              	XMC_SCU_ReadFromRetentionMemory:
 1440              	.LFB195:
 495:../Libraries/XMCLib/src/xmc4_scu.c **** 
 496:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from Retention memory in hibernate domain */
 497:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address)
 498:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1441              	 .loc 3 498 0
 1442              	 .cfi_startproc
 1443              	 
 1444              	 
 1445              	 
 1446 0000 80B4     	 push {r7}
 1447              	.LCFI137:
 1448              	 .cfi_def_cfa_offset 4
 1449              	 .cfi_offset 7,-4
 1450 0002 85B0     	 sub sp,sp,#20
 1451              	.LCFI138:
 1452              	 .cfi_def_cfa_offset 24
 1453 0004 00AF     	 add r7,sp,#0
 1454              	.LCFI139:
 1455              	 .cfi_def_cfa_register 7
 1456 0006 7860     	 str r0,[r7,#4]
 499:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 500:../Libraries/XMCLib/src/xmc4_scu.c **** 
 501:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */
 502:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = ((uint32_t)(address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1457              	 .loc 3 502 0
 1458 0008 7B68     	 ldr r3,[r7,#4]
 1459 000a 1B04     	 lsls r3,r3,#16
 1460 000c 03F47023 	 and r3,r3,#983040
 1461 0010 FB60     	 str r3,[r7,#12]
 503:../Libraries/XMCLib/src/xmc4_scu.c **** 
 504:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 505:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr &= ~((uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk));
 1462              	 .loc 3 505 0
 1463 0012 FB68     	 ldr r3,[r7,#12]
 1464 0014 23F00103 	 bic r3,r3,#1
 1465 0018 FB60     	 str r3,[r7,#12]
 506:../Libraries/XMCLib/src/xmc4_scu.c **** 
 507:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Writing an adress & direction of transfer into RMACR register */
 508:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1466              	 .loc 3 508 0
 1467 001a 0A4A     	 ldr r2,.L110
 1468 001c FB68     	 ldr r3,[r7,#12]
 1469 001e C2F8C830 	 str r3,[r2,#200]
 509:../Libraries/XMCLib/src/xmc4_scu.c **** 
 510:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 511:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1470              	 .loc 3 511 0
 1471 0022 00BF     	 nop
 1472              	.L108:
 1473              	 .loc 3 511 0 is_stmt 0 discriminator 1
 1474 0024 074B     	 ldr r3,.L110
 1475 0026 D3F8C430 	 ldr r3,[r3,#196]
 1476 002a 03F40053 	 and r3,r3,#8192
 1477 002e 002B     	 cmp r3,#0
 1478 0030 F8D1     	 bne .L108
 512:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 513:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 514:../Libraries/XMCLib/src/xmc4_scu.c **** 
 515:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->RMDATA);
 1479              	 .loc 3 515 0 is_stmt 1
 1480 0032 044B     	 ldr r3,.L110
 1481 0034 D3F8CC30 	 ldr r3,[r3,#204]
 516:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1482              	 .loc 3 516 0
 1483 0038 1846     	 mov r0,r3
 1484 003a 1437     	 adds r7,r7,#20
 1485              	.LCFI140:
 1486              	 .cfi_def_cfa_offset 4
 1487 003c BD46     	 mov sp,r7
 1488              	.LCFI141:
 1489              	 .cfi_def_cfa_register 13
 1490              	 
 1491 003e 5DF8047B 	 ldr r7,[sp],#4
 1492              	.LCFI142:
 1493              	 .cfi_restore 7
 1494              	 .cfi_def_cfa_offset 0
 1495 0042 7047     	 bx lr
 1496              	.L111:
 1497              	 .align 2
 1498              	.L110:
 1499 0044 00400050 	 .word 1342193664
 1500              	 .cfi_endproc
 1501              	.LFE195:
 1503              	 .section .text.XMC_SCU_CLOCK_Init,"ax",%progbits
 1504              	 .align 2
 1505              	 .global XMC_SCU_CLOCK_Init
 1506              	 .thumb
 1507              	 .thumb_func
 1509              	XMC_SCU_CLOCK_Init:
 1510              	.LFB196:
 517:../Libraries/XMCLib/src/xmc4_scu.c **** 
 518:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to initialize the clock tree */
 519:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config)
 520:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1511              	 .loc 3 520 0
 1512              	 .cfi_startproc
 1513              	 
 1514              	 
 1515 0000 B0B5     	 push {r4,r5,r7,lr}
 1516              	.LCFI143:
 1517              	 .cfi_def_cfa_offset 16
 1518              	 .cfi_offset 4,-16
 1519              	 .cfi_offset 5,-12
 1520              	 .cfi_offset 7,-8
 1521              	 .cfi_offset 14,-4
 1522 0002 84B0     	 sub sp,sp,#16
 1523              	.LCFI144:
 1524              	 .cfi_def_cfa_offset 32
 1525 0004 02AF     	 add r7,sp,#8
 1526              	.LCFI145:
 1527              	 .cfi_def_cfa 7,24
 1528 0006 7860     	 str r0,[r7,#4]
 521:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fsys_clkdiv != 0);
 522:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fcpu_clkdiv != 0);
 523:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fccu_clkdiv != 0);
 524:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fperipheral_clkdiv != 0);
 525:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.p_div != 0) &&
 526:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 527:../Libraries/XMCLib/src/xmc4_scu.c ****              (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 528:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.n_div != 0) &&
 529:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 530:../Libraries/XMCLib/src/xmc4_scu.c ****              (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 531:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", (config->syspll_config.k_div != 0) &&
 532:../Libraries/XMCLib/src/xmc4_scu.c ****              ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 533:../Libraries/XMCLib/src/xmc4_scu.c ****               (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 534:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL) ||
 535:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_OFI)) &&
 536:../Libraries/XMCLib/src/xmc4_scu.c ****              ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 537:../Libraries/XMCLib/src/xmc4_scu.c ****               (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 538:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fstdby_clksrc == XMC_SCU_HIB_STDBYCLKSRC_OSCULP) && (config->enable_oscu
 539:../Libraries/XMCLib/src/xmc4_scu.c ****              (config->fstdby_clksrc != XMC_SCU_HIB_STDBYCLKSRC_OSCULP));
 540:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.clksrc == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) &&
 541:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->enable_oschp == true)) || (config->syspll_config.clksrc != XMC_SCU_CLOCK
 542:../Libraries/XMCLib/src/xmc4_scu.c **** 
 543:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_OFI);
 1529              	 .loc 3 543 0
 1530 0008 0020     	 movs r0,#0
 1531 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 544:../Libraries/XMCLib/src/xmc4_scu.c **** 
 545:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_EnableHibernateDomain();
 1532              	 .loc 3 545 0
 1533 000e FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
 546:../Libraries/XMCLib/src/xmc4_scu.c **** 
 547:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_osculp == true)
 1534              	 .loc 3 547 0
 1535 0012 7B68     	 ldr r3,[r7,#4]
 1536 0014 DB79     	 ldrb r3,[r3,#7]
 1537 0016 002B     	 cmp r3,#0
 1538 0018 0AD0     	 beq .L113
 548:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 549:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableLowPowerOscillator();
 1539              	 .loc 3 549 0
 1540 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableLowPowerOscillator
 550:../Libraries/XMCLib/src/xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsLowPowerOscillatorStable() == false);
 1541              	 .loc 3 550 0
 1542 001e 00BF     	 nop
 1543              	.L114:
 1544              	 .loc 3 550 0 is_stmt 0 discriminator 1
 1545 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 1546 0024 0346     	 mov r3,r0
 1547 0026 83F00103 	 eor r3,r3,#1
 1548 002a DBB2     	 uxtb r3,r3
 1549 002c 002B     	 cmp r3,#0
 1550 002e F7D1     	 bne .L114
 1551              	.L113:
 551:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 552:../Libraries/XMCLib/src/xmc4_scu.c **** 
 553:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_SetStandbyClockSource(config->fstdby_clksrc);
 1552              	 .loc 3 553 0 is_stmt 1
 1553 0030 7B68     	 ldr r3,[r7,#4]
 1554 0032 5B7A     	 ldrb r3,[r3,#9]
 1555 0034 1846     	 mov r0,r3
 1556 0036 FFF7FEFF 	 bl XMC_SCU_HIB_SetStandbyClockSource
 554:../Libraries/XMCLib/src/xmc4_scu.c ****   while (XMC_SCU_GetMirrorStatus() != 0)
 1557              	 .loc 3 554 0
 1558 003a 00BF     	 nop
 1559              	.L115:
 1560              	 .loc 3 554 0 is_stmt 0 discriminator 1
 1561 003c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 1562 0040 0346     	 mov r3,r0
 1563 0042 002B     	 cmp r3,#0
 1564 0044 FAD1     	 bne .L115
 555:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 556:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until update of the stanby clock source is done in the HIB domain */
 557:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 558:../Libraries/XMCLib/src/xmc4_scu.c **** 
 559:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetBackupClockCalibrationMode(config->calibration_mode);
 1565              	 .loc 3 559 0 is_stmt 1
 1566 0046 7B68     	 ldr r3,[r7,#4]
 1567 0048 1B7A     	 ldrb r3,[r3,#8]
 1568 004a 1846     	 mov r0,r3
 1569 004c FFF7FEFF 	 bl XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 560:../Libraries/XMCLib/src/xmc4_scu.c **** 
 561:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockDivider((uint32_t)config->fsys_clkdiv);
 1570              	 .loc 3 561 0
 1571 0050 7B68     	 ldr r3,[r7,#4]
 1572 0052 1B7C     	 ldrb r3,[r3,#16]
 1573 0054 1846     	 mov r0,r3
 1574 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockDivider
 562:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCpuClockDivider((uint32_t)config->fcpu_clkdiv);
 1575              	 .loc 3 562 0
 1576 005a 7B68     	 ldr r3,[r7,#4]
 1577 005c 5B7C     	 ldrb r3,[r3,#17]
 1578 005e 1846     	 mov r0,r3
 1579 0060 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCpuClockDivider
 563:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCcuClockDivider((uint32_t)config->fccu_clkdiv);
 1580              	 .loc 3 563 0
 1581 0064 7B68     	 ldr r3,[r7,#4]
 1582 0066 9B7C     	 ldrb r3,[r3,#18]
 1583 0068 1846     	 mov r0,r3
 1584 006a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCcuClockDivider
 564:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetPeripheralClockDivider((uint32_t)config->fperipheral_clkdiv);
 1585              	 .loc 3 564 0
 1586 006e 7B68     	 ldr r3,[r7,#4]
 1587 0070 DB7C     	 ldrb r3,[r3,#19]
 1588 0072 1846     	 mov r0,r3
 1589 0074 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetPeripheralClockDivider
 565:../Libraries/XMCLib/src/xmc4_scu.c **** 
 566:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_oschp == true)
 1590              	 .loc 3 566 0
 1591 0078 7B68     	 ldr r3,[r7,#4]
 1592 007a 9B79     	 ldrb r3,[r3,#6]
 1593 007c 002B     	 cmp r3,#0
 1594 007e 0AD0     	 beq .L116
 567:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 568:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableHighPerformanceOscillator();
 1595              	 .loc 3 568 0
 1596 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 569:../Libraries/XMCLib/src/xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable() == false);
 1597              	 .loc 3 569 0
 1598 0084 00BF     	 nop
 1599              	.L117:
 1600              	 .loc 3 569 0 is_stmt 0 discriminator 1
 1601 0086 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 1602 008a 0346     	 mov r3,r0
 1603 008c 83F00103 	 eor r3,r3,#1
 1604 0090 DBB2     	 uxtb r3,r3
 1605 0092 002B     	 cmp r3,#0
 1606 0094 F7D1     	 bne .L117
 1607              	.L116:
 570:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 571:../Libraries/XMCLib/src/xmc4_scu.c **** 
 572:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED)
 1608              	 .loc 3 572 0 is_stmt 1
 1609 0096 7B68     	 ldr r3,[r7,#4]
 1610 0098 DB78     	 ldrb r3,[r3,#3]
 1611 009a 002B     	 cmp r3,#0
 1612 009c 09D1     	 bne .L118
 573:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 574:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Do not enable PLL Power Down Mode when the OSC Watchdog is enabled */
 575:../Libraries/XMCLib/src/xmc4_scu.c ****     if (config->enable_oschp == false)
 1613              	 .loc 3 575 0
 1614 009e 7B68     	 ldr r3,[r7,#4]
 1615 00a0 9B79     	 ldrb r3,[r3,#6]
 1616 00a2 83F00103 	 eor r3,r3,#1
 1617 00a6 DBB2     	 uxtb r3,r3
 1618 00a8 002B     	 cmp r3,#0
 1619 00aa 17D0     	 beq .L120
 576:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 577:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_DisableSystemPll();
 1620              	 .loc 3 577 0
 1621 00ac FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableSystemPll
 1622 00b0 14E0     	 b .L120
 1623              	.L118:
 578:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 579:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 580:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 581:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 582:../Libraries/XMCLib/src/xmc4_scu.c **** 
 583:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableSystemPll();
 1624              	 .loc 3 583 0
 1625 00b2 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableSystemPll
 584:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1626              	 .loc 3 584 0
 1627 00b6 7B68     	 ldr r3,[r7,#4]
 1628 00b8 9988     	 ldrh r1,[r3,#4]
 1629 00ba 7B68     	 ldr r3,[r7,#4]
 1630 00bc DA78     	 ldrb r2,[r3,#3]
 585:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 586:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.p_div,
 1631              	 .loc 3 586 0
 1632 00be 7B68     	 ldr r3,[r7,#4]
 1633 00c0 5B78     	 ldrb r3,[r3,#1]
 584:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1634              	 .loc 3 584 0
 1635 00c2 1D46     	 mov r5,r3
 587:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.n_div,
 1636              	 .loc 3 587 0
 1637 00c4 7B68     	 ldr r3,[r7,#4]
 1638 00c6 1B78     	 ldrb r3,[r3]
 584:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1639              	 .loc 3 584 0
 1640 00c8 1C46     	 mov r4,r3
 588:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.k_div);
 1641              	 .loc 3 588 0
 1642 00ca 7B68     	 ldr r3,[r7,#4]
 1643 00cc 9B78     	 ldrb r3,[r3,#2]
 584:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 1644              	 .loc 3 584 0
 1645 00ce 0093     	 str r3,[sp]
 1646 00d0 0846     	 mov r0,r1
 1647 00d2 1146     	 mov r1,r2
 1648 00d4 2A46     	 mov r2,r5
 1649 00d6 2346     	 mov r3,r4
 1650 00d8 FFF7FEFF 	 bl XMC_SCU_CLOCK_StartSystemPll
 1651              	.L120:
 589:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 590:../Libraries/XMCLib/src/xmc4_scu.c **** 
 591:../Libraries/XMCLib/src/xmc4_scu.c ****   /* use SYSPLL? */
 592:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL)
 1652              	 .loc 3 592 0
 1653 00dc 7B68     	 ldr r3,[r7,#4]
 1654 00de DB68     	 ldr r3,[r3,#12]
 1655 00e0 B3F5803F 	 cmp r3,#65536
 1656 00e4 03D1     	 bne .L121
 593:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 594:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_PLL);
 1657              	 .loc 3 594 0
 1658 00e6 4FF48030 	 mov r0,#65536
 1659 00ea FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 1660              	.L121:
 595:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 596:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 1661              	 .loc 3 596 0
 1662 00ee FFF7FEFF 	 bl SystemCoreClockUpdate
 597:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1663              	 .loc 3 597 0
 1664 00f2 0837     	 adds r7,r7,#8
 1665              	.LCFI146:
 1666              	 .cfi_def_cfa_offset 16
 1667 00f4 BD46     	 mov sp,r7
 1668              	.LCFI147:
 1669              	 .cfi_def_cfa_register 13
 1670              	 
 1671 00f6 B0BD     	 pop {r4,r5,r7,pc}
 1672              	 .cfi_endproc
 1673              	.LFE196:
 1675              	 .section .text.XMC_SCU_TRAP_Enable,"ax",%progbits
 1676              	 .align 2
 1677              	 .global XMC_SCU_TRAP_Enable
 1678              	 .thumb
 1679              	 .thumb_func
 1681              	XMC_SCU_TRAP_Enable:
 1682              	.LFB197:
 598:../Libraries/XMCLib/src/xmc4_scu.c **** 
 599:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a trap source */
 600:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Enable(const uint32_t trap)
 601:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1683              	 .loc 3 601 0
 1684              	 .cfi_startproc
 1685              	 
 1686              	 
 1687              	 
 1688 0000 80B4     	 push {r7}
 1689              	.LCFI148:
 1690              	 .cfi_def_cfa_offset 4
 1691              	 .cfi_offset 7,-4
 1692 0002 83B0     	 sub sp,sp,#12
 1693              	.LCFI149:
 1694              	 .cfi_def_cfa_offset 16
 1695 0004 00AF     	 add r7,sp,#0
 1696              	.LCFI150:
 1697              	 .cfi_def_cfa_register 7
 1698 0006 7860     	 str r0,[r7,#4]
 602:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS &= (uint32_t)~trap;
 1699              	 .loc 3 602 0
 1700 0008 0549     	 ldr r1,.L123
 1701 000a 054B     	 ldr r3,.L123
 1702 000c 9A68     	 ldr r2,[r3,#8]
 1703 000e 7B68     	 ldr r3,[r7,#4]
 1704 0010 DB43     	 mvns r3,r3
 1705 0012 1340     	 ands r3,r3,r2
 1706 0014 8B60     	 str r3,[r1,#8]
 603:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1707              	 .loc 3 603 0
 1708 0016 0C37     	 adds r7,r7,#12
 1709              	.LCFI151:
 1710              	 .cfi_def_cfa_offset 4
 1711 0018 BD46     	 mov sp,r7
 1712              	.LCFI152:
 1713              	 .cfi_def_cfa_register 13
 1714              	 
 1715 001a 5DF8047B 	 ldr r7,[sp],#4
 1716              	.LCFI153:
 1717              	 .cfi_restore 7
 1718              	 .cfi_def_cfa_offset 0
 1719 001e 7047     	 bx lr
 1720              	.L124:
 1721              	 .align 2
 1722              	.L123:
 1723 0020 60410050 	 .word 1342194016
 1724              	 .cfi_endproc
 1725              	.LFE197:
 1727              	 .section .text.XMC_SCU_TRAP_Disable,"ax",%progbits
 1728              	 .align 2
 1729              	 .global XMC_SCU_TRAP_Disable
 1730              	 .thumb
 1731              	 .thumb_func
 1733              	XMC_SCU_TRAP_Disable:
 1734              	.LFB198:
 604:../Libraries/XMCLib/src/xmc4_scu.c **** 
 605:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a trap source */
 606:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Disable(const uint32_t trap)
 607:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1735              	 .loc 3 607 0
 1736              	 .cfi_startproc
 1737              	 
 1738              	 
 1739              	 
 1740 0000 80B4     	 push {r7}
 1741              	.LCFI154:
 1742              	 .cfi_def_cfa_offset 4
 1743              	 .cfi_offset 7,-4
 1744 0002 83B0     	 sub sp,sp,#12
 1745              	.LCFI155:
 1746              	 .cfi_def_cfa_offset 16
 1747 0004 00AF     	 add r7,sp,#0
 1748              	.LCFI156:
 1749              	 .cfi_def_cfa_register 7
 1750 0006 7860     	 str r0,[r7,#4]
 608:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS |= (uint32_t)trap;
 1751              	 .loc 3 608 0
 1752 0008 0549     	 ldr r1,.L126
 1753 000a 054B     	 ldr r3,.L126
 1754 000c 9A68     	 ldr r2,[r3,#8]
 1755 000e 7B68     	 ldr r3,[r7,#4]
 1756 0010 1343     	 orrs r3,r3,r2
 1757 0012 8B60     	 str r3,[r1,#8]
 609:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1758              	 .loc 3 609 0
 1759 0014 0C37     	 adds r7,r7,#12
 1760              	.LCFI157:
 1761              	 .cfi_def_cfa_offset 4
 1762 0016 BD46     	 mov sp,r7
 1763              	.LCFI158:
 1764              	 .cfi_def_cfa_register 13
 1765              	 
 1766 0018 5DF8047B 	 ldr r7,[sp],#4
 1767              	.LCFI159:
 1768              	 .cfi_restore 7
 1769              	 .cfi_def_cfa_offset 0
 1770 001c 7047     	 bx lr
 1771              	.L127:
 1772 001e 00BF     	 .align 2
 1773              	.L126:
 1774 0020 60410050 	 .word 1342194016
 1775              	 .cfi_endproc
 1776              	.LFE198:
 1778              	 .section .text.XMC_SCU_TRAP_GetStatus,"ax",%progbits
 1779              	 .align 2
 1780              	 .global XMC_SCU_TRAP_GetStatus
 1781              	 .thumb
 1782              	 .thumb_func
 1784              	XMC_SCU_TRAP_GetStatus:
 1785              	.LFB199:
 610:../Libraries/XMCLib/src/xmc4_scu.c **** 
 611:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if a trap source has generated event */
 612:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_TRAP_GetStatus(void)
 613:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1786              	 .loc 3 613 0
 1787              	 .cfi_startproc
 1788              	 
 1789              	 
 1790              	 
 1791 0000 80B4     	 push {r7}
 1792              	.LCFI160:
 1793              	 .cfi_def_cfa_offset 4
 1794              	 .cfi_offset 7,-4
 1795 0002 00AF     	 add r7,sp,#0
 1796              	.LCFI161:
 1797              	 .cfi_def_cfa_register 7
 614:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_TRAP->TRAPRAW);
 1798              	 .loc 3 614 0
 1799 0004 034B     	 ldr r3,.L130
 1800 0006 5B68     	 ldr r3,[r3,#4]
 615:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1801              	 .loc 3 615 0
 1802 0008 1846     	 mov r0,r3
 1803 000a BD46     	 mov sp,r7
 1804              	.LCFI162:
 1805              	 .cfi_def_cfa_register 13
 1806              	 
 1807 000c 5DF8047B 	 ldr r7,[sp],#4
 1808              	.LCFI163:
 1809              	 .cfi_restore 7
 1810              	 .cfi_def_cfa_offset 0
 1811 0010 7047     	 bx lr
 1812              	.L131:
 1813 0012 00BF     	 .align 2
 1814              	.L130:
 1815 0014 60410050 	 .word 1342194016
 1816              	 .cfi_endproc
 1817              	.LFE199:
 1819              	 .section .text.XMC_SCU_TRAP_Trigger,"ax",%progbits
 1820              	 .align 2
 1821              	 .global XMC_SCU_TRAP_Trigger
 1822              	 .thumb
 1823              	 .thumb_func
 1825              	XMC_SCU_TRAP_Trigger:
 1826              	.LFB200:
 616:../Libraries/XMCLib/src/xmc4_scu.c **** 
 617:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually trigger a trap event */
 618:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Trigger(const uint32_t trap)
 619:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1827              	 .loc 3 619 0
 1828              	 .cfi_startproc
 1829              	 
 1830              	 
 1831              	 
 1832 0000 80B4     	 push {r7}
 1833              	.LCFI164:
 1834              	 .cfi_def_cfa_offset 4
 1835              	 .cfi_offset 7,-4
 1836 0002 83B0     	 sub sp,sp,#12
 1837              	.LCFI165:
 1838              	 .cfi_def_cfa_offset 16
 1839 0004 00AF     	 add r7,sp,#0
 1840              	.LCFI166:
 1841              	 .cfi_def_cfa_register 7
 1842 0006 7860     	 str r0,[r7,#4]
 620:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPSET = (uint32_t)trap;
 1843              	 .loc 3 620 0
 1844 0008 034A     	 ldr r2,.L133
 1845 000a 7B68     	 ldr r3,[r7,#4]
 1846 000c 1361     	 str r3,[r2,#16]
 621:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1847              	 .loc 3 621 0
 1848 000e 0C37     	 adds r7,r7,#12
 1849              	.LCFI167:
 1850              	 .cfi_def_cfa_offset 4
 1851 0010 BD46     	 mov sp,r7
 1852              	.LCFI168:
 1853              	 .cfi_def_cfa_register 13
 1854              	 
 1855 0012 5DF8047B 	 ldr r7,[sp],#4
 1856              	.LCFI169:
 1857              	 .cfi_restore 7
 1858              	 .cfi_def_cfa_offset 0
 1859 0016 7047     	 bx lr
 1860              	.L134:
 1861              	 .align 2
 1862              	.L133:
 1863 0018 60410050 	 .word 1342194016
 1864              	 .cfi_endproc
 1865              	.LFE200:
 1867              	 .section .text.XMC_SCU_TRAP_ClearStatus,"ax",%progbits
 1868              	 .align 2
 1869              	 .global XMC_SCU_TRAP_ClearStatus
 1870              	 .thumb
 1871              	 .thumb_func
 1873              	XMC_SCU_TRAP_ClearStatus:
 1874              	.LFB201:
 622:../Libraries/XMCLib/src/xmc4_scu.c **** 
 623:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear a trap event */
 624:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap)
 625:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1875              	 .loc 3 625 0
 1876              	 .cfi_startproc
 1877              	 
 1878              	 
 1879              	 
 1880 0000 80B4     	 push {r7}
 1881              	.LCFI170:
 1882              	 .cfi_def_cfa_offset 4
 1883              	 .cfi_offset 7,-4
 1884 0002 83B0     	 sub sp,sp,#12
 1885              	.LCFI171:
 1886              	 .cfi_def_cfa_offset 16
 1887 0004 00AF     	 add r7,sp,#0
 1888              	.LCFI172:
 1889              	 .cfi_def_cfa_register 7
 1890 0006 7860     	 str r0,[r7,#4]
 626:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = (uint32_t)trap;
 1891              	 .loc 3 626 0
 1892 0008 034A     	 ldr r2,.L136
 1893 000a 7B68     	 ldr r3,[r7,#4]
 1894 000c D360     	 str r3,[r2,#12]
 627:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1895              	 .loc 3 627 0
 1896 000e 0C37     	 adds r7,r7,#12
 1897              	.LCFI173:
 1898              	 .cfi_def_cfa_offset 4
 1899 0010 BD46     	 mov sp,r7
 1900              	.LCFI174:
 1901              	 .cfi_def_cfa_register 13
 1902              	 
 1903 0012 5DF8047B 	 ldr r7,[sp],#4
 1904              	.LCFI175:
 1905              	 .cfi_restore 7
 1906              	 .cfi_def_cfa_offset 0
 1907 0016 7047     	 bx lr
 1908              	.L137:
 1909              	 .align 2
 1910              	.L136:
 1911 0018 60410050 	 .word 1342194016
 1912              	 .cfi_endproc
 1913              	.LFE201:
 1915              	 .section .text.XMC_SCU_PARITY_ClearStatus,"ax",%progbits
 1916              	 .align 2
 1917              	 .global XMC_SCU_PARITY_ClearStatus
 1918              	 .thumb
 1919              	 .thumb_func
 1921              	XMC_SCU_PARITY_ClearStatus:
 1922              	.LFB202:
 628:../Libraries/XMCLib/src/xmc4_scu.c **** 
 629:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear parity error event */
 630:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory)
 631:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1923              	 .loc 3 631 0
 1924              	 .cfi_startproc
 1925              	 
 1926              	 
 1927              	 
 1928 0000 80B4     	 push {r7}
 1929              	.LCFI176:
 1930              	 .cfi_def_cfa_offset 4
 1931              	 .cfi_offset 7,-4
 1932 0002 83B0     	 sub sp,sp,#12
 1933              	.LCFI177:
 1934              	 .cfi_def_cfa_offset 16
 1935 0004 00AF     	 add r7,sp,#0
 1936              	.LCFI178:
 1937              	 .cfi_def_cfa_register 7
 1938 0006 7860     	 str r0,[r7,#4]
 632:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEFLAG |= (uint32_t)memory;
 1939              	 .loc 3 632 0
 1940 0008 0549     	 ldr r1,.L139
 1941 000a 054B     	 ldr r3,.L139
 1942 000c 5A69     	 ldr r2,[r3,#20]
 1943 000e 7B68     	 ldr r3,[r7,#4]
 1944 0010 1343     	 orrs r3,r3,r2
 1945 0012 4B61     	 str r3,[r1,#20]
 633:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1946              	 .loc 3 633 0
 1947 0014 0C37     	 adds r7,r7,#12
 1948              	.LCFI179:
 1949              	 .cfi_def_cfa_offset 4
 1950 0016 BD46     	 mov sp,r7
 1951              	.LCFI180:
 1952              	 .cfi_def_cfa_register 13
 1953              	 
 1954 0018 5DF8047B 	 ldr r7,[sp],#4
 1955              	.LCFI181:
 1956              	 .cfi_restore 7
 1957              	 .cfi_def_cfa_offset 0
 1958 001c 7047     	 bx lr
 1959              	.L140:
 1960 001e 00BF     	 .align 2
 1961              	.L139:
 1962 0020 3C410050 	 .word 1342193980
 1963              	 .cfi_endproc
 1964              	.LFE202:
 1966              	 .section .text.XMC_SCU_PARITY_GetStatus,"ax",%progbits
 1967              	 .align 2
 1968              	 .global XMC_SCU_PARITY_GetStatus
 1969              	 .thumb
 1970              	 .thumb_func
 1972              	XMC_SCU_PARITY_GetStatus:
 1973              	.LFB203:
 634:../Libraries/XMCLib/src/xmc4_scu.c **** 
 635:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if the specified parity error has occured or not */
 636:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_PARITY_GetStatus(void)
 637:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1974              	 .loc 3 637 0
 1975              	 .cfi_startproc
 1976              	 
 1977              	 
 1978              	 
 1979 0000 80B4     	 push {r7}
 1980              	.LCFI182:
 1981              	 .cfi_def_cfa_offset 4
 1982              	 .cfi_offset 7,-4
 1983 0002 00AF     	 add r7,sp,#0
 1984              	.LCFI183:
 1985              	 .cfi_def_cfa_register 7
 638:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_PARITY->PEFLAG);
 1986              	 .loc 3 638 0
 1987 0004 034B     	 ldr r3,.L143
 1988 0006 5B69     	 ldr r3,[r3,#20]
 639:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1989              	 .loc 3 639 0
 1990 0008 1846     	 mov r0,r3
 1991 000a BD46     	 mov sp,r7
 1992              	.LCFI184:
 1993              	 .cfi_def_cfa_register 13
 1994              	 
 1995 000c 5DF8047B 	 ldr r7,[sp],#4
 1996              	.LCFI185:
 1997              	 .cfi_restore 7
 1998              	 .cfi_def_cfa_offset 0
 1999 0010 7047     	 bx lr
 2000              	.L144:
 2001 0012 00BF     	 .align 2
 2002              	.L143:
 2003 0014 3C410050 	 .word 1342193980
 2004              	 .cfi_endproc
 2005              	.LFE203:
 2007              	 .section .text.XMC_SCU_PARITY_Enable,"ax",%progbits
 2008              	 .align 2
 2009              	 .global XMC_SCU_PARITY_Enable
 2010              	 .thumb
 2011              	 .thumb_func
 2013              	XMC_SCU_PARITY_Enable:
 2014              	.LFB204:
 640:../Libraries/XMCLib/src/xmc4_scu.c **** 
 641:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable parity error checking for the selected on-chip RAM type */
 642:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Enable(const uint32_t memory)
 643:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2015              	 .loc 3 643 0
 2016              	 .cfi_startproc
 2017              	 
 2018              	 
 2019              	 
 2020 0000 80B4     	 push {r7}
 2021              	.LCFI186:
 2022              	 .cfi_def_cfa_offset 4
 2023              	 .cfi_offset 7,-4
 2024 0002 83B0     	 sub sp,sp,#12
 2025              	.LCFI187:
 2026              	 .cfi_def_cfa_offset 16
 2027 0004 00AF     	 add r7,sp,#0
 2028              	.LCFI188:
 2029              	 .cfi_def_cfa_register 7
 2030 0006 7860     	 str r0,[r7,#4]
 644:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN |= (uint32_t)memory;
 2031              	 .loc 3 644 0
 2032 0008 0549     	 ldr r1,.L146
 2033 000a 054B     	 ldr r3,.L146
 2034 000c 1A68     	 ldr r2,[r3]
 2035 000e 7B68     	 ldr r3,[r7,#4]
 2036 0010 1343     	 orrs r3,r3,r2
 2037 0012 0B60     	 str r3,[r1]
 645:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2038              	 .loc 3 645 0
 2039 0014 0C37     	 adds r7,r7,#12
 2040              	.LCFI189:
 2041              	 .cfi_def_cfa_offset 4
 2042 0016 BD46     	 mov sp,r7
 2043              	.LCFI190:
 2044              	 .cfi_def_cfa_register 13
 2045              	 
 2046 0018 5DF8047B 	 ldr r7,[sp],#4
 2047              	.LCFI191:
 2048              	 .cfi_restore 7
 2049              	 .cfi_def_cfa_offset 0
 2050 001c 7047     	 bx lr
 2051              	.L147:
 2052 001e 00BF     	 .align 2
 2053              	.L146:
 2054 0020 3C410050 	 .word 1342193980
 2055              	 .cfi_endproc
 2056              	.LFE204:
 2058              	 .section .text.XMC_SCU_PARITY_Disable,"ax",%progbits
 2059              	 .align 2
 2060              	 .global XMC_SCU_PARITY_Disable
 2061              	 .thumb
 2062              	 .thumb_func
 2064              	XMC_SCU_PARITY_Disable:
 2065              	.LFB205:
 646:../Libraries/XMCLib/src/xmc4_scu.c **** 
 647:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable parity error checking for the selected on-chip RAM type */
 648:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Disable(const uint32_t memory)
 649:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2066              	 .loc 3 649 0
 2067              	 .cfi_startproc
 2068              	 
 2069              	 
 2070              	 
 2071 0000 80B4     	 push {r7}
 2072              	.LCFI192:
 2073              	 .cfi_def_cfa_offset 4
 2074              	 .cfi_offset 7,-4
 2075 0002 83B0     	 sub sp,sp,#12
 2076              	.LCFI193:
 2077              	 .cfi_def_cfa_offset 16
 2078 0004 00AF     	 add r7,sp,#0
 2079              	.LCFI194:
 2080              	 .cfi_def_cfa_register 7
 2081 0006 7860     	 str r0,[r7,#4]
 650:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN &= (uint32_t)~memory;
 2082              	 .loc 3 650 0
 2083 0008 0549     	 ldr r1,.L149
 2084 000a 054B     	 ldr r3,.L149
 2085 000c 1A68     	 ldr r2,[r3]
 2086 000e 7B68     	 ldr r3,[r7,#4]
 2087 0010 DB43     	 mvns r3,r3
 2088 0012 1340     	 ands r3,r3,r2
 2089 0014 0B60     	 str r3,[r1]
 651:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2090              	 .loc 3 651 0
 2091 0016 0C37     	 adds r7,r7,#12
 2092              	.LCFI195:
 2093              	 .cfi_def_cfa_offset 4
 2094 0018 BD46     	 mov sp,r7
 2095              	.LCFI196:
 2096              	 .cfi_def_cfa_register 13
 2097              	 
 2098 001a 5DF8047B 	 ldr r7,[sp],#4
 2099              	.LCFI197:
 2100              	 .cfi_restore 7
 2101              	 .cfi_def_cfa_offset 0
 2102 001e 7047     	 bx lr
 2103              	.L150:
 2104              	 .align 2
 2105              	.L149:
 2106 0020 3C410050 	 .word 1342193980
 2107              	 .cfi_endproc
 2108              	.LFE205:
 2110              	 .section .text.XMC_SCU_PARITY_EnableTrapGeneration,"ax",%progbits
 2111              	 .align 2
 2112              	 .global XMC_SCU_PARITY_EnableTrapGeneration
 2113              	 .thumb
 2114              	 .thumb_func
 2116              	XMC_SCU_PARITY_EnableTrapGeneration:
 2117              	.LFB206:
 652:../Libraries/XMCLib/src/xmc4_scu.c **** 
 653:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable trap assertion for the parity error source */
 654:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory)
 655:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2118              	 .loc 3 655 0
 2119              	 .cfi_startproc
 2120              	 
 2121              	 
 2122              	 
 2123 0000 80B4     	 push {r7}
 2124              	.LCFI198:
 2125              	 .cfi_def_cfa_offset 4
 2126              	 .cfi_offset 7,-4
 2127 0002 83B0     	 sub sp,sp,#12
 2128              	.LCFI199:
 2129              	 .cfi_def_cfa_offset 16
 2130 0004 00AF     	 add r7,sp,#0
 2131              	.LCFI200:
 2132              	 .cfi_def_cfa_register 7
 2133 0006 7860     	 str r0,[r7,#4]
 656:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE |= (uint32_t)memory;
 2134              	 .loc 3 656 0
 2135 0008 0549     	 ldr r1,.L152
 2136 000a 054B     	 ldr r3,.L152
 2137 000c 9A68     	 ldr r2,[r3,#8]
 2138 000e 7B68     	 ldr r3,[r7,#4]
 2139 0010 1343     	 orrs r3,r3,r2
 2140 0012 8B60     	 str r3,[r1,#8]
 657:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2141              	 .loc 3 657 0
 2142 0014 0C37     	 adds r7,r7,#12
 2143              	.LCFI201:
 2144              	 .cfi_def_cfa_offset 4
 2145 0016 BD46     	 mov sp,r7
 2146              	.LCFI202:
 2147              	 .cfi_def_cfa_register 13
 2148              	 
 2149 0018 5DF8047B 	 ldr r7,[sp],#4
 2150              	.LCFI203:
 2151              	 .cfi_restore 7
 2152              	 .cfi_def_cfa_offset 0
 2153 001c 7047     	 bx lr
 2154              	.L153:
 2155 001e 00BF     	 .align 2
 2156              	.L152:
 2157 0020 3C410050 	 .word 1342193980
 2158              	 .cfi_endproc
 2159              	.LFE206:
 2161              	 .section .text.XMC_SCU_PARITY_DisableTrapGeneration,"ax",%progbits
 2162              	 .align 2
 2163              	 .global XMC_SCU_PARITY_DisableTrapGeneration
 2164              	 .thumb
 2165              	 .thumb_func
 2167              	XMC_SCU_PARITY_DisableTrapGeneration:
 2168              	.LFB207:
 658:../Libraries/XMCLib/src/xmc4_scu.c **** 
 659:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the assertion of trap for the parity error source */
 660:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory)
 661:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2169              	 .loc 3 661 0
 2170              	 .cfi_startproc
 2171              	 
 2172              	 
 2173              	 
 2174 0000 80B4     	 push {r7}
 2175              	.LCFI204:
 2176              	 .cfi_def_cfa_offset 4
 2177              	 .cfi_offset 7,-4
 2178 0002 83B0     	 sub sp,sp,#12
 2179              	.LCFI205:
 2180              	 .cfi_def_cfa_offset 16
 2181 0004 00AF     	 add r7,sp,#0
 2182              	.LCFI206:
 2183              	 .cfi_def_cfa_register 7
 2184 0006 7860     	 str r0,[r7,#4]
 662:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE &= (uint32_t)~memory;
 2185              	 .loc 3 662 0
 2186 0008 0549     	 ldr r1,.L155
 2187 000a 054B     	 ldr r3,.L155
 2188 000c 9A68     	 ldr r2,[r3,#8]
 2189 000e 7B68     	 ldr r3,[r7,#4]
 2190 0010 DB43     	 mvns r3,r3
 2191 0012 1340     	 ands r3,r3,r2
 2192 0014 8B60     	 str r3,[r1,#8]
 663:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2193              	 .loc 3 663 0
 2194 0016 0C37     	 adds r7,r7,#12
 2195              	.LCFI207:
 2196              	 .cfi_def_cfa_offset 4
 2197 0018 BD46     	 mov sp,r7
 2198              	.LCFI208:
 2199              	 .cfi_def_cfa_register 13
 2200              	 
 2201 001a 5DF8047B 	 ldr r7,[sp],#4
 2202              	.LCFI209:
 2203              	 .cfi_restore 7
 2204              	 .cfi_def_cfa_offset 0
 2205 001e 7047     	 bx lr
 2206              	.L156:
 2207              	 .align 2
 2208              	.L155:
 2209 0020 3C410050 	 .word 1342193980
 2210              	 .cfi_endproc
 2211              	.LFE207:
 2213              	 .section .text.XMC_SCU_INTERRUPT_EnableNmiRequest,"ax",%progbits
 2214              	 .align 2
 2215              	 .global XMC_SCU_INTERRUPT_EnableNmiRequest
 2216              	 .thumb
 2217              	 .thumb_func
 2219              	XMC_SCU_INTERRUPT_EnableNmiRequest:
 2220              	.LFB208:
 664:../Libraries/XMCLib/src/xmc4_scu.c **** 
 665:../Libraries/XMCLib/src/xmc4_scu.c **** /* Enables a NMI source */
 666:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request)
 667:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2221              	 .loc 3 667 0
 2222              	 .cfi_startproc
 2223              	 
 2224              	 
 2225              	 
 2226 0000 80B4     	 push {r7}
 2227              	.LCFI210:
 2228              	 .cfi_def_cfa_offset 4
 2229              	 .cfi_offset 7,-4
 2230 0002 83B0     	 sub sp,sp,#12
 2231              	.LCFI211:
 2232              	 .cfi_def_cfa_offset 16
 2233 0004 00AF     	 add r7,sp,#0
 2234              	.LCFI212:
 2235              	 .cfi_def_cfa_register 7
 2236 0006 7860     	 str r0,[r7,#4]
 668:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN |= (uint32_t)request;
 2237              	 .loc 3 668 0
 2238 0008 0549     	 ldr r1,.L158
 2239 000a 054B     	 ldr r3,.L158
 2240 000c 5A69     	 ldr r2,[r3,#20]
 2241 000e 7B68     	 ldr r3,[r7,#4]
 2242 0010 1343     	 orrs r3,r3,r2
 2243 0012 4B61     	 str r3,[r1,#20]
 669:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2244              	 .loc 3 669 0
 2245 0014 0C37     	 adds r7,r7,#12
 2246              	.LCFI213:
 2247              	 .cfi_def_cfa_offset 4
 2248 0016 BD46     	 mov sp,r7
 2249              	.LCFI214:
 2250              	 .cfi_def_cfa_register 13
 2251              	 
 2252 0018 5DF8047B 	 ldr r7,[sp],#4
 2253              	.LCFI215:
 2254              	 .cfi_restore 7
 2255              	 .cfi_def_cfa_offset 0
 2256 001c 7047     	 bx lr
 2257              	.L159:
 2258 001e 00BF     	 .align 2
 2259              	.L158:
 2260 0020 74400050 	 .word 1342193780
 2261              	 .cfi_endproc
 2262              	.LFE208:
 2264              	 .section .text.XMC_SCU_INTERRUPT_DisableNmiRequest,"ax",%progbits
 2265              	 .align 2
 2266              	 .global XMC_SCU_INTERRUPT_DisableNmiRequest
 2267              	 .thumb
 2268              	 .thumb_func
 2270              	XMC_SCU_INTERRUPT_DisableNmiRequest:
 2271              	.LFB209:
 670:../Libraries/XMCLib/src/xmc4_scu.c **** 
 671:../Libraries/XMCLib/src/xmc4_scu.c **** /* Disables a NMI source */
 672:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request)
 673:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2272              	 .loc 3 673 0
 2273              	 .cfi_startproc
 2274              	 
 2275              	 
 2276              	 
 2277 0000 80B4     	 push {r7}
 2278              	.LCFI216:
 2279              	 .cfi_def_cfa_offset 4
 2280              	 .cfi_offset 7,-4
 2281 0002 83B0     	 sub sp,sp,#12
 2282              	.LCFI217:
 2283              	 .cfi_def_cfa_offset 16
 2284 0004 00AF     	 add r7,sp,#0
 2285              	.LCFI218:
 2286              	 .cfi_def_cfa_register 7
 2287 0006 7860     	 str r0,[r7,#4]
 674:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN &= (uint32_t)~request;
 2288              	 .loc 3 674 0
 2289 0008 0549     	 ldr r1,.L161
 2290 000a 054B     	 ldr r3,.L161
 2291 000c 5A69     	 ldr r2,[r3,#20]
 2292 000e 7B68     	 ldr r3,[r7,#4]
 2293 0010 DB43     	 mvns r3,r3
 2294 0012 1340     	 ands r3,r3,r2
 2295 0014 4B61     	 str r3,[r1,#20]
 675:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2296              	 .loc 3 675 0
 2297 0016 0C37     	 adds r7,r7,#12
 2298              	.LCFI219:
 2299              	 .cfi_def_cfa_offset 4
 2300 0018 BD46     	 mov sp,r7
 2301              	.LCFI220:
 2302              	 .cfi_def_cfa_register 13
 2303              	 
 2304 001a 5DF8047B 	 ldr r7,[sp],#4
 2305              	.LCFI221:
 2306              	 .cfi_restore 7
 2307              	 .cfi_def_cfa_offset 0
 2308 001e 7047     	 bx lr
 2309              	.L162:
 2310              	 .align 2
 2311              	.L161:
 2312 0020 74400050 	 .word 1342193780
 2313              	 .cfi_endproc
 2314              	.LFE209:
 2316              	 .section .text.XMC_SCU_RESET_AssertPeripheralReset,"ax",%progbits
 2317              	 .align 2
 2318              	 .global XMC_SCU_RESET_AssertPeripheralReset
 2319              	 .thumb
 2320              	 .thumb_func
 2322              	XMC_SCU_RESET_AssertPeripheralReset:
 2323              	.LFB210:
 676:../Libraries/XMCLib/src/xmc4_scu.c **** 
 677:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually assert a reset request */
 678:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 679:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2324              	 .loc 3 679 0
 2325              	 .cfi_startproc
 2326              	 
 2327              	 
 2328              	 
 2329 0000 80B4     	 push {r7}
 2330              	.LCFI222:
 2331              	 .cfi_def_cfa_offset 4
 2332              	 .cfi_offset 7,-4
 2333 0002 85B0     	 sub sp,sp,#20
 2334              	.LCFI223:
 2335              	 .cfi_def_cfa_offset 24
 2336 0004 00AF     	 add r7,sp,#0
 2337              	.LCFI224:
 2338              	 .cfi_def_cfa_register 7
 2339 0006 7860     	 str r0,[r7,#4]
 680:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2340              	 .loc 3 680 0
 2341 0008 7B68     	 ldr r3,[r7,#4]
 2342 000a 1B0F     	 lsrs r3,r3,#28
 2343 000c FB60     	 str r3,[r7,#12]
 681:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2344              	 .loc 3 681 0
 2345 000e 7B68     	 ldr r3,[r7,#4]
 2346 0010 23F07043 	 bic r3,r3,#-268435456
 2347 0014 BB60     	 str r3,[r7,#8]
 682:../Libraries/XMCLib/src/xmc4_scu.c **** 
 683:../Libraries/XMCLib/src/xmc4_scu.c ****   *(volatile uint32_t *)(&(SCU_RESET->PRSET0) + (index * 3U)) = (uint32_t)mask;
 2348              	 .loc 3 683 0
 2349 0016 FA68     	 ldr r2,[r7,#12]
 2350 0018 1346     	 mov r3,r2
 2351 001a 5B00     	 lsls r3,r3,#1
 2352 001c 1344     	 add r3,r3,r2
 2353 001e 9B00     	 lsls r3,r3,#2
 2354 0020 1A46     	 mov r2,r3
 2355 0022 044B     	 ldr r3,.L164
 2356 0024 1344     	 add r3,r3,r2
 2357 0026 BA68     	 ldr r2,[r7,#8]
 2358 0028 1A60     	 str r2,[r3]
 684:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2359              	 .loc 3 684 0
 2360 002a 1437     	 adds r7,r7,#20
 2361              	.LCFI225:
 2362              	 .cfi_def_cfa_offset 4
 2363 002c BD46     	 mov sp,r7
 2364              	.LCFI226:
 2365              	 .cfi_def_cfa_register 13
 2366              	 
 2367 002e 5DF8047B 	 ldr r7,[sp],#4
 2368              	.LCFI227:
 2369              	 .cfi_restore 7
 2370              	 .cfi_def_cfa_offset 0
 2371 0032 7047     	 bx lr
 2372              	.L165:
 2373              	 .align 2
 2374              	.L164:
 2375 0034 10440050 	 .word 1342194704
 2376              	 .cfi_endproc
 2377              	.LFE210:
 2379              	 .section .text.XMC_SCU_RESET_DeassertPeripheralReset,"ax",%progbits
 2380              	 .align 2
 2381              	 .global XMC_SCU_RESET_DeassertPeripheralReset
 2382              	 .thumb
 2383              	 .thumb_func
 2385              	XMC_SCU_RESET_DeassertPeripheralReset:
 2386              	.LFB211:
 685:../Libraries/XMCLib/src/xmc4_scu.c **** 
 686:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually de-assert a reset request */
 687:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 688:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2387              	 .loc 3 688 0
 2388              	 .cfi_startproc
 2389              	 
 2390              	 
 2391              	 
 2392 0000 80B4     	 push {r7}
 2393              	.LCFI228:
 2394              	 .cfi_def_cfa_offset 4
 2395              	 .cfi_offset 7,-4
 2396 0002 85B0     	 sub sp,sp,#20
 2397              	.LCFI229:
 2398              	 .cfi_def_cfa_offset 24
 2399 0004 00AF     	 add r7,sp,#0
 2400              	.LCFI230:
 2401              	 .cfi_def_cfa_register 7
 2402 0006 7860     	 str r0,[r7,#4]
 689:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2403              	 .loc 3 689 0
 2404 0008 7B68     	 ldr r3,[r7,#4]
 2405 000a 1B0F     	 lsrs r3,r3,#28
 2406 000c FB60     	 str r3,[r7,#12]
 690:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2407              	 .loc 3 690 0
 2408 000e 7B68     	 ldr r3,[r7,#4]
 2409 0010 23F07043 	 bic r3,r3,#-268435456
 2410 0014 BB60     	 str r3,[r7,#8]
 691:../Libraries/XMCLib/src/xmc4_scu.c **** 
 692:../Libraries/XMCLib/src/xmc4_scu.c ****   *(volatile uint32_t *)(&(SCU_RESET->PRCLR0) + (index * 3U)) = (uint32_t)mask;
 2411              	 .loc 3 692 0
 2412 0016 FA68     	 ldr r2,[r7,#12]
 2413 0018 1346     	 mov r3,r2
 2414 001a 5B00     	 lsls r3,r3,#1
 2415 001c 1344     	 add r3,r3,r2
 2416 001e 9B00     	 lsls r3,r3,#2
 2417 0020 1A46     	 mov r2,r3
 2418 0022 044B     	 ldr r3,.L167
 2419 0024 1344     	 add r3,r3,r2
 2420 0026 BA68     	 ldr r2,[r7,#8]
 2421 0028 1A60     	 str r2,[r3]
 693:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2422              	 .loc 3 693 0
 2423 002a 1437     	 adds r7,r7,#20
 2424              	.LCFI231:
 2425              	 .cfi_def_cfa_offset 4
 2426 002c BD46     	 mov sp,r7
 2427              	.LCFI232:
 2428              	 .cfi_def_cfa_register 13
 2429              	 
 2430 002e 5DF8047B 	 ldr r7,[sp],#4
 2431              	.LCFI233:
 2432              	 .cfi_restore 7
 2433              	 .cfi_def_cfa_offset 0
 2434 0032 7047     	 bx lr
 2435              	.L168:
 2436              	 .align 2
 2437              	.L167:
 2438 0034 14440050 	 .word 1342194708
 2439              	 .cfi_endproc
 2440              	.LFE211:
 2442              	 .section .text.XMC_SCU_RESET_IsPeripheralResetAsserted,"ax",%progbits
 2443              	 .align 2
 2444              	 .global XMC_SCU_RESET_IsPeripheralResetAsserted
 2445              	 .thumb
 2446              	 .thumb_func
 2448              	XMC_SCU_RESET_IsPeripheralResetAsserted:
 2449              	.LFB212:
 694:../Libraries/XMCLib/src/xmc4_scu.c **** 
 695:../Libraries/XMCLib/src/xmc4_scu.c **** /* Find out if the peripheral reset is asserted */
 696:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 697:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2450              	 .loc 3 697 0
 2451              	 .cfi_startproc
 2452              	 
 2453              	 
 2454              	 
 2455 0000 80B4     	 push {r7}
 2456              	.LCFI234:
 2457              	 .cfi_def_cfa_offset 4
 2458              	 .cfi_offset 7,-4
 2459 0002 85B0     	 sub sp,sp,#20
 2460              	.LCFI235:
 2461              	 .cfi_def_cfa_offset 24
 2462 0004 00AF     	 add r7,sp,#0
 2463              	.LCFI236:
 2464              	 .cfi_def_cfa_register 7
 2465 0006 7860     	 str r0,[r7,#4]
 698:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2466              	 .loc 3 698 0
 2467 0008 7B68     	 ldr r3,[r7,#4]
 2468 000a 1B0F     	 lsrs r3,r3,#28
 2469 000c FB60     	 str r3,[r7,#12]
 699:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2470              	 .loc 3 699 0
 2471 000e 7B68     	 ldr r3,[r7,#4]
 2472 0010 23F07043 	 bic r3,r3,#-268435456
 2473 0014 BB60     	 str r3,[r7,#8]
 700:../Libraries/XMCLib/src/xmc4_scu.c **** 
 701:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(const volatile uint32_t *)(&(SCU_RESET->PRSTAT0) + (index * 3U)) & mask) != 0U);
 2474              	 .loc 3 701 0
 2475 0016 FA68     	 ldr r2,[r7,#12]
 2476 0018 1346     	 mov r3,r2
 2477 001a 5B00     	 lsls r3,r3,#1
 2478 001c 1344     	 add r3,r3,r2
 2479 001e 9B00     	 lsls r3,r3,#2
 2480 0020 1A46     	 mov r2,r3
 2481 0022 084B     	 ldr r3,.L171
 2482 0024 1344     	 add r3,r3,r2
 2483 0026 1A68     	 ldr r2,[r3]
 2484 0028 BB68     	 ldr r3,[r7,#8]
 2485 002a 1340     	 ands r3,r3,r2
 2486 002c 002B     	 cmp r3,#0
 2487 002e 14BF     	 ite ne
 2488 0030 0123     	 movne r3,#1
 2489 0032 0023     	 moveq r3,#0
 2490 0034 DBB2     	 uxtb r3,r3
 702:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2491              	 .loc 3 702 0
 2492 0036 1846     	 mov r0,r3
 2493 0038 1437     	 adds r7,r7,#20
 2494              	.LCFI237:
 2495              	 .cfi_def_cfa_offset 4
 2496 003a BD46     	 mov sp,r7
 2497              	.LCFI238:
 2498              	 .cfi_def_cfa_register 13
 2499              	 
 2500 003c 5DF8047B 	 ldr r7,[sp],#4
 2501              	.LCFI239:
 2502              	 .cfi_restore 7
 2503              	 .cfi_def_cfa_offset 0
 2504 0040 7047     	 bx lr
 2505              	.L172:
 2506 0042 00BF     	 .align 2
 2507              	.L171:
 2508 0044 0C440050 	 .word 1342194700
 2509              	 .cfi_endproc
 2510              	.LFE212:
 2512              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency,"ax",%progbits
 2513              	 .align 2
 2514              	 .global XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2515              	 .thumb
 2516              	 .thumb_func
 2518              	XMC_SCU_CLOCK_GetSystemPllClockFrequency:
 2519              	.LFB213:
 703:../Libraries/XMCLib/src/xmc4_scu.c **** 
 704:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 705:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL output clock
 706:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 707:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void)
 708:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2520              	 .loc 3 708 0
 2521              	 .cfi_startproc
 2522              	 
 2523              	 
 2524 0000 80B5     	 push {r7,lr}
 2525              	.LCFI240:
 2526              	 .cfi_def_cfa_offset 8
 2527              	 .cfi_offset 7,-8
 2528              	 .cfi_offset 14,-4
 2529 0002 84B0     	 sub sp,sp,#16
 2530              	.LCFI241:
 2531              	 .cfi_def_cfa_offset 24
 2532 0004 00AF     	 add r7,sp,#0
 2533              	.LCFI242:
 2534              	 .cfi_def_cfa_register 7
 709:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 710:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 711:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 712:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t k2_div;
 713:../Libraries/XMCLib/src/xmc4_scu.c **** 
 714:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency();
 2535              	 .loc 3 714 0
 2536 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2537 000a F860     	 str r0,[r7,#12]
 715:../Libraries/XMCLib/src/xmc4_scu.c ****   if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk)
 2538              	 .loc 3 715 0
 2539 000c 1A4B     	 ldr r3,.L177
 2540 000e 1B68     	 ldr r3,[r3]
 2541 0010 03F00103 	 and r3,r3,#1
 2542 0014 002B     	 cmp r3,#0
 2543 0016 09D0     	 beq .L174
 716:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 717:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Prescalar mode - fOSC is the parent*/
 718:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)(clock_frequency /
 719:../Libraries/XMCLib/src/xmc4_scu.c ****                                  ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLC
 2544              	 .loc 3 719 0
 2545 0018 174B     	 ldr r3,.L177
 2546 001a 9B68     	 ldr r3,[r3,#8]
 2547 001c 03F07F03 	 and r3,r3,#127
 2548 0020 0133     	 adds r3,r3,#1
 718:../Libraries/XMCLib/src/xmc4_scu.c ****                                  ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLC
 2549              	 .loc 3 718 0
 2550 0022 FA68     	 ldr r2,[r7,#12]
 2551 0024 B2FBF3F3 	 udiv r3,r2,r3
 2552 0028 FB60     	 str r3,[r7,#12]
 2553 002a 1FE0     	 b .L175
 2554              	.L174:
 720:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 721:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 722:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 723:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Po
 2555              	 .loc 3 723 0
 2556 002c 124B     	 ldr r3,.L177
 2557 002e 9B68     	 ldr r3,[r3,#8]
 2558 0030 03F07063 	 and r3,r3,#251658240
 2559 0034 1B0E     	 lsrs r3,r3,#24
 2560 0036 0133     	 adds r3,r3,#1
 2561 0038 BB60     	 str r3,[r7,#8]
 724:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 2562              	 .loc 3 724 0
 2563 003a 0F4B     	 ldr r3,.L177
 2564 003c 9B68     	 ldr r3,[r3,#8]
 2565 003e 03F4FE43 	 and r3,r3,#32512
 2566 0042 1B0A     	 lsrs r3,r3,#8
 2567 0044 0133     	 adds r3,r3,#1
 2568 0046 7B60     	 str r3,[r7,#4]
 725:../Libraries/XMCLib/src/xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 2569              	 .loc 3 725 0
 2570 0048 0B4B     	 ldr r3,.L177
 2571 004a 9B68     	 ldr r3,[r3,#8]
 2572 004c 03F4FE03 	 and r3,r3,#8323072
 2573 0050 1B0C     	 lsrs r3,r3,#16
 2574 0052 0133     	 adds r3,r3,#1
 2575 0054 3B60     	 str r3,[r7]
 726:../Libraries/XMCLib/src/xmc4_scu.c **** 
 727:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (clock_frequency * n_div) / (p_div * k2_div);
 2576              	 .loc 3 727 0
 2577 0056 FB68     	 ldr r3,[r7,#12]
 2578 0058 7A68     	 ldr r2,[r7,#4]
 2579 005a 02FB03F2 	 mul r2,r2,r3
 2580 005e BB68     	 ldr r3,[r7,#8]
 2581 0060 3968     	 ldr r1,[r7]
 2582 0062 01FB03F3 	 mul r3,r1,r3
 2583 0066 B2FBF3F3 	 udiv r3,r2,r3
 2584 006a FB60     	 str r3,[r7,#12]
 2585              	.L175:
 728:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 729:../Libraries/XMCLib/src/xmc4_scu.c **** 
 730:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2586              	 .loc 3 730 0
 2587 006c FB68     	 ldr r3,[r7,#12]
 731:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2588              	 .loc 3 731 0
 2589 006e 1846     	 mov r0,r3
 2590 0070 1037     	 adds r7,r7,#16
 2591              	.LCFI243:
 2592              	 .cfi_def_cfa_offset 8
 2593 0072 BD46     	 mov sp,r7
 2594              	.LCFI244:
 2595              	 .cfi_def_cfa_register 13
 2596              	 
 2597 0074 80BD     	 pop {r7,pc}
 2598              	.L178:
 2599 0076 00BF     	 .align 2
 2600              	.L177:
 2601 0078 10470050 	 .word 1342195472
 2602              	 .cfi_endproc
 2603              	.LFE213:
 2605              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency,"ax",%progbits
 2606              	 .align 2
 2607              	 .global XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2608              	 .thumb
 2609              	 .thumb_func
 2611              	XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:
 2612              	.LFB214:
 732:../Libraries/XMCLib/src/xmc4_scu.c **** 
 733:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 734:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL VCO input clock
 735:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 736:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void)
 737:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2613              	 .loc 3 737 0
 2614              	 .cfi_startproc
 2615              	 
 2616              	 
 2617 0000 80B5     	 push {r7,lr}
 2618              	.LCFI245:
 2619              	 .cfi_def_cfa_offset 8
 2620              	 .cfi_offset 7,-8
 2621              	 .cfi_offset 14,-4
 2622 0002 82B0     	 sub sp,sp,#8
 2623              	.LCFI246:
 2624              	 .cfi_def_cfa_offset 16
 2625 0004 00AF     	 add r7,sp,#0
 2626              	.LCFI247:
 2627              	 .cfi_def_cfa_register 7
 738:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 739:../Libraries/XMCLib/src/xmc4_scu.c **** 
 740:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Prescalar mode - fOSC is the parent*/
 741:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk) == (uint32_t)XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP
 2628              	 .loc 3 741 0
 2629 0006 084B     	 ldr r3,.L183
 2630 0008 DB68     	 ldr r3,[r3,#12]
 2631 000a 03F00103 	 and r3,r3,#1
 2632 000e 002B     	 cmp r3,#0
 2633 0010 03D1     	 bne .L180
 742:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 743:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OSCHP_GetFrequency();
 2634              	 .loc 3 743 0
 2635 0012 FFF7FEFF 	 bl OSCHP_GetFrequency
 2636 0016 7860     	 str r0,[r7,#4]
 2637 0018 01E0     	 b .L181
 2638              	.L180:
 744:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 745:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 746:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 747:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OFI_FREQUENCY;
 2639              	 .loc 3 747 0
 2640 001a 044B     	 ldr r3,.L183+4
 2641 001c 7B60     	 str r3,[r7,#4]
 2642              	.L181:
 748:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 749:../Libraries/XMCLib/src/xmc4_scu.c **** 
 750:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2643              	 .loc 3 750 0
 2644 001e 7B68     	 ldr r3,[r7,#4]
 751:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2645              	 .loc 3 751 0
 2646 0020 1846     	 mov r0,r3
 2647 0022 0837     	 adds r7,r7,#8
 2648              	.LCFI248:
 2649              	 .cfi_def_cfa_offset 8
 2650 0024 BD46     	 mov sp,r7
 2651              	.LCFI249:
 2652              	 .cfi_def_cfa_register 13
 2653              	 
 2654 0026 80BD     	 pop {r7,pc}
 2655              	.L184:
 2656              	 .align 2
 2657              	.L183:
 2658 0028 10470050 	 .word 1342195472
 2659 002c 00366E01 	 .word 24000000
 2660              	 .cfi_endproc
 2661              	.LFE214:
 2663              	 .section .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency,"ax",%progbits
 2664              	 .align 2
 2665              	 .global XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2666              	 .thumb
 2667              	 .thumb_func
 2669              	XMC_SCU_CLOCK_GetUsbPllClockFrequency:
 2670              	.LFB215:
 752:../Libraries/XMCLib/src/xmc4_scu.c **** 
 753:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 754:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of USB PLL output clock
 755:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 756:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void)
 757:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2671              	 .loc 3 757 0
 2672              	 .cfi_startproc
 2673              	 
 2674              	 
 2675 0000 80B5     	 push {r7,lr}
 2676              	.LCFI250:
 2677              	 .cfi_def_cfa_offset 8
 2678              	 .cfi_offset 7,-8
 2679              	 .cfi_offset 14,-4
 2680 0002 84B0     	 sub sp,sp,#16
 2681              	.LCFI251:
 2682              	 .cfi_def_cfa_offset 24
 2683 0004 00AF     	 add r7,sp,#0
 2684              	.LCFI252:
 2685              	 .cfi_def_cfa_register 7
 758:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 759:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 760:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 761:../Libraries/XMCLib/src/xmc4_scu.c **** 
 762:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = OSCHP_GetFrequency();
 2686              	 .loc 3 762 0
 2687 0006 FFF7FEFF 	 bl OSCHP_GetFrequency
 2688 000a F860     	 str r0,[r7,#12]
 763:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 2689              	 .loc 3 763 0
 2690 000c 104B     	 ldr r3,.L188
 2691 000e 1B69     	 ldr r3,[r3,#16]
 2692 0010 03F00103 	 and r3,r3,#1
 2693 0014 002B     	 cmp r3,#0
 2694 0016 16D1     	 bne .L186
 764:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 765:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Normal mode - fVCO is the parent*/
 766:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_NDIV_Msk) >> SCU_PLL_USBPLLCON_ND
 2695              	 .loc 3 766 0
 2696 0018 0D4B     	 ldr r3,.L188
 2697 001a 5B69     	 ldr r3,[r3,#20]
 2698 001c 03F4FE43 	 and r3,r3,#32512
 2699 0020 1B0A     	 lsrs r3,r3,#8
 2700 0022 0133     	 adds r3,r3,#1
 2701 0024 BB60     	 str r3,[r7,#8]
 767:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 2702              	 .loc 3 767 0
 2703 0026 0A4B     	 ldr r3,.L188
 2704 0028 5B69     	 ldr r3,[r3,#20]
 2705 002a 03F07063 	 and r3,r3,#251658240
 2706 002e 1B0E     	 lsrs r3,r3,#24
 2707 0030 0133     	 adds r3,r3,#1
 2708 0032 7B60     	 str r3,[r7,#4]
 768:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)((clock_frequency * n_div) / (uint32_t)(p_div * 2UL));
 2709              	 .loc 3 768 0
 2710 0034 FB68     	 ldr r3,[r7,#12]
 2711 0036 BA68     	 ldr r2,[r7,#8]
 2712 0038 02FB03F2 	 mul r2,r2,r3
 2713 003c 7B68     	 ldr r3,[r7,#4]
 2714 003e 5B00     	 lsls r3,r3,#1
 2715 0040 B2FBF3F3 	 udiv r3,r2,r3
 2716 0044 FB60     	 str r3,[r7,#12]
 2717              	.L186:
 769:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 770:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2718              	 .loc 3 770 0
 2719 0046 FB68     	 ldr r3,[r7,#12]
 771:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2720              	 .loc 3 771 0
 2721 0048 1846     	 mov r0,r3
 2722 004a 1037     	 adds r7,r7,#16
 2723              	.LCFI253:
 2724              	 .cfi_def_cfa_offset 8
 2725 004c BD46     	 mov sp,r7
 2726              	.LCFI254:
 2727              	 .cfi_def_cfa_register 13
 2728              	 
 2729 004e 80BD     	 pop {r7,pc}
 2730              	.L189:
 2731              	 .align 2
 2732              	.L188:
 2733 0050 10470050 	 .word 1342195472
 2734              	 .cfi_endproc
 2735              	.LFE215:
 2737              	 .section .text.XMC_SCU_CLOCK_GetCcuClockFrequency,"ax",%progbits
 2738              	 .align 2
 2739              	 .global XMC_SCU_CLOCK_GetCcuClockFrequency
 2740              	 .thumb
 2741              	 .thumb_func
 2743              	XMC_SCU_CLOCK_GetCcuClockFrequency:
 2744              	.LFB216:
 772:../Libraries/XMCLib/src/xmc4_scu.c **** 
 773:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 774:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of CCU clock frequency
 775:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 776:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void)
 777:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2745              	 .loc 3 777 0
 2746              	 .cfi_startproc
 2747              	 
 2748              	 
 2749 0000 80B5     	 push {r7,lr}
 2750              	.LCFI255:
 2751              	 .cfi_def_cfa_offset 8
 2752              	 .cfi_offset 7,-8
 2753              	 .cfi_offset 14,-4
 2754 0002 82B0     	 sub sp,sp,#8
 2755              	.LCFI256:
 2756              	 .cfi_def_cfa_offset 16
 2757 0004 00AF     	 add r7,sp,#0
 2758              	.LCFI257:
 2759              	 .cfi_def_cfa_register 7
 778:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2760              	 .loc 3 778 0
 2761 0006 0023     	 movs r3,#0
 2762 0008 7B60     	 str r3,[r7,#4]
 779:../Libraries/XMCLib/src/xmc4_scu.c ****   frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 2763              	 .loc 3 779 0
 2764 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2765 000e 7860     	 str r0,[r7,#4]
 780:../Libraries/XMCLib/src/xmc4_scu.c **** 
 781:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency >> ((uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >>
 2766              	 .loc 3 781 0
 2767 0010 054B     	 ldr r3,.L192
 2768 0012 1B6A     	 ldr r3,[r3,#32]
 2769 0014 03F00103 	 and r3,r3,#1
 2770 0018 7A68     	 ldr r2,[r7,#4]
 2771 001a 22FA03F3 	 lsr r3,r2,r3
 782:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_CLK_CCUCLKCR_CCUDIV_Pos)));
 783:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2772              	 .loc 3 783 0
 2773 001e 1846     	 mov r0,r3
 2774 0020 0837     	 adds r7,r7,#8
 2775              	.LCFI258:
 2776              	 .cfi_def_cfa_offset 8
 2777 0022 BD46     	 mov sp,r7
 2778              	.LCFI259:
 2779              	 .cfi_def_cfa_register 13
 2780              	 
 2781 0024 80BD     	 pop {r7,pc}
 2782              	.L193:
 2783 0026 00BF     	 .align 2
 2784              	.L192:
 2785 0028 00460050 	 .word 1342195200
 2786              	 .cfi_endproc
 2787              	.LFE216:
 2789              	 .section .text.XMC_SCU_CLOCK_GetUsbClockFrequency,"ax",%progbits
 2790              	 .align 2
 2791              	 .global XMC_SCU_CLOCK_GetUsbClockFrequency
 2792              	 .thumb
 2793              	 .thumb_func
 2795              	XMC_SCU_CLOCK_GetUsbClockFrequency:
 2796              	.LFB217:
 784:../Libraries/XMCLib/src/xmc4_scu.c **** 
 785:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 786:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve USB and SDMMC clock frequency
 787:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 788:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void)
 789:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2797              	 .loc 3 789 0
 2798              	 .cfi_startproc
 2799              	 
 2800              	 
 2801 0000 80B5     	 push {r7,lr}
 2802              	.LCFI260:
 2803              	 .cfi_def_cfa_offset 8
 2804              	 .cfi_offset 7,-8
 2805              	 .cfi_offset 14,-4
 2806 0002 82B0     	 sub sp,sp,#8
 2807              	.LCFI261:
 2808              	 .cfi_def_cfa_offset 16
 2809 0004 00AF     	 add r7,sp,#0
 2810              	.LCFI262:
 2811              	 .cfi_def_cfa_register 7
 790:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2812              	 .loc 3 790 0
 2813 0006 0023     	 movs r3,#0
 2814 0008 7B60     	 str r3,[r7,#4]
 791:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_USBCLKSRC_t clksrc;
 792:../Libraries/XMCLib/src/xmc4_scu.c **** 
 793:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetUsbClockSource();
 2815              	 .loc 3 793 0
 2816 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbClockSource
 2817 000e 3860     	 str r0,[r7]
 794:../Libraries/XMCLib/src/xmc4_scu.c **** 
 795:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_SYSPLL)
 2818              	 .loc 3 795 0
 2819 0010 3B68     	 ldr r3,[r7]
 2820 0012 B3F5803F 	 cmp r3,#65536
 2821 0016 03D1     	 bne .L195
 796:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 797:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2822              	 .loc 3 797 0
 2823 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2824 001c 7860     	 str r0,[r7,#4]
 2825 001e 05E0     	 b .L196
 2826              	.L195:
 798:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 799:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_USBPLL)
 2827              	 .loc 3 799 0
 2828 0020 3B68     	 ldr r3,[r7]
 2829 0022 002B     	 cmp r3,#0
 2830 0024 02D1     	 bne .L196
 800:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 801:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 2831              	 .loc 3 801 0
 2832 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2833 002a 7860     	 str r0,[r7,#4]
 2834              	.L196:
 802:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 803:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 804:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 805:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 806:../Libraries/XMCLib/src/xmc4_scu.c **** 
 807:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency / (((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >>
 2835              	 .loc 3 807 0
 2836 002c 054B     	 ldr r3,.L198
 2837 002e 9B69     	 ldr r3,[r3,#24]
 2838 0030 03F00703 	 and r3,r3,#7
 808:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 2839              	 .loc 3 808 0
 2840 0034 0133     	 adds r3,r3,#1
 807:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 2841              	 .loc 3 807 0
 2842 0036 7A68     	 ldr r2,[r7,#4]
 2843 0038 B2FBF3F3 	 udiv r3,r2,r3
 809:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2844              	 .loc 3 809 0
 2845 003c 1846     	 mov r0,r3
 2846 003e 0837     	 adds r7,r7,#8
 2847              	.LCFI263:
 2848              	 .cfi_def_cfa_offset 8
 2849 0040 BD46     	 mov sp,r7
 2850              	.LCFI264:
 2851              	 .cfi_def_cfa_register 13
 2852              	 
 2853 0042 80BD     	 pop {r7,pc}
 2854              	.L199:
 2855              	 .align 2
 2856              	.L198:
 2857 0044 00460050 	 .word 1342195200
 2858              	 .cfi_endproc
 2859              	.LFE217:
 2861              	 .section .text.XMC_SCU_CLOCK_GetEbuClockFrequency,"ax",%progbits
 2862              	 .align 2
 2863              	 .global XMC_SCU_CLOCK_GetEbuClockFrequency
 2864              	 .thumb
 2865              	 .thumb_func
 2867              	XMC_SCU_CLOCK_GetEbuClockFrequency:
 2868              	.LFB218:
 810:../Libraries/XMCLib/src/xmc4_scu.c **** 
 811:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
 812:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 813:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve EBU clock frequency
 814:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 815:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetEbuClockFrequency(void)
 816:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2869              	 .loc 3 816 0
 2870              	 .cfi_startproc
 2871              	 
 2872              	 
 2873 0000 80B5     	 push {r7,lr}
 2874              	.LCFI265:
 2875              	 .cfi_def_cfa_offset 8
 2876              	 .cfi_offset 7,-8
 2877              	 .cfi_offset 14,-4
 2878 0002 82B0     	 sub sp,sp,#8
 2879              	.LCFI266:
 2880              	 .cfi_def_cfa_offset 16
 2881 0004 00AF     	 add r7,sp,#0
 2882              	.LCFI267:
 2883              	 .cfi_def_cfa_register 7
 817:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2884              	 .loc 3 817 0
 2885 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2886 000a 7860     	 str r0,[r7,#4]
 818:../Libraries/XMCLib/src/xmc4_scu.c **** 
 819:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >>
 2887              	 .loc 3 819 0
 2888 000c 054B     	 ldr r3,.L202
 2889 000e DB69     	 ldr r3,[r3,#28]
 2890 0010 03F03F03 	 and r3,r3,#63
 820:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 2891              	 .loc 3 820 0
 2892 0014 0133     	 adds r3,r3,#1
 819:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 2893              	 .loc 3 819 0
 2894 0016 7A68     	 ldr r2,[r7,#4]
 2895 0018 B2FBF3F3 	 udiv r3,r2,r3
 821:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2896              	 .loc 3 821 0
 2897 001c 1846     	 mov r0,r3
 2898 001e 0837     	 adds r7,r7,#8
 2899              	.LCFI268:
 2900              	 .cfi_def_cfa_offset 8
 2901 0020 BD46     	 mov sp,r7
 2902              	.LCFI269:
 2903              	 .cfi_def_cfa_register 13
 2904              	 
 2905 0022 80BD     	 pop {r7,pc}
 2906              	.L203:
 2907              	 .align 2
 2908              	.L202:
 2909 0024 00460050 	 .word 1342195200
 2910              	 .cfi_endproc
 2911              	.LFE218:
 2913              	 .section .text.XMC_SCU_CLOCK_GetECATClockFrequency,"ax",%progbits
 2914              	 .align 2
 2915              	 .global XMC_SCU_CLOCK_GetECATClockFrequency
 2916              	 .thumb
 2917              	 .thumb_func
 2919              	XMC_SCU_CLOCK_GetECATClockFrequency:
 2920              	.LFB219:
 822:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 823:../Libraries/XMCLib/src/xmc4_scu.c **** 
 824:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
 825:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 826:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve ECAT clock frequency
 827:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 828:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetECATClockFrequency(void)
 829:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2921              	 .loc 3 829 0
 2922              	 .cfi_startproc
 2923              	 
 2924              	 
 2925 0000 80B5     	 push {r7,lr}
 2926              	.LCFI270:
 2927              	 .cfi_def_cfa_offset 8
 2928              	 .cfi_offset 7,-8
 2929              	 .cfi_offset 14,-4
 2930 0002 82B0     	 sub sp,sp,#8
 2931              	.LCFI271:
 2932              	 .cfi_def_cfa_offset 16
 2933 0004 00AF     	 add r7,sp,#0
 2934              	.LCFI272:
 2935              	 .cfi_def_cfa_register 7
 830:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency;
 831:../Libraries/XMCLib/src/xmc4_scu.c **** 
 832:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) != 0U)
 2936              	 .loc 3 832 0
 2937 0006 0C4B     	 ldr r3,.L208
 2938 0008 9B6B     	 ldr r3,[r3,#56]
 2939 000a 03F48033 	 and r3,r3,#65536
 2940 000e 002B     	 cmp r3,#0
 2941 0010 03D0     	 beq .L205
 833:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 834:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2942              	 .loc 3 834 0
 2943 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2944 0016 7860     	 str r0,[r7,#4]
 2945 0018 02E0     	 b .L206
 2946              	.L205:
 835:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 836:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 837:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 838:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 2947              	 .loc 3 838 0
 2948 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2949 001e 7860     	 str r0,[r7,#4]
 2950              	.L206:
 839:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 840:../Libraries/XMCLib/src/xmc4_scu.c **** 
 841:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (XMC_SCU_CLOCK_GetECATClockDivider() + 1UL)));
 2951              	 .loc 3 841 0
 2952 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetECATClockDivider
 2953 0024 0346     	 mov r3,r0
 2954 0026 0133     	 adds r3,r3,#1
 2955 0028 7A68     	 ldr r2,[r7,#4]
 2956 002a B2FBF3F3 	 udiv r3,r2,r3
 842:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2957              	 .loc 3 842 0
 2958 002e 1846     	 mov r0,r3
 2959 0030 0837     	 adds r7,r7,#8
 2960              	.LCFI273:
 2961              	 .cfi_def_cfa_offset 8
 2962 0032 BD46     	 mov sp,r7
 2963              	.LCFI274:
 2964              	 .cfi_def_cfa_register 13
 2965              	 
 2966 0034 80BD     	 pop {r7,pc}
 2967              	.L209:
 2968 0036 00BF     	 .align 2
 2969              	.L208:
 2970 0038 00460050 	 .word 1342195200
 2971              	 .cfi_endproc
 2972              	.LFE219:
 2974              	 .section .text.XMC_SCU_CLOCK_GetWdtClockFrequency,"ax",%progbits
 2975              	 .align 2
 2976              	 .global XMC_SCU_CLOCK_GetWdtClockFrequency
 2977              	 .thumb
 2978              	 .thumb_func
 2980              	XMC_SCU_CLOCK_GetWdtClockFrequency:
 2981              	.LFB220:
 843:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 844:../Libraries/XMCLib/src/xmc4_scu.c **** 
 845:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 846:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve WDT clock frequency
 847:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 848:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetWdtClockFrequency(void)
 849:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2982              	 .loc 3 849 0
 2983              	 .cfi_startproc
 2984              	 
 2985              	 
 2986 0000 80B5     	 push {r7,lr}
 2987              	.LCFI275:
 2988              	 .cfi_def_cfa_offset 8
 2989              	 .cfi_offset 7,-8
 2990              	 .cfi_offset 14,-4
 2991 0002 82B0     	 sub sp,sp,#8
 2992              	.LCFI276:
 2993              	 .cfi_def_cfa_offset 16
 2994 0004 00AF     	 add r7,sp,#0
 2995              	.LCFI277:
 2996              	 .cfi_def_cfa_register 7
 850:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2997              	 .loc 3 850 0
 2998 0006 0023     	 movs r3,#0
 2999 0008 7B60     	 str r3,[r7,#4]
 851:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_WDTCLKSRC_t clksrc;
 852:../Libraries/XMCLib/src/xmc4_scu.c **** 
 853:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetWdtClockSource();
 3000              	 .loc 3 853 0
 3001 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetWdtClockSource
 3002 000e 3860     	 str r0,[r7]
 854:../Libraries/XMCLib/src/xmc4_scu.c **** 
 855:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_PLL)
 3003              	 .loc 3 855 0
 3004 0010 3B68     	 ldr r3,[r7]
 3005 0012 B3F5003F 	 cmp r3,#131072
 3006 0016 03D1     	 bne .L211
 856:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 857:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3007              	 .loc 3 857 0
 3008 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3009 001c 7860     	 str r0,[r7,#4]
 3010 001e 0CE0     	 b .L212
 3011              	.L211:
 858:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 859:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_OFI)
 3012              	 .loc 3 859 0
 3013 0020 3B68     	 ldr r3,[r7]
 3014 0022 002B     	 cmp r3,#0
 3015 0024 02D1     	 bne .L213
 860:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 861:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OFI_FREQUENCY;
 3016              	 .loc 3 861 0
 3017 0026 0A4B     	 ldr r3,.L215
 3018 0028 7B60     	 str r3,[r7,#4]
 3019 002a 06E0     	 b .L212
 3020              	.L213:
 862:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 863:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_STDBY)
 3021              	 .loc 3 863 0
 3022 002c 3B68     	 ldr r3,[r7]
 3023 002e B3F5803F 	 cmp r3,#65536
 3024 0032 02D1     	 bne .L212
 864:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 865:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OSI_FREQUENCY;
 3025              	 .loc 3 865 0
 3026 0034 4FF40043 	 mov r3,#32768
 3027 0038 7B60     	 str r3,[r7,#4]
 3028              	.L212:
 866:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 867:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 868:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 869:../Libraries/XMCLib/src/xmc4_scu.c **** 
 870:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 871:../Libraries/XMCLib/src/xmc4_scu.c **** 
 872:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >>
 3029              	 .loc 3 872 0
 3030 003a 064B     	 ldr r3,.L215+4
 3031 003c 5B6A     	 ldr r3,[r3,#36]
 3032 003e DBB2     	 uxtb r3,r3
 873:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 3033              	 .loc 3 873 0
 3034 0040 0133     	 adds r3,r3,#1
 872:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 3035              	 .loc 3 872 0
 3036 0042 7A68     	 ldr r2,[r7,#4]
 3037 0044 B2FBF3F3 	 udiv r3,r2,r3
 874:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3038              	 .loc 3 874 0
 3039 0048 1846     	 mov r0,r3
 3040 004a 0837     	 adds r7,r7,#8
 3041              	.LCFI278:
 3042              	 .cfi_def_cfa_offset 8
 3043 004c BD46     	 mov sp,r7
 3044              	.LCFI279:
 3045              	 .cfi_def_cfa_register 13
 3046              	 
 3047 004e 80BD     	 pop {r7,pc}
 3048              	.L216:
 3049              	 .align 2
 3050              	.L215:
 3051 0050 00366E01 	 .word 24000000
 3052 0054 00460050 	 .word 1342195200
 3053              	 .cfi_endproc
 3054              	.LFE220:
 3056              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency,"ax",%progbits
 3057              	 .align 2
 3058              	 .global XMC_SCU_CLOCK_GetExternalOutputClockFrequency
 3059              	 .thumb
 3060              	 .thumb_func
 3062              	XMC_SCU_CLOCK_GetExternalOutputClockFrequency:
 3063              	.LFB221:
 875:../Libraries/XMCLib/src/xmc4_scu.c **** 
 876:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 877:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief API to retrieve EXTERNAL-OUT clock frequency
 878:../Libraries/XMCLib/src/xmc4_scu.c ****  * @retval Clock frequency
 879:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 880:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetExternalOutputClockFrequency(void)
 881:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3064              	 .loc 3 881 0
 3065              	 .cfi_startproc
 3066              	 
 3067              	 
 3068 0000 80B5     	 push {r7,lr}
 3069              	.LCFI280:
 3070              	 .cfi_def_cfa_offset 8
 3071              	 .cfi_offset 7,-8
 3072              	 .cfi_offset 14,-4
 3073 0002 82B0     	 sub sp,sp,#8
 3074              	.LCFI281:
 3075              	 .cfi_def_cfa_offset 16
 3076 0004 00AF     	 add r7,sp,#0
 3077              	.LCFI282:
 3078              	 .cfi_def_cfa_register 7
 882:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 3079              	 .loc 3 882 0
 3080 0006 0023     	 movs r3,#0
 3081 0008 7B60     	 str r3,[r7,#4]
 883:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_t clksrc;
 884:../Libraries/XMCLib/src/xmc4_scu.c **** 
 885:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetExternalOutputClockSource();
 3082              	 .loc 3 885 0
 3083 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetExternalOutputClockSource
 3084 000e 0346     	 mov r3,r0
 3085 0010 FB70     	 strb r3,[r7,#3]
 886:../Libraries/XMCLib/src/xmc4_scu.c **** 
 887:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL)
 3086              	 .loc 3 887 0
 3087 0012 FB78     	 ldrb r3,[r7,#3]
 3088 0014 032B     	 cmp r3,#3
 3089 0016 0DD1     	 bne .L218
 888:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 889:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3090              	 .loc 3 889 0
 3091 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3092 001c 7860     	 str r0,[r7,#4]
 890:../Libraries/XMCLib/src/xmc4_scu.c **** 
 891:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3093              	 .loc 3 891 0
 3094 001e 134B     	 ldr r3,.L222
 3095 0020 9A6A     	 ldr r2,[r3,#40]
 3096 0022 134B     	 ldr r3,.L222+4
 3097 0024 1340     	 ands r3,r3,r2
 3098 0026 1B0C     	 lsrs r3,r3,#16
 892:../Libraries/XMCLib/src/xmc4_scu.c ****                                           SCU_CLK_EXTCLKCR_ECKDIV_Pos) + 1UL)));
 3099              	 .loc 3 892 0
 3100 0028 0133     	 adds r3,r3,#1
 891:../Libraries/XMCLib/src/xmc4_scu.c ****                                           SCU_CLK_EXTCLKCR_ECKDIV_Pos) + 1UL)));
 3101              	 .loc 3 891 0
 3102 002a 7A68     	 ldr r2,[r7,#4]
 3103 002c B2FBF3F3 	 udiv r3,r2,r3
 3104 0030 7B60     	 str r3,[r7,#4]
 3105 0032 16E0     	 b .L219
 3106              	.L218:
 893:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 894:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS)
 3107              	 .loc 3 894 0
 3108 0034 FB78     	 ldrb r3,[r7,#3]
 3109 0036 002B     	 cmp r3,#0
 3110 0038 03D1     	 bne .L220
 895:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 896:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 3111              	 .loc 3 896 0
 3112 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 3113 003e 7860     	 str r0,[r7,#4]
 3114 0040 0FE0     	 b .L219
 3115              	.L220:
 897:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 898:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_USB)
 3116              	 .loc 3 898 0
 3117 0042 FB78     	 ldrb r3,[r7,#3]
 3118 0044 022B     	 cmp r3,#2
 3119 0046 0CD1     	 bne .L219
 899:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 900:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 3120              	 .loc 3 900 0
 3121 0048 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 3122 004c 7860     	 str r0,[r7,#4]
 901:../Libraries/XMCLib/src/xmc4_scu.c **** 
 902:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3123              	 .loc 3 902 0
 3124 004e 074B     	 ldr r3,.L222
 3125 0050 9A6A     	 ldr r2,[r3,#40]
 3126 0052 074B     	 ldr r3,.L222+4
 3127 0054 1340     	 ands r3,r3,r2
 3128 0056 1B0C     	 lsrs r3,r3,#16
 903:../Libraries/XMCLib/src/xmc4_scu.c ****                                           SCU_CLK_EXTCLKCR_ECKDIV_Pos) + 1UL)));
 3129              	 .loc 3 903 0
 3130 0058 0133     	 adds r3,r3,#1
 902:../Libraries/XMCLib/src/xmc4_scu.c ****                                           SCU_CLK_EXTCLKCR_ECKDIV_Pos) + 1UL)));
 3131              	 .loc 3 902 0
 3132 005a 7A68     	 ldr r2,[r7,#4]
 3133 005c B2FBF3F3 	 udiv r3,r2,r3
 3134 0060 7B60     	 str r3,[r7,#4]
 3135              	.L219:
 904:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 905:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 906:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 907:../Libraries/XMCLib/src/xmc4_scu.c **** 
 908:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 909:../Libraries/XMCLib/src/xmc4_scu.c **** 
 910:../Libraries/XMCLib/src/xmc4_scu.c ****   return (frequency);
 3136              	 .loc 3 910 0
 3137 0062 7B68     	 ldr r3,[r7,#4]
 911:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3138              	 .loc 3 911 0
 3139 0064 1846     	 mov r0,r3
 3140 0066 0837     	 adds r7,r7,#8
 3141              	.LCFI283:
 3142              	 .cfi_def_cfa_offset 8
 3143 0068 BD46     	 mov sp,r7
 3144              	.LCFI284:
 3145              	 .cfi_def_cfa_register 13
 3146              	 
 3147 006a 80BD     	 pop {r7,pc}
 3148              	.L223:
 3149              	 .align 2
 3150              	.L222:
 3151 006c 00460050 	 .word 1342195200
 3152 0070 0000FF01 	 .word 33488896
 3153              	 .cfi_endproc
 3154              	.LFE221:
 3156              	 .section .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency,"ax",%progbits
 3157              	 .align 2
 3158              	 .global XMC_SCU_CLOCK_GetPeripheralClockFrequency
 3159              	 .thumb
 3160              	 .thumb_func
 3162              	XMC_SCU_CLOCK_GetPeripheralClockFrequency:
 3163              	.LFB222:
 912:../Libraries/XMCLib/src/xmc4_scu.c **** 
 913:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 914:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve clock frequency of peripherals on the peripheral bus using a shared functional c
 915:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 916:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void)
 917:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3164              	 .loc 3 917 0
 3165              	 .cfi_startproc
 3166              	 
 3167              	 
 3168 0000 80B5     	 push {r7,lr}
 3169              	.LCFI285:
 3170              	 .cfi_def_cfa_offset 8
 3171              	 .cfi_offset 7,-8
 3172              	 .cfi_offset 14,-4
 3173 0002 00AF     	 add r7,sp,#0
 3174              	.LCFI286:
 3175              	 .cfi_def_cfa_register 7
 918:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3176              	 .loc 3 918 0
 3177 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetCpuClockFrequency
 3178 0008 0246     	 mov r2,r0
 919:../Libraries/XMCLib/src/xmc4_scu.c ****                     ((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos));
 3179              	 .loc 3 919 0
 3180 000a 044B     	 ldr r3,.L226
 3181 000c 5B69     	 ldr r3,[r3,#20]
 918:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3182              	 .loc 3 918 0
 3183 000e 03F00103 	 and r3,r3,#1
 3184 0012 22FA03F3 	 lsr r3,r2,r3
 920:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3185              	 .loc 3 920 0
 3186 0016 1846     	 mov r0,r3
 3187 0018 80BD     	 pop {r7,pc}
 3188              	.L227:
 3189 001a 00BF     	 .align 2
 3190              	.L226:
 3191 001c 00460050 	 .word 1342195200
 3192              	 .cfi_endproc
 3193              	.LFE222:
 3195              	 .section .text.XMC_SCU_CLOCK_SetSystemClockSource,"ax",%progbits
 3196              	 .align 2
 3197              	 .global XMC_SCU_CLOCK_SetSystemClockSource
 3198              	 .thumb
 3199              	 .thumb_func
 3201              	XMC_SCU_CLOCK_SetSystemClockSource:
 3202              	.LFB223:
 921:../Libraries/XMCLib/src/xmc4_scu.c **** 
 922:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSYS */
 923:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source)
 924:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3203              	 .loc 3 924 0
 3204              	 .cfi_startproc
 3205              	 
 3206              	 
 3207              	 
 3208 0000 80B4     	 push {r7}
 3209              	.LCFI287:
 3210              	 .cfi_def_cfa_offset 4
 3211              	 .cfi_offset 7,-4
 3212 0002 83B0     	 sub sp,sp,#12
 3213              	.LCFI288:
 3214              	 .cfi_def_cfa_offset 16
 3215 0004 00AF     	 add r7,sp,#0
 3216              	.LCFI289:
 3217              	 .cfi_def_cfa_register 7
 3218 0006 7860     	 str r0,[r7,#4]
 925:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSSEL_Msk)) |
 3219              	 .loc 3 925 0
 3220 0008 0649     	 ldr r1,.L229
 3221 000a 064B     	 ldr r3,.L229
 3222 000c DB68     	 ldr r3,[r3,#12]
 3223 000e 23F48032 	 bic r2,r3,#65536
 3224 0012 7B68     	 ldr r3,[r7,#4]
 3225 0014 1343     	 orrs r3,r3,r2
 3226 0016 CB60     	 str r3,[r1,#12]
 926:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 927:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3227              	 .loc 3 927 0
 3228 0018 0C37     	 adds r7,r7,#12
 3229              	.LCFI290:
 3230              	 .cfi_def_cfa_offset 4
 3231 001a BD46     	 mov sp,r7
 3232              	.LCFI291:
 3233              	 .cfi_def_cfa_register 13
 3234              	 
 3235 001c 5DF8047B 	 ldr r7,[sp],#4
 3236              	.LCFI292:
 3237              	 .cfi_restore 7
 3238              	 .cfi_def_cfa_offset 0
 3239 0020 7047     	 bx lr
 3240              	.L230:
 3241 0022 00BF     	 .align 2
 3242              	.L229:
 3243 0024 00460050 	 .word 1342195200
 3244              	 .cfi_endproc
 3245              	.LFE223:
 3247              	 .section .text.XMC_SCU_CLOCK_SetUsbClockSource,"ax",%progbits
 3248              	 .align 2
 3249              	 .global XMC_SCU_CLOCK_SetUsbClockSource
 3250              	 .thumb
 3251              	 .thumb_func
 3253              	XMC_SCU_CLOCK_SetUsbClockSource:
 3254              	.LFB224:
 928:../Libraries/XMCLib/src/xmc4_scu.c **** 
 929:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fUSB */
 930:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source)
 931:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3255              	 .loc 3 931 0
 3256              	 .cfi_startproc
 3257              	 
 3258              	 
 3259              	 
 3260 0000 80B4     	 push {r7}
 3261              	.LCFI293:
 3262              	 .cfi_def_cfa_offset 4
 3263              	 .cfi_offset 7,-4
 3264 0002 83B0     	 sub sp,sp,#12
 3265              	.LCFI294:
 3266              	 .cfi_def_cfa_offset 16
 3267 0004 00AF     	 add r7,sp,#0
 3268              	.LCFI295:
 3269              	 .cfi_def_cfa_register 7
 3270 0006 7860     	 str r0,[r7,#4]
 932:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBSEL_Msk)) |
 3271              	 .loc 3 932 0
 3272 0008 0649     	 ldr r1,.L232
 3273 000a 064B     	 ldr r3,.L232
 3274 000c 9B69     	 ldr r3,[r3,#24]
 3275 000e 23F48032 	 bic r2,r3,#65536
 3276 0012 7B68     	 ldr r3,[r7,#4]
 3277 0014 1343     	 orrs r3,r3,r2
 3278 0016 8B61     	 str r3,[r1,#24]
 933:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 934:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3279              	 .loc 3 934 0
 3280 0018 0C37     	 adds r7,r7,#12
 3281              	.LCFI296:
 3282              	 .cfi_def_cfa_offset 4
 3283 001a BD46     	 mov sp,r7
 3284              	.LCFI297:
 3285              	 .cfi_def_cfa_register 13
 3286              	 
 3287 001c 5DF8047B 	 ldr r7,[sp],#4
 3288              	.LCFI298:
 3289              	 .cfi_restore 7
 3290              	 .cfi_def_cfa_offset 0
 3291 0020 7047     	 bx lr
 3292              	.L233:
 3293 0022 00BF     	 .align 2
 3294              	.L232:
 3295 0024 00460050 	 .word 1342195200
 3296              	 .cfi_endproc
 3297              	.LFE224:
 3299              	 .section .text.XMC_SCU_CLOCK_SetWdtClockSource,"ax",%progbits
 3300              	 .align 2
 3301              	 .global XMC_SCU_CLOCK_SetWdtClockSource
 3302              	 .thumb
 3303              	 .thumb_func
 3305              	XMC_SCU_CLOCK_SetWdtClockSource:
 3306              	.LFB225:
 935:../Libraries/XMCLib/src/xmc4_scu.c **** 
 936:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fWDT */
 937:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source)
 938:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3307              	 .loc 3 938 0
 3308              	 .cfi_startproc
 3309              	 
 3310              	 
 3311              	 
 3312 0000 80B4     	 push {r7}
 3313              	.LCFI299:
 3314              	 .cfi_def_cfa_offset 4
 3315              	 .cfi_offset 7,-4
 3316 0002 83B0     	 sub sp,sp,#12
 3317              	.LCFI300:
 3318              	 .cfi_def_cfa_offset 16
 3319 0004 00AF     	 add r7,sp,#0
 3320              	.LCFI301:
 3321              	 .cfi_def_cfa_register 7
 3322 0006 7860     	 str r0,[r7,#4]
 939:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTSEL_Msk)) |
 3323              	 .loc 3 939 0
 3324 0008 0649     	 ldr r1,.L235
 3325 000a 064B     	 ldr r3,.L235
 3326 000c 5B6A     	 ldr r3,[r3,#36]
 3327 000e 23F44032 	 bic r2,r3,#196608
 3328 0012 7B68     	 ldr r3,[r7,#4]
 3329 0014 1343     	 orrs r3,r3,r2
 3330 0016 4B62     	 str r3,[r1,#36]
 940:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 941:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3331              	 .loc 3 941 0
 3332 0018 0C37     	 adds r7,r7,#12
 3333              	.LCFI302:
 3334              	 .cfi_def_cfa_offset 4
 3335 001a BD46     	 mov sp,r7
 3336              	.LCFI303:
 3337              	 .cfi_def_cfa_register 13
 3338              	 
 3339 001c 5DF8047B 	 ldr r7,[sp],#4
 3340              	.LCFI304:
 3341              	 .cfi_restore 7
 3342              	 .cfi_def_cfa_offset 0
 3343 0020 7047     	 bx lr
 3344              	.L236:
 3345 0022 00BF     	 .align 2
 3346              	.L235:
 3347 0024 00460050 	 .word 1342195200
 3348              	 .cfi_endproc
 3349              	.LFE225:
 3351              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockSource,"ax",%progbits
 3352              	 .align 2
 3353              	 .global XMC_SCU_CLOCK_SetExternalOutputClockSource
 3354              	 .thumb
 3355              	 .thumb_func
 3357              	XMC_SCU_CLOCK_SetExternalOutputClockSource:
 3358              	.LFB226:
 942:../Libraries/XMCLib/src/xmc4_scu.c **** 
 943:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fEXT */
 944:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t source)
 945:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3359              	 .loc 3 945 0
 3360              	 .cfi_startproc
 3361              	 
 3362              	 
 3363              	 
 3364 0000 80B4     	 push {r7}
 3365              	.LCFI305:
 3366              	 .cfi_def_cfa_offset 4
 3367              	 .cfi_offset 7,-4
 3368 0002 83B0     	 sub sp,sp,#12
 3369              	.LCFI306:
 3370              	 .cfi_def_cfa_offset 16
 3371 0004 00AF     	 add r7,sp,#0
 3372              	.LCFI307:
 3373              	 .cfi_def_cfa_register 7
 3374 0006 0346     	 mov r3,r0
 3375 0008 FB71     	 strb r3,[r7,#7]
 946:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3376              	 .loc 3 946 0
 3377 000a 0649     	 ldr r1,.L238
 3378 000c 054B     	 ldr r3,.L238
 3379 000e 9B6A     	 ldr r3,[r3,#40]
 3380 0010 23F00302 	 bic r2,r3,#3
 947:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 3381              	 .loc 3 947 0
 3382 0014 FB79     	 ldrb r3,[r7,#7]
 946:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3383              	 .loc 3 946 0
 3384 0016 1343     	 orrs r3,r3,r2
 3385 0018 8B62     	 str r3,[r1,#40]
 948:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3386              	 .loc 3 948 0
 3387 001a 0C37     	 adds r7,r7,#12
 3388              	.LCFI308:
 3389              	 .cfi_def_cfa_offset 4
 3390 001c BD46     	 mov sp,r7
 3391              	.LCFI309:
 3392              	 .cfi_def_cfa_register 13
 3393              	 
 3394 001e 5DF8047B 	 ldr r7,[sp],#4
 3395              	.LCFI310:
 3396              	 .cfi_restore 7
 3397              	 .cfi_def_cfa_offset 0
 3398 0022 7047     	 bx lr
 3399              	.L239:
 3400              	 .align 2
 3401              	.L238:
 3402 0024 00460050 	 .word 1342195200
 3403              	 .cfi_endproc
 3404              	.LFE226:
 3406              	 .section .text.XMC_SCU_CLOCK_SetSystemPllClockSource,"ax",%progbits
 3407              	 .align 2
 3408              	 .global XMC_SCU_CLOCK_SetSystemPllClockSource
 3409              	 .thumb
 3410              	 .thumb_func
 3412              	XMC_SCU_CLOCK_SetSystemPllClockSource:
 3413              	.LFB227:
 949:../Libraries/XMCLib/src/xmc4_scu.c **** 
 950:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fPLL */
 951:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source)
 952:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3414              	 .loc 3 952 0
 3415              	 .cfi_startproc
 3416              	 
 3417              	 
 3418              	 
 3419 0000 80B4     	 push {r7}
 3420              	.LCFI311:
 3421              	 .cfi_def_cfa_offset 4
 3422              	 .cfi_offset 7,-4
 3423 0002 83B0     	 sub sp,sp,#12
 3424              	.LCFI312:
 3425              	 .cfi_def_cfa_offset 16
 3426 0004 00AF     	 add r7,sp,#0
 3427              	.LCFI313:
 3428              	 .cfi_def_cfa_register 7
 3429 0006 0346     	 mov r3,r0
 3430 0008 FB80     	 strh r3,[r7,#6]
 953:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Check input clock */
 954:../Libraries/XMCLib/src/xmc4_scu.c ****   if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) /* Select PLLClockSource */
 3431              	 .loc 3 954 0
 3432 000a FB88     	 ldrh r3,[r7,#6]
 3433 000c 002B     	 cmp r3,#0
 3434 000e 08D1     	 bne .L241
 955:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 956:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 &= (uint32_t)~(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3435              	 .loc 3 956 0
 3436 0010 0A4A     	 ldr r2,.L243
 3437 0012 0A4B     	 ldr r3,.L243
 3438 0014 DB68     	 ldr r3,[r3,#12]
 3439 0016 23F48073 	 bic r3,r3,#256
 3440 001a 23F00103 	 bic r3,r3,#1
 3441 001e D360     	 str r3,[r2,#12]
 3442 0020 07E0     	 b .L240
 3443              	.L241:
 957:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 958:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 959:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 960:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 |= (uint32_t)(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3444              	 .loc 3 960 0
 3445 0022 064A     	 ldr r2,.L243
 3446 0024 054B     	 ldr r3,.L243
 3447 0026 DB68     	 ldr r3,[r3,#12]
 3448 0028 43F48073 	 orr r3,r3,#256
 3449 002c 43F00103 	 orr r3,r3,#1
 3450 0030 D360     	 str r3,[r2,#12]
 3451              	.L240:
 961:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 962:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3452              	 .loc 3 962 0
 3453 0032 0C37     	 adds r7,r7,#12
 3454              	.LCFI314:
 3455              	 .cfi_def_cfa_offset 4
 3456 0034 BD46     	 mov sp,r7
 3457              	.LCFI315:
 3458              	 .cfi_def_cfa_register 13
 3459              	 
 3460 0036 5DF8047B 	 ldr r7,[sp],#4
 3461              	.LCFI316:
 3462              	 .cfi_restore 7
 3463              	 .cfi_def_cfa_offset 0
 3464 003a 7047     	 bx lr
 3465              	.L244:
 3466              	 .align 2
 3467              	.L243:
 3468 003c 10470050 	 .word 1342195472
 3469              	 .cfi_endproc
 3470              	.LFE227:
 3472              	 .section .text.XMC_SCU_HIB_SetRtcClockSource,"ax",%progbits
 3473              	 .align 2
 3474              	 .global XMC_SCU_HIB_SetRtcClockSource
 3475              	 .thumb
 3476              	 .thumb_func
 3478              	XMC_SCU_HIB_SetRtcClockSource:
 3479              	.LFB228:
 963:../Libraries/XMCLib/src/xmc4_scu.c **** 
 964:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fRTC */
 965:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source)
 966:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3480              	 .loc 3 966 0
 3481              	 .cfi_startproc
 3482              	 
 3483              	 
 3484              	 
 3485 0000 80B4     	 push {r7}
 3486              	.LCFI317:
 3487              	 .cfi_def_cfa_offset 4
 3488              	 .cfi_offset 7,-4
 3489 0002 83B0     	 sub sp,sp,#12
 3490              	.LCFI318:
 3491              	 .cfi_def_cfa_offset 16
 3492 0004 00AF     	 add r7,sp,#0
 3493              	.LCFI319:
 3494              	 .cfi_def_cfa_register 7
 3495 0006 0346     	 mov r3,r0
 3496 0008 FB71     	 strb r3,[r7,#7]
 967:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of HDCR register in hibernate domain is completed */
 968:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3497              	 .loc 3 968 0
 3498 000a 00BF     	 nop
 3499              	.L246:
 3500              	 .loc 3 968 0 is_stmt 0 discriminator 1
 3501 000c 094B     	 ldr r3,.L247
 3502 000e D3F8C430 	 ldr r3,[r3,#196]
 3503 0012 03F00803 	 and r3,r3,#8
 3504 0016 002B     	 cmp r3,#0
 3505 0018 F8D1     	 bne .L246
 969:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 970:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 971:../Libraries/XMCLib/src/xmc4_scu.c **** 
 972:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_RCS_Msk)) |
 3506              	 .loc 3 972 0 is_stmt 1
 3507 001a 0749     	 ldr r1,.L247+4
 3508 001c 064B     	 ldr r3,.L247+4
 3509 001e DB68     	 ldr r3,[r3,#12]
 3510 0020 23F04002 	 bic r2,r3,#64
 973:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3511              	 .loc 3 973 0
 3512 0024 FB79     	 ldrb r3,[r7,#7]
 972:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3513              	 .loc 3 972 0
 3514 0026 1343     	 orrs r3,r3,r2
 3515 0028 CB60     	 str r3,[r1,#12]
 974:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3516              	 .loc 3 974 0
 3517 002a 0C37     	 adds r7,r7,#12
 3518              	.LCFI320:
 3519              	 .cfi_def_cfa_offset 4
 3520 002c BD46     	 mov sp,r7
 3521              	.LCFI321:
 3522              	 .cfi_def_cfa_register 13
 3523              	 
 3524 002e 5DF8047B 	 ldr r7,[sp],#4
 3525              	.LCFI322:
 3526              	 .cfi_restore 7
 3527              	 .cfi_def_cfa_offset 0
 3528 0032 7047     	 bx lr
 3529              	.L248:
 3530              	 .align 2
 3531              	.L247:
 3532 0034 00400050 	 .word 1342193664
 3533 0038 00430050 	 .word 1342194432
 3534              	 .cfi_endproc
 3535              	.LFE228:
 3537              	 .section .text.XMC_SCU_HIB_SetStandbyClockSource,"ax",%progbits
 3538              	 .align 2
 3539              	 .global XMC_SCU_HIB_SetStandbyClockSource
 3540              	 .thumb
 3541              	 .thumb_func
 3543              	XMC_SCU_HIB_SetStandbyClockSource:
 3544              	.LFB229:
 975:../Libraries/XMCLib/src/xmc4_scu.c **** 
 976:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSTDBY */
 977:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source)
 978:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3545              	 .loc 3 978 0
 3546              	 .cfi_startproc
 3547              	 
 3548              	 
 3549              	 
 3550 0000 80B4     	 push {r7}
 3551              	.LCFI323:
 3552              	 .cfi_def_cfa_offset 4
 3553              	 .cfi_offset 7,-4
 3554 0002 83B0     	 sub sp,sp,#12
 3555              	.LCFI324:
 3556              	 .cfi_def_cfa_offset 16
 3557 0004 00AF     	 add r7,sp,#0
 3558              	.LCFI325:
 3559              	 .cfi_def_cfa_register 7
 3560 0006 0346     	 mov r3,r0
 3561 0008 FB71     	 strb r3,[r7,#7]
 979:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3562              	 .loc 3 979 0
 3563 000a 00BF     	 nop
 3564              	.L250:
 3565              	 .loc 3 979 0 is_stmt 0 discriminator 1
 3566 000c 094B     	 ldr r3,.L251
 3567 000e D3F8C430 	 ldr r3,[r3,#196]
 3568 0012 03F00803 	 and r3,r3,#8
 3569 0016 002B     	 cmp r3,#0
 3570 0018 F8D1     	 bne .L250
 980:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 981:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 982:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 983:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_STDBYSEL_Msk)) |
 3571              	 .loc 3 983 0 is_stmt 1
 3572 001a 0749     	 ldr r1,.L251+4
 3573 001c 064B     	 ldr r3,.L251+4
 3574 001e DB68     	 ldr r3,[r3,#12]
 3575 0020 23F08002 	 bic r2,r3,#128
 984:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3576              	 .loc 3 984 0
 3577 0024 FB79     	 ldrb r3,[r7,#7]
 983:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3578              	 .loc 3 983 0
 3579 0026 1343     	 orrs r3,r3,r2
 3580 0028 CB60     	 str r3,[r1,#12]
 985:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3581              	 .loc 3 985 0
 3582 002a 0C37     	 adds r7,r7,#12
 3583              	.LCFI326:
 3584              	 .cfi_def_cfa_offset 4
 3585 002c BD46     	 mov sp,r7
 3586              	.LCFI327:
 3587              	 .cfi_def_cfa_register 13
 3588              	 
 3589 002e 5DF8047B 	 ldr r7,[sp],#4
 3590              	.LCFI328:
 3591              	 .cfi_restore 7
 3592              	 .cfi_def_cfa_offset 0
 3593 0032 7047     	 bx lr
 3594              	.L252:
 3595              	 .align 2
 3596              	.L251:
 3597 0034 00400050 	 .word 1342193664
 3598 0038 00430050 	 .word 1342194432
 3599              	 .cfi_endproc
 3600              	.LFE229:
 3602              	 .section .text.XMC_SCU_CLOCK_SetSystemClockDivider,"ax",%progbits
 3603              	 .align 2
 3604              	 .global XMC_SCU_CLOCK_SetSystemClockDivider
 3605              	 .thumb
 3606              	 .thumb_func
 3608              	XMC_SCU_CLOCK_SetSystemClockDivider:
 3609              	.LFB230:
 986:../Libraries/XMCLib/src/xmc4_scu.c **** 
 987:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsys and its parent */
 988:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider)
 989:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3610              	 .loc 3 989 0
 3611              	 .cfi_startproc
 3612              	 
 3613              	 
 3614              	 
 3615 0000 80B4     	 push {r7}
 3616              	.LCFI329:
 3617              	 .cfi_def_cfa_offset 4
 3618              	 .cfi_offset 7,-4
 3619 0002 83B0     	 sub sp,sp,#12
 3620              	.LCFI330:
 3621              	 .cfi_def_cfa_offset 16
 3622 0004 00AF     	 add r7,sp,#0
 3623              	.LCFI331:
 3624              	 .cfi_def_cfa_register 7
 3625 0006 7860     	 str r0,[r7,#4]
 990:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSystemClockDivider:Wrong clock divider value",
 991:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_SYSCLKCR_SYSDIV_Msk + 1UL)) );
 992:../Libraries/XMCLib/src/xmc4_scu.c **** 
 993:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSDIV_Msk)) |
 3626              	 .loc 3 993 0
 3627 0008 0649     	 ldr r1,.L254
 3628 000a 064B     	 ldr r3,.L254
 3629 000c DB68     	 ldr r3,[r3,#12]
 3630 000e 23F0FF02 	 bic r2,r3,#255
 994:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3631              	 .loc 3 994 0
 3632 0012 7B68     	 ldr r3,[r7,#4]
 3633 0014 013B     	 subs r3,r3,#1
 993:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3634              	 .loc 3 993 0
 3635 0016 1343     	 orrs r3,r3,r2
 3636 0018 CB60     	 str r3,[r1,#12]
 995:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3637              	 .loc 3 995 0
 3638 001a 0C37     	 adds r7,r7,#12
 3639              	.LCFI332:
 3640              	 .cfi_def_cfa_offset 4
 3641 001c BD46     	 mov sp,r7
 3642              	.LCFI333:
 3643              	 .cfi_def_cfa_register 13
 3644              	 
 3645 001e 5DF8047B 	 ldr r7,[sp],#4
 3646              	.LCFI334:
 3647              	 .cfi_restore 7
 3648              	 .cfi_def_cfa_offset 0
 3649 0022 7047     	 bx lr
 3650              	.L255:
 3651              	 .align 2
 3652              	.L254:
 3653 0024 00460050 	 .word 1342195200
 3654              	 .cfi_endproc
 3655              	.LFE230:
 3657              	 .section .text.XMC_SCU_CLOCK_SetCcuClockDivider,"ax",%progbits
 3658              	 .align 2
 3659              	 .global XMC_SCU_CLOCK_SetCcuClockDivider
 3660              	 .thumb
 3661              	 .thumb_func
 3663              	XMC_SCU_CLOCK_SetCcuClockDivider:
 3664              	.LFB231:
 996:../Libraries/XMCLib/src/xmc4_scu.c **** 
 997:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fccu and its parent */
 998:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t divider)
 999:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3665              	 .loc 3 999 0
 3666              	 .cfi_startproc
 3667              	 
 3668              	 
 3669              	 
 3670 0000 80B4     	 push {r7}
 3671              	.LCFI335:
 3672              	 .cfi_def_cfa_offset 4
 3673              	 .cfi_offset 7,-4
 3674 0002 83B0     	 sub sp,sp,#12
 3675              	.LCFI336:
 3676              	 .cfi_def_cfa_offset 16
 3677 0004 00AF     	 add r7,sp,#0
 3678              	.LCFI337:
 3679              	 .cfi_def_cfa_register 7
 3680 0006 7860     	 str r0,[r7,#4]
1000:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCapcomClockDivider:Wrong clock divider value", (divider <= 2UL) );
1001:../Libraries/XMCLib/src/xmc4_scu.c **** 
1002:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CCUCLKCR = (SCU_CLK->CCUCLKCR & ((uint32_t)~SCU_CLK_CCUCLKCR_CCUDIV_Msk)) |
 3681              	 .loc 3 1002 0
 3682 0008 0649     	 ldr r1,.L257
 3683 000a 064B     	 ldr r3,.L257
 3684 000c 1B6A     	 ldr r3,[r3,#32]
 3685 000e 23F00102 	 bic r2,r3,#1
1003:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3686              	 .loc 3 1003 0
 3687 0012 7B68     	 ldr r3,[r7,#4]
 3688 0014 013B     	 subs r3,r3,#1
1002:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3689              	 .loc 3 1002 0
 3690 0016 1343     	 orrs r3,r3,r2
 3691 0018 0B62     	 str r3,[r1,#32]
1004:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3692              	 .loc 3 1004 0
 3693 001a 0C37     	 adds r7,r7,#12
 3694              	.LCFI338:
 3695              	 .cfi_def_cfa_offset 4
 3696 001c BD46     	 mov sp,r7
 3697              	.LCFI339:
 3698              	 .cfi_def_cfa_register 13
 3699              	 
 3700 001e 5DF8047B 	 ldr r7,[sp],#4
 3701              	.LCFI340:
 3702              	 .cfi_restore 7
 3703              	 .cfi_def_cfa_offset 0
 3704 0022 7047     	 bx lr
 3705              	.L258:
 3706              	 .align 2
 3707              	.L257:
 3708 0024 00460050 	 .word 1342195200
 3709              	 .cfi_endproc
 3710              	.LFE231:
 3712              	 .section .text.XMC_SCU_CLOCK_SetCpuClockDivider,"ax",%progbits
 3713              	 .align 2
 3714              	 .global XMC_SCU_CLOCK_SetCpuClockDivider
 3715              	 .thumb
 3716              	 .thumb_func
 3718              	XMC_SCU_CLOCK_SetCpuClockDivider:
 3719              	.LFB232:
1005:../Libraries/XMCLib/src/xmc4_scu.c **** 
1006:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fcpu and its parent */
1007:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t divider)
1008:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3720              	 .loc 3 1008 0
 3721              	 .cfi_startproc
 3722              	 
 3723              	 
 3724              	 
 3725 0000 80B4     	 push {r7}
 3726              	.LCFI341:
 3727              	 .cfi_def_cfa_offset 4
 3728              	 .cfi_offset 7,-4
 3729 0002 83B0     	 sub sp,sp,#12
 3730              	.LCFI342:
 3731              	 .cfi_def_cfa_offset 16
 3732 0004 00AF     	 add r7,sp,#0
 3733              	.LCFI343:
 3734              	 .cfi_def_cfa_register 7
 3735 0006 7860     	 str r0,[r7,#4]
1009:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCpuClockDivider:Wrong clock divider value", (divider <= 2UL) );
1010:../Libraries/XMCLib/src/xmc4_scu.c **** 
1011:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CPUCLKCR = (SCU_CLK->CPUCLKCR & ((uint32_t)~SCU_CLK_CPUCLKCR_CPUDIV_Msk)) |
 3736              	 .loc 3 1011 0
 3737 0008 0649     	 ldr r1,.L260
 3738 000a 064B     	 ldr r3,.L260
 3739 000c 1B69     	 ldr r3,[r3,#16]
 3740 000e 23F00102 	 bic r2,r3,#1
1012:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3741              	 .loc 3 1012 0
 3742 0012 7B68     	 ldr r3,[r7,#4]
 3743 0014 013B     	 subs r3,r3,#1
1011:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3744              	 .loc 3 1011 0
 3745 0016 1343     	 orrs r3,r3,r2
 3746 0018 0B61     	 str r3,[r1,#16]
1013:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3747              	 .loc 3 1013 0
 3748 001a 0C37     	 adds r7,r7,#12
 3749              	.LCFI344:
 3750              	 .cfi_def_cfa_offset 4
 3751 001c BD46     	 mov sp,r7
 3752              	.LCFI345:
 3753              	 .cfi_def_cfa_register 13
 3754              	 
 3755 001e 5DF8047B 	 ldr r7,[sp],#4
 3756              	.LCFI346:
 3757              	 .cfi_restore 7
 3758              	 .cfi_def_cfa_offset 0
 3759 0022 7047     	 bx lr
 3760              	.L261:
 3761              	 .align 2
 3762              	.L260:
 3763 0024 00460050 	 .word 1342195200
 3764              	 .cfi_endproc
 3765              	.LFE232:
 3767              	 .section .text.XMC_SCU_CLOCK_SetPeripheralClockDivider,"ax",%progbits
 3768              	 .align 2
 3769              	 .global XMC_SCU_CLOCK_SetPeripheralClockDivider
 3770              	 .thumb
 3771              	 .thumb_func
 3773              	XMC_SCU_CLOCK_SetPeripheralClockDivider:
 3774              	.LFB233:
1014:../Libraries/XMCLib/src/xmc4_scu.c **** 
1015:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fperiph and its parent */
1016:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t divider)
1017:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3775              	 .loc 3 1017 0
 3776              	 .cfi_startproc
 3777              	 
 3778              	 
 3779              	 
 3780 0000 80B4     	 push {r7}
 3781              	.LCFI347:
 3782              	 .cfi_def_cfa_offset 4
 3783              	 .cfi_offset 7,-4
 3784 0002 83B0     	 sub sp,sp,#12
 3785              	.LCFI348:
 3786              	 .cfi_def_cfa_offset 16
 3787 0004 00AF     	 add r7,sp,#0
 3788              	.LCFI349:
 3789              	 .cfi_def_cfa_register 7
 3790 0006 7860     	 str r0,[r7,#4]
1018:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetPeripheralClockDivider:Wrong clock divider value", (divider <= 2UL) 
1019:../Libraries/XMCLib/src/xmc4_scu.c **** 
1020:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->PBCLKCR = (SCU_CLK->PBCLKCR & ((uint32_t)~SCU_CLK_PBCLKCR_PBDIV_Msk)) |
 3791              	 .loc 3 1020 0
 3792 0008 0649     	 ldr r1,.L263
 3793 000a 064B     	 ldr r3,.L263
 3794 000c 5B69     	 ldr r3,[r3,#20]
 3795 000e 23F00102 	 bic r2,r3,#1
1021:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3796              	 .loc 3 1021 0
 3797 0012 7B68     	 ldr r3,[r7,#4]
 3798 0014 013B     	 subs r3,r3,#1
1020:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3799              	 .loc 3 1020 0
 3800 0016 1343     	 orrs r3,r3,r2
 3801 0018 4B61     	 str r3,[r1,#20]
1022:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3802              	 .loc 3 1022 0
 3803 001a 0C37     	 adds r7,r7,#12
 3804              	.LCFI350:
 3805              	 .cfi_def_cfa_offset 4
 3806 001c BD46     	 mov sp,r7
 3807              	.LCFI351:
 3808              	 .cfi_def_cfa_register 13
 3809              	 
 3810 001e 5DF8047B 	 ldr r7,[sp],#4
 3811              	.LCFI352:
 3812              	 .cfi_restore 7
 3813              	 .cfi_def_cfa_offset 0
 3814 0022 7047     	 bx lr
 3815              	.L264:
 3816              	 .align 2
 3817              	.L263:
 3818 0024 00460050 	 .word 1342195200
 3819              	 .cfi_endproc
 3820              	.LFE233:
 3822              	 .section .text.XMC_SCU_CLOCK_SetUsbClockDivider,"ax",%progbits
 3823              	 .align 2
 3824              	 .global XMC_SCU_CLOCK_SetUsbClockDivider
 3825              	 .thumb
 3826              	 .thumb_func
 3828              	XMC_SCU_CLOCK_SetUsbClockDivider:
 3829              	.LFB234:
1023:../Libraries/XMCLib/src/xmc4_scu.c **** 
1024:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsdmmc and its parent */
1025:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t divider)
1026:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3830              	 .loc 3 1026 0
 3831              	 .cfi_startproc
 3832              	 
 3833              	 
 3834              	 
 3835 0000 80B4     	 push {r7}
 3836              	.LCFI353:
 3837              	 .cfi_def_cfa_offset 4
 3838              	 .cfi_offset 7,-4
 3839 0002 83B0     	 sub sp,sp,#12
 3840              	.LCFI354:
 3841              	 .cfi_def_cfa_offset 16
 3842 0004 00AF     	 add r7,sp,#0
 3843              	.LCFI355:
 3844              	 .cfi_def_cfa_register 7
 3845 0006 7860     	 str r0,[r7,#4]
1027:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSdmmcClockDivider:Wrong clock divider value",
1028:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_USBCLKCR_USBDIV_Msk + 1UL)) );
1029:../Libraries/XMCLib/src/xmc4_scu.c **** 
1030:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBDIV_Msk)) |
 3846              	 .loc 3 1030 0
 3847 0008 0649     	 ldr r1,.L266
 3848 000a 064B     	 ldr r3,.L266
 3849 000c 9B69     	 ldr r3,[r3,#24]
 3850 000e 23F00702 	 bic r2,r3,#7
1031:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos);
 3851              	 .loc 3 1031 0
 3852 0012 7B68     	 ldr r3,[r7,#4]
 3853 0014 013B     	 subs r3,r3,#1
1030:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos);
 3854              	 .loc 3 1030 0
 3855 0016 1343     	 orrs r3,r3,r2
 3856 0018 8B61     	 str r3,[r1,#24]
1032:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3857              	 .loc 3 1032 0
 3858 001a 0C37     	 adds r7,r7,#12
 3859              	.LCFI356:
 3860              	 .cfi_def_cfa_offset 4
 3861 001c BD46     	 mov sp,r7
 3862              	.LCFI357:
 3863              	 .cfi_def_cfa_register 13
 3864              	 
 3865 001e 5DF8047B 	 ldr r7,[sp],#4
 3866              	.LCFI358:
 3867              	 .cfi_restore 7
 3868              	 .cfi_def_cfa_offset 0
 3869 0022 7047     	 bx lr
 3870              	.L267:
 3871              	 .align 2
 3872              	.L266:
 3873 0024 00460050 	 .word 1342195200
 3874              	 .cfi_endproc
 3875              	.LFE234:
 3877              	 .section .text.XMC_SCU_CLOCK_SetEbuClockDivider,"ax",%progbits
 3878              	 .align 2
 3879              	 .global XMC_SCU_CLOCK_SetEbuClockDivider
 3880              	 .thumb
 3881              	 .thumb_func
 3883              	XMC_SCU_CLOCK_SetEbuClockDivider:
 3884              	.LFB235:
1033:../Libraries/XMCLib/src/xmc4_scu.c **** 
1034:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
1035:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between febu and its parent */
1036:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t divider)
1037:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3885              	 .loc 3 1037 0
 3886              	 .cfi_startproc
 3887              	 
 3888              	 
 3889              	 
 3890 0000 80B4     	 push {r7}
 3891              	.LCFI359:
 3892              	 .cfi_def_cfa_offset 4
 3893              	 .cfi_offset 7,-4
 3894 0002 83B0     	 sub sp,sp,#12
 3895              	.LCFI360:
 3896              	 .cfi_def_cfa_offset 16
 3897 0004 00AF     	 add r7,sp,#0
 3898              	.LCFI361:
 3899              	 .cfi_def_cfa_register 7
 3900 0006 7860     	 str r0,[r7,#4]
1038:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetEbuClockDivider:Wrong clock divider value",
1039:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_EBUCLKCR_EBUDIV_Msk + 1UL) ) );
1040:../Libraries/XMCLib/src/xmc4_scu.c **** 
1041:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EBUCLKCR = (SCU_CLK->EBUCLKCR & ((uint32_t)~SCU_CLK_EBUCLKCR_EBUDIV_Msk)) |
 3901              	 .loc 3 1041 0
 3902 0008 0649     	 ldr r1,.L269
 3903 000a 064B     	 ldr r3,.L269
 3904 000c DB69     	 ldr r3,[r3,#28]
 3905 000e 23F03F02 	 bic r2,r3,#63
1042:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 3906              	 .loc 3 1042 0
 3907 0012 7B68     	 ldr r3,[r7,#4]
 3908 0014 013B     	 subs r3,r3,#1
1041:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 3909              	 .loc 3 1041 0
 3910 0016 1343     	 orrs r3,r3,r2
 3911 0018 CB61     	 str r3,[r1,#28]
1043:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3912              	 .loc 3 1043 0
 3913 001a 0C37     	 adds r7,r7,#12
 3914              	.LCFI362:
 3915              	 .cfi_def_cfa_offset 4
 3916 001c BD46     	 mov sp,r7
 3917              	.LCFI363:
 3918              	 .cfi_def_cfa_register 13
 3919              	 
 3920 001e 5DF8047B 	 ldr r7,[sp],#4
 3921              	.LCFI364:
 3922              	 .cfi_restore 7
 3923              	 .cfi_def_cfa_offset 0
 3924 0022 7047     	 bx lr
 3925              	.L270:
 3926              	 .align 2
 3927              	.L269:
 3928 0024 00460050 	 .word 1342195200
 3929              	 .cfi_endproc
 3930              	.LFE235:
 3932              	 .section .text.XMC_SCU_CLOCK_SetWdtClockDivider,"ax",%progbits
 3933              	 .align 2
 3934              	 .global XMC_SCU_CLOCK_SetWdtClockDivider
 3935              	 .thumb
 3936              	 .thumb_func
 3938              	XMC_SCU_CLOCK_SetWdtClockDivider:
 3939              	.LFB236:
1044:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1045:../Libraries/XMCLib/src/xmc4_scu.c **** 
1046:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fwdt and its parent */
1047:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t divider)
1048:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3940              	 .loc 3 1048 0
 3941              	 .cfi_startproc
 3942              	 
 3943              	 
 3944              	 
 3945 0000 80B4     	 push {r7}
 3946              	.LCFI365:
 3947              	 .cfi_def_cfa_offset 4
 3948              	 .cfi_offset 7,-4
 3949 0002 83B0     	 sub sp,sp,#12
 3950              	.LCFI366:
 3951              	 .cfi_def_cfa_offset 16
 3952 0004 00AF     	 add r7,sp,#0
 3953              	.LCFI367:
 3954              	 .cfi_def_cfa_register 7
 3955 0006 7860     	 str r0,[r7,#4]
1049:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetWdtClockDivider:Wrong clock divider value",
1050:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_WDTCLKCR_WDTDIV_Msk + 1UL) ) );
1051:../Libraries/XMCLib/src/xmc4_scu.c **** 
1052:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTDIV_Msk)) |
 3956              	 .loc 3 1052 0
 3957 0008 0649     	 ldr r1,.L272
 3958 000a 064B     	 ldr r3,.L272
 3959 000c 5B6A     	 ldr r3,[r3,#36]
 3960 000e 23F0FF02 	 bic r2,r3,#255
1053:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3961              	 .loc 3 1053 0
 3962 0012 7B68     	 ldr r3,[r7,#4]
 3963 0014 013B     	 subs r3,r3,#1
1052:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3964              	 .loc 3 1052 0
 3965 0016 1343     	 orrs r3,r3,r2
 3966 0018 4B62     	 str r3,[r1,#36]
1054:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3967              	 .loc 3 1054 0
 3968 001a 0C37     	 adds r7,r7,#12
 3969              	.LCFI368:
 3970              	 .cfi_def_cfa_offset 4
 3971 001c BD46     	 mov sp,r7
 3972              	.LCFI369:
 3973              	 .cfi_def_cfa_register 13
 3974              	 
 3975 001e 5DF8047B 	 ldr r7,[sp],#4
 3976              	.LCFI370:
 3977              	 .cfi_restore 7
 3978              	 .cfi_def_cfa_offset 0
 3979 0022 7047     	 bx lr
 3980              	.L273:
 3981              	 .align 2
 3982              	.L272:
 3983 0024 00460050 	 .word 1342195200
 3984              	 .cfi_endproc
 3985              	.LFE236:
 3987              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider,"ax",%progbits
 3988              	 .align 2
 3989              	 .global XMC_SCU_CLOCK_SetExternalOutputClockDivider
 3990              	 .thumb
 3991              	 .thumb_func
 3993              	XMC_SCU_CLOCK_SetExternalOutputClockDivider:
 3994              	.LFB237:
1055:../Libraries/XMCLib/src/xmc4_scu.c **** 
1056:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fext and its parent */
1057:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t divider)
1058:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3995              	 .loc 3 1058 0
 3996              	 .cfi_startproc
 3997              	 
 3998              	 
 3999              	 
 4000 0000 80B4     	 push {r7}
 4001              	.LCFI371:
 4002              	 .cfi_def_cfa_offset 4
 4003              	 .cfi_offset 7,-4
 4004 0002 83B0     	 sub sp,sp,#12
 4005              	.LCFI372:
 4006              	 .cfi_def_cfa_offset 16
 4007 0004 00AF     	 add r7,sp,#0
 4008              	.LCFI373:
 4009              	 .cfi_def_cfa_register 7
 4010 0006 7860     	 str r0,[r7,#4]
1059:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetExternalOutputClockDivider:Wrong clock divider value",
1060:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_EXTCLKCR_ECKDIV_Msk + 1UL) ) );
1061:../Libraries/XMCLib/src/xmc4_scu.c **** 
1062:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKDIV_Msk)) |
 4011              	 .loc 3 1062 0
 4012 0008 0849     	 ldr r1,.L275
 4013 000a 084B     	 ldr r3,.L275
 4014 000c 9B6A     	 ldr r3,[r3,#40]
 4015 000e 23F0FF73 	 bic r3,r3,#33423360
 4016 0012 23F48033 	 bic r3,r3,#65536
1063:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 4017              	 .loc 3 1063 0
 4018 0016 7A68     	 ldr r2,[r7,#4]
 4019 0018 013A     	 subs r2,r2,#1
 4020 001a 1204     	 lsls r2,r2,#16
1062:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 4021              	 .loc 3 1062 0
 4022 001c 1343     	 orrs r3,r3,r2
 4023 001e 8B62     	 str r3,[r1,#40]
1064:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4024              	 .loc 3 1064 0
 4025 0020 0C37     	 adds r7,r7,#12
 4026              	.LCFI374:
 4027              	 .cfi_def_cfa_offset 4
 4028 0022 BD46     	 mov sp,r7
 4029              	.LCFI375:
 4030              	 .cfi_def_cfa_register 13
 4031              	 
 4032 0024 5DF8047B 	 ldr r7,[sp],#4
 4033              	.LCFI376:
 4034              	 .cfi_restore 7
 4035              	 .cfi_def_cfa_offset 0
 4036 0028 7047     	 bx lr
 4037              	.L276:
 4038 002a 00BF     	 .align 2
 4039              	.L275:
 4040 002c 00460050 	 .word 1342195200
 4041              	 .cfi_endproc
 4042              	.LFE237:
 4044              	 .section .text.XMC_SCU_CLOCK_SetECATClockDivider,"ax",%progbits
 4045              	 .align 2
 4046              	 .global XMC_SCU_CLOCK_SetECATClockDivider
 4047              	 .thumb
 4048              	 .thumb_func
 4050              	XMC_SCU_CLOCK_SetECATClockDivider:
 4051              	.LFB238:
1065:../Libraries/XMCLib/src/xmc4_scu.c **** 
1066:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
1067:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the ECAT clock by setting the clock divider for the ECAT clock source */
1068:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider)
1069:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4052              	 .loc 3 1069 0
 4053              	 .cfi_startproc
 4054              	 
 4055              	 
 4056              	 
 4057 0000 80B4     	 push {r7}
 4058              	.LCFI377:
 4059              	 .cfi_def_cfa_offset 4
 4060              	 .cfi_offset 7,-4
 4061 0002 83B0     	 sub sp,sp,#12
 4062              	.LCFI378:
 4063              	 .cfi_def_cfa_offset 16
 4064 0004 00AF     	 add r7,sp,#0
 4065              	.LCFI379:
 4066              	 .cfi_def_cfa_register 7
 4067 0006 7860     	 str r0,[r7,#4]
1070:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ~SCU_CLK_ECATCLKCR_ECADIV_Msk) |
 4068              	 .loc 3 1070 0
 4069 0008 0649     	 ldr r1,.L278
 4070 000a 064B     	 ldr r3,.L278
 4071 000c 9B6B     	 ldr r3,[r3,#56]
 4072 000e 23F00302 	 bic r2,r3,#3
1071:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_ECATCLKCR_ECADIV_Pos);
 4073              	 .loc 3 1071 0
 4074 0012 7B68     	 ldr r3,[r7,#4]
 4075 0014 013B     	 subs r3,r3,#1
1070:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ~SCU_CLK_ECATCLKCR_ECADIV_Msk) |
 4076              	 .loc 3 1070 0
 4077 0016 1343     	 orrs r3,r3,r2
 4078 0018 8B63     	 str r3,[r1,#56]
1072:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4079              	 .loc 3 1072 0
 4080 001a 0C37     	 adds r7,r7,#12
 4081              	.LCFI380:
 4082              	 .cfi_def_cfa_offset 4
 4083 001c BD46     	 mov sp,r7
 4084              	.LCFI381:
 4085              	 .cfi_def_cfa_register 13
 4086              	 
 4087 001e 5DF8047B 	 ldr r7,[sp],#4
 4088              	.LCFI382:
 4089              	 .cfi_restore 7
 4090              	 .cfi_def_cfa_offset 0
 4091 0022 7047     	 bx lr
 4092              	.L279:
 4093              	 .align 2
 4094              	.L278:
 4095 0024 00460050 	 .word 1342195200
 4096              	 .cfi_endproc
 4097              	.LFE238:
 4099              	 .section .text.XMC_SCU_CLOCK_EnableClock,"ax",%progbits
 4100              	 .align 2
 4101              	 .global XMC_SCU_CLOCK_EnableClock
 4102              	 .thumb
 4103              	 .thumb_func
 4105              	XMC_SCU_CLOCK_EnableClock:
 4106              	.LFB239:
1073:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1074:../Libraries/XMCLib/src/xmc4_scu.c **** 
1075:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a given module clock */
1076:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock)
1077:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4107              	 .loc 3 1077 0
 4108              	 .cfi_startproc
 4109              	 
 4110              	 
 4111              	 
 4112 0000 80B4     	 push {r7}
 4113              	.LCFI383:
 4114              	 .cfi_def_cfa_offset 4
 4115              	 .cfi_offset 7,-4
 4116 0002 83B0     	 sub sp,sp,#12
 4117              	.LCFI384:
 4118              	 .cfi_def_cfa_offset 16
 4119 0004 00AF     	 add r7,sp,#0
 4120              	.LCFI385:
 4121              	 .cfi_def_cfa_register 7
 4122 0006 0346     	 mov r3,r0
 4123 0008 FB71     	 strb r3,[r7,#7]
1078:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKSET = ((uint32_t)clock);
 4124              	 .loc 3 1078 0
 4125 000a 044A     	 ldr r2,.L281
 4126 000c FB79     	 ldrb r3,[r7,#7]
 4127 000e 5360     	 str r3,[r2,#4]
1079:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4128              	 .loc 3 1079 0
 4129 0010 0C37     	 adds r7,r7,#12
 4130              	.LCFI386:
 4131              	 .cfi_def_cfa_offset 4
 4132 0012 BD46     	 mov sp,r7
 4133              	.LCFI387:
 4134              	 .cfi_def_cfa_register 13
 4135              	 
 4136 0014 5DF8047B 	 ldr r7,[sp],#4
 4137              	.LCFI388:
 4138              	 .cfi_restore 7
 4139              	 .cfi_def_cfa_offset 0
 4140 0018 7047     	 bx lr
 4141              	.L282:
 4142 001a 00BF     	 .align 2
 4143              	.L281:
 4144 001c 00460050 	 .word 1342195200
 4145              	 .cfi_endproc
 4146              	.LFE239:
 4148              	 .section .text.XMC_SCU_CLOCK_DisableClock,"ax",%progbits
 4149              	 .align 2
 4150              	 .global XMC_SCU_CLOCK_DisableClock
 4151              	 .thumb
 4152              	 .thumb_func
 4154              	XMC_SCU_CLOCK_DisableClock:
 4155              	.LFB240:
1080:../Libraries/XMCLib/src/xmc4_scu.c **** 
1081:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a given module clock */
1082:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock)
1083:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4156              	 .loc 3 1083 0
 4157              	 .cfi_startproc
 4158              	 
 4159              	 
 4160              	 
 4161 0000 80B4     	 push {r7}
 4162              	.LCFI389:
 4163              	 .cfi_def_cfa_offset 4
 4164              	 .cfi_offset 7,-4
 4165 0002 83B0     	 sub sp,sp,#12
 4166              	.LCFI390:
 4167              	 .cfi_def_cfa_offset 16
 4168 0004 00AF     	 add r7,sp,#0
 4169              	.LCFI391:
 4170              	 .cfi_def_cfa_register 7
 4171 0006 0346     	 mov r3,r0
 4172 0008 FB71     	 strb r3,[r7,#7]
1084:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKCLR = ((uint32_t)clock);
 4173              	 .loc 3 1084 0
 4174 000a 044A     	 ldr r2,.L284
 4175 000c FB79     	 ldrb r3,[r7,#7]
 4176 000e 9360     	 str r3,[r2,#8]
1085:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4177              	 .loc 3 1085 0
 4178 0010 0C37     	 adds r7,r7,#12
 4179              	.LCFI392:
 4180              	 .cfi_def_cfa_offset 4
 4181 0012 BD46     	 mov sp,r7
 4182              	.LCFI393:
 4183              	 .cfi_def_cfa_register 13
 4184              	 
 4185 0014 5DF8047B 	 ldr r7,[sp],#4
 4186              	.LCFI394:
 4187              	 .cfi_restore 7
 4188              	 .cfi_def_cfa_offset 0
 4189 0018 7047     	 bx lr
 4190              	.L285:
 4191 001a 00BF     	 .align 2
 4192              	.L284:
 4193 001c 00460050 	 .word 1342195200
 4194              	 .cfi_endproc
 4195              	.LFE240:
 4197              	 .section .text.XMC_SCU_CLOCK_IsClockEnabled,"ax",%progbits
 4198              	 .align 2
 4199              	 .global XMC_SCU_CLOCK_IsClockEnabled
 4200              	 .thumb
 4201              	 .thumb_func
 4203              	XMC_SCU_CLOCK_IsClockEnabled:
 4204              	.LFB241:
1086:../Libraries/XMCLib/src/xmc4_scu.c **** 
1087:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if module clock of the given peripheral is enabled */
1088:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock)
1089:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4205              	 .loc 3 1089 0
 4206              	 .cfi_startproc
 4207              	 
 4208              	 
 4209              	 
 4210 0000 80B4     	 push {r7}
 4211              	.LCFI395:
 4212              	 .cfi_def_cfa_offset 4
 4213              	 .cfi_offset 7,-4
 4214 0002 83B0     	 sub sp,sp,#12
 4215              	.LCFI396:
 4216              	 .cfi_def_cfa_offset 16
 4217 0004 00AF     	 add r7,sp,#0
 4218              	.LCFI397:
 4219              	 .cfi_def_cfa_register 7
 4220 0006 0346     	 mov r3,r0
 4221 0008 FB71     	 strb r3,[r7,#7]
1090:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)(SCU_CLK->CLKSTAT & ((uint32_t)clock));
 4222              	 .loc 3 1090 0
 4223 000a 074B     	 ldr r3,.L288
 4224 000c 1A68     	 ldr r2,[r3]
 4225 000e FB79     	 ldrb r3,[r7,#7]
 4226 0010 1340     	 ands r3,r3,r2
 4227 0012 002B     	 cmp r3,#0
 4228 0014 14BF     	 ite ne
 4229 0016 0123     	 movne r3,#1
 4230 0018 0023     	 moveq r3,#0
 4231 001a DBB2     	 uxtb r3,r3
1091:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4232              	 .loc 3 1091 0
 4233 001c 1846     	 mov r0,r3
 4234 001e 0C37     	 adds r7,r7,#12
 4235              	.LCFI398:
 4236              	 .cfi_def_cfa_offset 4
 4237 0020 BD46     	 mov sp,r7
 4238              	.LCFI399:
 4239              	 .cfi_def_cfa_register 13
 4240              	 
 4241 0022 5DF8047B 	 ldr r7,[sp],#4
 4242              	.LCFI400:
 4243              	 .cfi_restore 7
 4244              	 .cfi_def_cfa_offset 0
 4245 0026 7047     	 bx lr
 4246              	.L289:
 4247              	 .align 2
 4248              	.L288:
 4249 0028 00460050 	 .word 1342195200
 4250              	 .cfi_endproc
 4251              	.LFE241:
 4253              	 .section .text.XMC_SCU_CLOCK_GatePeripheralClock,"ax",%progbits
 4254              	 .align 2
 4255              	 .global XMC_SCU_CLOCK_GatePeripheralClock
 4256              	 .thumb
 4257              	 .thumb_func
 4259              	XMC_SCU_CLOCK_GatePeripheralClock:
 4260              	.LFB242:
1092:../Libraries/XMCLib/src/xmc4_scu.c **** 
1093:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(CLOCK_GATING_SUPPORTED)
1094:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to gate a given module clock */
1095:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1096:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4261              	 .loc 3 1096 0
 4262              	 .cfi_startproc
 4263              	 
 4264              	 
 4265              	 
 4266 0000 80B4     	 push {r7}
 4267              	.LCFI401:
 4268              	 .cfi_def_cfa_offset 4
 4269              	 .cfi_offset 7,-4
 4270 0002 85B0     	 sub sp,sp,#20
 4271              	.LCFI402:
 4272              	 .cfi_def_cfa_offset 24
 4273 0004 00AF     	 add r7,sp,#0
 4274              	.LCFI403:
 4275              	 .cfi_def_cfa_register 7
 4276 0006 7860     	 str r0,[r7,#4]
1097:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (peripheral & 0xf0000000UL) >> 28UL;
 4277              	 .loc 3 1097 0
 4278 0008 7B68     	 ldr r3,[r7,#4]
 4279 000a 1B0F     	 lsrs r3,r3,#28
 4280 000c FB60     	 str r3,[r7,#12]
1098:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4281              	 .loc 3 1098 0
 4282 000e 7B68     	 ldr r3,[r7,#4]
 4283 0010 23F07043 	 bic r3,r3,#-268435456
 4284 0014 BB60     	 str r3,[r7,#8]
1099:../Libraries/XMCLib/src/xmc4_scu.c **** 
1100:../Libraries/XMCLib/src/xmc4_scu.c ****   *(volatile uint32_t *)((&(SCU_CLK->CGATSET0)) + (index * 3U)) = (uint32_t)mask;
 4285              	 .loc 3 1100 0
 4286 0016 FA68     	 ldr r2,[r7,#12]
 4287 0018 1346     	 mov r3,r2
 4288 001a 5B00     	 lsls r3,r3,#1
 4289 001c 1344     	 add r3,r3,r2
 4290 001e 9B00     	 lsls r3,r3,#2
 4291 0020 1A46     	 mov r2,r3
 4292 0022 044B     	 ldr r3,.L291
 4293 0024 1344     	 add r3,r3,r2
 4294 0026 BA68     	 ldr r2,[r7,#8]
 4295 0028 1A60     	 str r2,[r3]
1101:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4296              	 .loc 3 1101 0
 4297 002a 1437     	 adds r7,r7,#20
 4298              	.LCFI404:
 4299              	 .cfi_def_cfa_offset 4
 4300 002c BD46     	 mov sp,r7
 4301              	.LCFI405:
 4302              	 .cfi_def_cfa_register 13
 4303              	 
 4304 002e 5DF8047B 	 ldr r7,[sp],#4
 4305              	.LCFI406:
 4306              	 .cfi_restore 7
 4307              	 .cfi_def_cfa_offset 0
 4308 0032 7047     	 bx lr
 4309              	.L292:
 4310              	 .align 2
 4311              	.L291:
 4312 0034 44460050 	 .word 1342195268
 4313              	 .cfi_endproc
 4314              	.LFE242:
 4316              	 .section .text.XMC_SCU_CLOCK_UngatePeripheralClock,"ax",%progbits
 4317              	 .align 2
 4318              	 .global XMC_SCU_CLOCK_UngatePeripheralClock
 4319              	 .thumb
 4320              	 .thumb_func
 4322              	XMC_SCU_CLOCK_UngatePeripheralClock:
 4323              	.LFB243:
1102:../Libraries/XMCLib/src/xmc4_scu.c **** 
1103:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1104:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1105:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4324              	 .loc 3 1105 0
 4325              	 .cfi_startproc
 4326              	 
 4327              	 
 4328              	 
 4329 0000 80B4     	 push {r7}
 4330              	.LCFI407:
 4331              	 .cfi_def_cfa_offset 4
 4332              	 .cfi_offset 7,-4
 4333 0002 85B0     	 sub sp,sp,#20
 4334              	.LCFI408:
 4335              	 .cfi_def_cfa_offset 24
 4336 0004 00AF     	 add r7,sp,#0
 4337              	.LCFI409:
 4338              	 .cfi_def_cfa_register 7
 4339 0006 7860     	 str r0,[r7,#4]
1106:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((peripheral & 0xf0000000UL) >> 28UL);
 4340              	 .loc 3 1106 0
 4341 0008 7B68     	 ldr r3,[r7,#4]
 4342 000a 1B0F     	 lsrs r3,r3,#28
 4343 000c FB60     	 str r3,[r7,#12]
1107:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4344              	 .loc 3 1107 0
 4345 000e 7B68     	 ldr r3,[r7,#4]
 4346 0010 23F07043 	 bic r3,r3,#-268435456
 4347 0014 BB60     	 str r3,[r7,#8]
1108:../Libraries/XMCLib/src/xmc4_scu.c **** 
1109:../Libraries/XMCLib/src/xmc4_scu.c ****   *(volatile uint32_t *)(&(SCU_CLK->CGATCLR0) + (index * 3U)) = (uint32_t)mask;
 4348              	 .loc 3 1109 0
 4349 0016 FA68     	 ldr r2,[r7,#12]
 4350 0018 1346     	 mov r3,r2
 4351 001a 5B00     	 lsls r3,r3,#1
 4352 001c 1344     	 add r3,r3,r2
 4353 001e 9B00     	 lsls r3,r3,#2
 4354 0020 1A46     	 mov r2,r3
 4355 0022 044B     	 ldr r3,.L294
 4356 0024 1344     	 add r3,r3,r2
 4357 0026 BA68     	 ldr r2,[r7,#8]
 4358 0028 1A60     	 str r2,[r3]
1110:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4359              	 .loc 3 1110 0
 4360 002a 1437     	 adds r7,r7,#20
 4361              	.LCFI410:
 4362              	 .cfi_def_cfa_offset 4
 4363 002c BD46     	 mov sp,r7
 4364              	.LCFI411:
 4365              	 .cfi_def_cfa_register 13
 4366              	 
 4367 002e 5DF8047B 	 ldr r7,[sp],#4
 4368              	.LCFI412:
 4369              	 .cfi_restore 7
 4370              	 .cfi_def_cfa_offset 0
 4371 0032 7047     	 bx lr
 4372              	.L295:
 4373              	 .align 2
 4374              	.L294:
 4375 0034 48460050 	 .word 1342195272
 4376              	 .cfi_endproc
 4377              	.LFE243:
 4379              	 .section .text.XMC_SCU_CLOCK_IsPeripheralClockGated,"ax",%progbits
 4380              	 .align 2
 4381              	 .global XMC_SCU_CLOCK_IsPeripheralClockGated
 4382              	 .thumb
 4383              	 .thumb_func
 4385              	XMC_SCU_CLOCK_IsPeripheralClockGated:
 4386              	.LFB244:
1111:../Libraries/XMCLib/src/xmc4_scu.c **** 
1112:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1113:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1114:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4387              	 .loc 3 1114 0
 4388              	 .cfi_startproc
 4389              	 
 4390              	 
 4391              	 
 4392 0000 80B4     	 push {r7}
 4393              	.LCFI413:
 4394              	 .cfi_def_cfa_offset 4
 4395              	 .cfi_offset 7,-4
 4396 0002 85B0     	 sub sp,sp,#20
 4397              	.LCFI414:
 4398              	 .cfi_def_cfa_offset 24
 4399 0004 00AF     	 add r7,sp,#0
 4400              	.LCFI415:
 4401              	 .cfi_def_cfa_register 7
 4402 0006 7860     	 str r0,[r7,#4]
1115:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = ((peripheral & 0xf0000000UL) >> 28UL);
 4403              	 .loc 3 1115 0
 4404 0008 7B68     	 ldr r3,[r7,#4]
 4405 000a 1B0F     	 lsrs r3,r3,#28
 4406 000c FB60     	 str r3,[r7,#12]
1116:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4407              	 .loc 3 1116 0
 4408 000e 7B68     	 ldr r3,[r7,#4]
 4409 0010 23F07043 	 bic r3,r3,#-268435456
 4410 0014 BB60     	 str r3,[r7,#8]
1117:../Libraries/XMCLib/src/xmc4_scu.c **** 
1118:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(const volatile uint32_t *)(&(SCU_CLK->CGATSTAT0) + (index * 3U)) & mask) != 0U);
 4411              	 .loc 3 1118 0
 4412 0016 FA68     	 ldr r2,[r7,#12]
 4413 0018 1346     	 mov r3,r2
 4414 001a 5B00     	 lsls r3,r3,#1
 4415 001c 1344     	 add r3,r3,r2
 4416 001e 9B00     	 lsls r3,r3,#2
 4417 0020 1A46     	 mov r2,r3
 4418 0022 084B     	 ldr r3,.L298
 4419 0024 1344     	 add r3,r3,r2
 4420 0026 1A68     	 ldr r2,[r3]
 4421 0028 BB68     	 ldr r3,[r7,#8]
 4422 002a 1340     	 ands r3,r3,r2
 4423 002c 002B     	 cmp r3,#0
 4424 002e 14BF     	 ite ne
 4425 0030 0123     	 movne r3,#1
 4426 0032 0023     	 moveq r3,#0
 4427 0034 DBB2     	 uxtb r3,r3
1119:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4428              	 .loc 3 1119 0
 4429 0036 1846     	 mov r0,r3
 4430 0038 1437     	 adds r7,r7,#20
 4431              	.LCFI416:
 4432              	 .cfi_def_cfa_offset 4
 4433 003a BD46     	 mov sp,r7
 4434              	.LCFI417:
 4435              	 .cfi_def_cfa_register 13
 4436              	 
 4437 003c 5DF8047B 	 ldr r7,[sp],#4
 4438              	.LCFI418:
 4439              	 .cfi_restore 7
 4440              	 .cfi_def_cfa_offset 0
 4441 0040 7047     	 bx lr
 4442              	.L299:
 4443 0042 00BF     	 .align 2
 4444              	.L298:
 4445 0044 40460050 	 .word 1342195264
 4446              	 .cfi_endproc
 4447              	.LFE244:
 4449              	 .section .text.XMC_SCU_POWER_GetEVR13Voltage,"ax",%progbits
 4450              	 .align 2
 4451              	 .global XMC_SCU_POWER_GetEVR13Voltage
 4452              	 .thumb
 4453              	 .thumb_func
 4455              	XMC_SCU_POWER_GetEVR13Voltage:
 4456              	.LFB245:
1120:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1121:../Libraries/XMCLib/src/xmc4_scu.c **** 
1122:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR13Voltage(void)
1123:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4457              	 .loc 3 1123 0
 4458              	 .cfi_startproc
 4459              	 
 4460              	 
 4461              	 
 4462 0000 80B4     	 push {r7}
 4463              	.LCFI419:
 4464              	 .cfi_def_cfa_offset 4
 4465              	 .cfi_offset 7,-4
 4466 0002 00AF     	 add r7,sp,#0
 4467              	.LCFI420:
 4468              	 .cfi_def_cfa_register 7
1124:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC13V_Msk) * XMC_SCU_POWER_LSB13V;
 4469              	 .loc 3 1124 0
 4470 0004 084B     	 ldr r3,.L302
 4471 0006 5B69     	 ldr r3,[r3,#20]
 4472 0008 DBB2     	 uxtb r3,r3
 4473 000a 07EE903A 	 fmsr s15,r3
 4474 000e F8EE677A 	 fuitos s15,s15
 4475 0012 9FED067A 	 flds s14,.L302+4
 4476 0016 67EE877A 	 fmuls s15,s15,s14
 4477 001a 17EE903A 	 fmrs r3,s15
1125:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4478              	 .loc 3 1125 0
 4479 001e 1846     	 mov r0,r3
 4480 0020 BD46     	 mov sp,r7
 4481              	.LCFI421:
 4482              	 .cfi_def_cfa_register 13
 4483              	 
 4484 0022 5DF8047B 	 ldr r7,[sp],#4
 4485              	.LCFI422:
 4486              	 .cfi_restore 7
 4487              	 .cfi_def_cfa_offset 0
 4488 0026 7047     	 bx lr
 4489              	.L303:
 4490              	 .align 2
 4491              	.L302:
 4492 0028 00420050 	 .word 1342194176
 4493 002c ED0DBE3B 	 .word 1002311149
 4494              	 .cfi_endproc
 4495              	.LFE245:
 4497              	 .section .text.XMC_SCU_POWER_GetEVR33Voltage,"ax",%progbits
 4498              	 .align 2
 4499              	 .global XMC_SCU_POWER_GetEVR33Voltage
 4500              	 .thumb
 4501              	 .thumb_func
 4503              	XMC_SCU_POWER_GetEVR33Voltage:
 4504              	.LFB246:
1126:../Libraries/XMCLib/src/xmc4_scu.c **** 
1127:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR33Voltage(void)
1128:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4505              	 .loc 3 1128 0
 4506              	 .cfi_startproc
 4507              	 
 4508              	 
 4509              	 
 4510 0000 80B4     	 push {r7}
 4511              	.LCFI423:
 4512              	 .cfi_def_cfa_offset 4
 4513              	 .cfi_offset 7,-4
 4514 0002 00AF     	 add r7,sp,#0
 4515              	.LCFI424:
 4516              	 .cfi_def_cfa_register 7
1129:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC33V_Msk) >> SCU_POWER_EVRVADCSTAT_VAD
 4517              	 .loc 3 1129 0
 4518 0004 094B     	 ldr r3,.L306
 4519 0006 5B69     	 ldr r3,[r3,#20]
 4520 0008 03F47F43 	 and r3,r3,#65280
 4521 000c 1B0A     	 lsrs r3,r3,#8
 4522 000e 07EE903A 	 fmsr s15,r3
 4523 0012 F8EE677A 	 fuitos s15,s15
 4524 0016 9FED067A 	 flds s14,.L306+4
 4525 001a 67EE877A 	 fmuls s15,s15,s14
 4526 001e 17EE903A 	 fmrs r3,s15
1130:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4527              	 .loc 3 1130 0
 4528 0022 1846     	 mov r0,r3
 4529 0024 BD46     	 mov sp,r7
 4530              	.LCFI425:
 4531              	 .cfi_def_cfa_register 13
 4532              	 
 4533 0026 5DF8047B 	 ldr r7,[sp],#4
 4534              	.LCFI426:
 4535              	 .cfi_restore 7
 4536              	 .cfi_def_cfa_offset 0
 4537 002a 7047     	 bx lr
 4538              	.L307:
 4539              	 .align 2
 4540              	.L306:
 4541 002c 00420050 	 .word 1342194176
 4542 0030 EC51B83C 	 .word 1018712556
 4543              	 .cfi_endproc
 4544              	.LFE246:
 4546              	 .section .text.XMC_SCU_CLOCK_EnableUsbPll,"ax",%progbits
 4547              	 .align 2
 4548              	 .global XMC_SCU_CLOCK_EnableUsbPll
 4549              	 .thumb
 4550              	 .thumb_func
 4552              	XMC_SCU_CLOCK_EnableUsbPll:
 4553              	.LFB247:
1131:../Libraries/XMCLib/src/xmc4_scu.c **** 
1132:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB PLL for USB clock */
1133:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableUsbPll(void)
1134:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4554              	 .loc 3 1134 0
 4555              	 .cfi_startproc
 4556              	 
 4557              	 
 4558              	 
 4559 0000 80B4     	 push {r7}
 4560              	.LCFI427:
 4561              	 .cfi_def_cfa_offset 4
 4562              	 .cfi_offset 7,-4
 4563 0002 00AF     	 add r7,sp,#0
 4564              	.LCFI428:
 4565              	 .cfi_def_cfa_register 7
1135:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4566              	 .loc 3 1135 0
 4567 0004 054A     	 ldr r2,.L309
 4568 0006 054B     	 ldr r3,.L309
 4569 0008 5B69     	 ldr r3,[r3,#20]
 4570 000a 23F48033 	 bic r3,r3,#65536
 4571 000e 23F00203 	 bic r3,r3,#2
 4572 0012 5361     	 str r3,[r2,#20]
1136:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4573              	 .loc 3 1136 0
 4574 0014 BD46     	 mov sp,r7
 4575              	.LCFI429:
 4576              	 .cfi_def_cfa_register 13
 4577              	 
 4578 0016 5DF8047B 	 ldr r7,[sp],#4
 4579              	.LCFI430:
 4580              	 .cfi_restore 7
 4581              	 .cfi_def_cfa_offset 0
 4582 001a 7047     	 bx lr
 4583              	.L310:
 4584              	 .align 2
 4585              	.L309:
 4586 001c 10470050 	 .word 1342195472
 4587              	 .cfi_endproc
 4588              	.LFE247:
 4590              	 .section .text.XMC_SCU_CLOCK_DisableUsbPll,"ax",%progbits
 4591              	 .align 2
 4592              	 .global XMC_SCU_CLOCK_DisableUsbPll
 4593              	 .thumb
 4594              	 .thumb_func
 4596              	XMC_SCU_CLOCK_DisableUsbPll:
 4597              	.LFB248:
1137:../Libraries/XMCLib/src/xmc4_scu.c **** 
1138:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL for USB clock */
1139:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableUsbPll(void)
1140:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4598              	 .loc 3 1140 0
 4599              	 .cfi_startproc
 4600              	 
 4601              	 
 4602              	 
 4603 0000 80B4     	 push {r7}
 4604              	.LCFI431:
 4605              	 .cfi_def_cfa_offset 4
 4606              	 .cfi_offset 7,-4
 4607 0002 00AF     	 add r7,sp,#0
 4608              	.LCFI432:
 4609              	 .cfi_def_cfa_register 7
1141:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4610              	 .loc 3 1141 0
 4611 0004 054A     	 ldr r2,.L312
 4612 0006 054B     	 ldr r3,.L312
 4613 0008 5B69     	 ldr r3,[r3,#20]
 4614 000a 43F48033 	 orr r3,r3,#65536
 4615 000e 43F00203 	 orr r3,r3,#2
 4616 0012 5361     	 str r3,[r2,#20]
1142:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4617              	 .loc 3 1142 0
 4618 0014 BD46     	 mov sp,r7
 4619              	.LCFI433:
 4620              	 .cfi_def_cfa_register 13
 4621              	 
 4622 0016 5DF8047B 	 ldr r7,[sp],#4
 4623              	.LCFI434:
 4624              	 .cfi_restore 7
 4625              	 .cfi_def_cfa_offset 0
 4626 001a 7047     	 bx lr
 4627              	.L313:
 4628              	 .align 2
 4629              	.L312:
 4630 001c 10470050 	 .word 1342195472
 4631              	 .cfi_endproc
 4632              	.LFE248:
 4634              	 .section .text.XMC_SCU_CLOCK_StartUsbPll,"ax",%progbits
 4635              	 .align 2
 4636              	 .global XMC_SCU_CLOCK_StartUsbPll
 4637              	 .thumb
 4638              	 .thumb_func
 4640              	XMC_SCU_CLOCK_StartUsbPll:
 4641              	.LFB249:
1143:../Libraries/XMCLib/src/xmc4_scu.c **** 
1144:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure USB PLL */
1145:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartUsbPll(uint32_t pdiv, uint32_t ndiv)
1146:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4642              	 .loc 3 1146 0
 4643              	 .cfi_startproc
 4644              	 
 4645              	 
 4646              	 
 4647 0000 80B4     	 push {r7}
 4648              	.LCFI435:
 4649              	 .cfi_def_cfa_offset 4
 4650              	 .cfi_offset 7,-4
 4651 0002 83B0     	 sub sp,sp,#12
 4652              	.LCFI436:
 4653              	 .cfi_def_cfa_offset 16
 4654 0004 00AF     	 add r7,sp,#0
 4655              	.LCFI437:
 4656              	 .cfi_def_cfa_register 7
 4657 0006 7860     	 str r0,[r7,#4]
 4658 0008 3960     	 str r1,[r7]
1147:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Go to bypass the USB PLL */
1148:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_VCOBYP_Msk;
 4659              	 .loc 3 1148 0
 4660 000a 284A     	 ldr r2,.L318
 4661 000c 274B     	 ldr r3,.L318
 4662 000e 5B69     	 ldr r3,[r3,#20]
 4663 0010 43F00103 	 orr r3,r3,#1
 4664 0014 5361     	 str r3,[r2,#20]
1149:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 4665              	 .loc 3 1149 0
 4666 0016 00BF     	 nop
 4667              	.L315:
 4668              	 .loc 3 1149 0 is_stmt 0 discriminator 1
 4669 0018 244B     	 ldr r3,.L318
 4670 001a 1B69     	 ldr r3,[r3,#16]
 4671 001c 03F00103 	 and r3,r3,#1
 4672 0020 002B     	 cmp r3,#0
 4673 0022 F9D0     	 beq .L315
1150:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1151:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for prescaler mode */
1152:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1153:../Libraries/XMCLib/src/xmc4_scu.c **** 
1154:../Libraries/XMCLib/src/xmc4_scu.c ****   /* disconnect Oscillator from USB PLL */
1155:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_FINDIS_Msk;
 4674              	 .loc 3 1155 0 is_stmt 1
 4675 0024 214A     	 ldr r2,.L318
 4676 0026 214B     	 ldr r3,.L318
 4677 0028 5B69     	 ldr r3,[r3,#20]
 4678 002a 43F01003 	 orr r3,r3,#16
 4679 002e 5361     	 str r3,[r2,#20]
1156:../Libraries/XMCLib/src/xmc4_scu.c **** 
1157:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Setup Divider settings for USB PLL */
1158:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)((uint32_t)((ndiv - 1U) << SCU_PLL_USBPLLCON_NDIV_Pos) |
 4680              	 .loc 3 1158 0
 4681 0030 1E49     	 ldr r1,.L318
 4682 0032 3B68     	 ldr r3,[r7]
 4683 0034 013B     	 subs r3,r3,#1
 4684 0036 1A02     	 lsls r2,r3,#8
1159:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4685              	 .loc 3 1159 0
 4686 0038 7B68     	 ldr r3,[r7,#4]
 4687 003a 013B     	 subs r3,r3,#1
 4688 003c 1B06     	 lsls r3,r3,#24
1158:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4689              	 .loc 3 1158 0
 4690 003e 1343     	 orrs r3,r3,r2
 4691 0040 4B61     	 str r3,[r1,#20]
1160:../Libraries/XMCLib/src/xmc4_scu.c **** 
1161:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Set OSCDISCDIS */
1162:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 4692              	 .loc 3 1162 0
 4693 0042 1A4A     	 ldr r2,.L318
 4694 0044 194B     	 ldr r3,.L318
 4695 0046 5B69     	 ldr r3,[r3,#20]
 4696 0048 43F04003 	 orr r3,r3,#64
 4697 004c 5361     	 str r3,[r2,#20]
1163:../Libraries/XMCLib/src/xmc4_scu.c **** 
1164:../Libraries/XMCLib/src/xmc4_scu.c ****   /* connect Oscillator to USB PLL */
1165:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~SCU_PLL_USBPLLCON_FINDIS_Msk;
 4698              	 .loc 3 1165 0
 4699 004e 174A     	 ldr r2,.L318
 4700 0050 164B     	 ldr r3,.L318
 4701 0052 5B69     	 ldr r3,[r3,#20]
 4702 0054 23F01003 	 bic r3,r3,#16
 4703 0058 5361     	 str r3,[r2,#20]
1166:../Libraries/XMCLib/src/xmc4_scu.c **** 
1167:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart PLL Lock detection */
1168:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_RESLD_Msk;
 4704              	 .loc 3 1168 0
 4705 005a 144A     	 ldr r2,.L318
 4706 005c 134B     	 ldr r3,.L318
 4707 005e 5B69     	 ldr r3,[r3,#20]
 4708 0060 43F48023 	 orr r3,r3,#262144
 4709 0064 5361     	 str r3,[r2,#20]
1169:../Libraries/XMCLib/src/xmc4_scu.c **** 
1170:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 4710              	 .loc 3 1170 0
 4711 0066 00BF     	 nop
 4712              	.L316:
 4713              	 .loc 3 1170 0 is_stmt 0 discriminator 1
 4714 0068 104B     	 ldr r3,.L318
 4715 006a 1B69     	 ldr r3,[r3,#16]
 4716 006c 03F00403 	 and r3,r3,#4
 4717 0070 002B     	 cmp r3,#0
 4718 0072 F9D0     	 beq .L316
1171:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1172:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for PLL Lock */
1173:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1174:../Libraries/XMCLib/src/xmc4_scu.c **** 
1175:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Disable bypass- put PLL clock back */
1176:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_VCOBYP_Msk;
 4719              	 .loc 3 1176 0 is_stmt 1
 4720 0074 0D4A     	 ldr r2,.L318
 4721 0076 0D4B     	 ldr r3,.L318
 4722 0078 5B69     	 ldr r3,[r3,#20]
 4723 007a 23F00103 	 bic r3,r3,#1
 4724 007e 5361     	 str r3,[r2,#20]
1177:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) != 0U)
 4725              	 .loc 3 1177 0
 4726 0080 00BF     	 nop
 4727              	.L317:
 4728              	 .loc 3 1177 0 is_stmt 0 discriminator 1
 4729 0082 0A4B     	 ldr r3,.L318
 4730 0084 1B69     	 ldr r3,[r3,#16]
 4731 0086 03F00103 	 and r3,r3,#1
 4732 008a 002B     	 cmp r3,#0
 4733 008c F9D1     	 bne .L317
1178:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1179:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for normal mode */
1180:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1181:../Libraries/XMCLib/src/xmc4_scu.c **** 
1182:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Reset OSCDISCDIS */
1183:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 4734              	 .loc 3 1183 0 is_stmt 1
 4735 008e 074A     	 ldr r2,.L318
 4736 0090 064B     	 ldr r3,.L318
 4737 0092 5B69     	 ldr r3,[r3,#20]
 4738 0094 23F04003 	 bic r3,r3,#64
 4739 0098 5361     	 str r3,[r2,#20]
1184:../Libraries/XMCLib/src/xmc4_scu.c **** 
1185:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_UVCOLCKT_Msk;
 4740              	 .loc 3 1185 0
 4741 009a 054B     	 ldr r3,.L318+4
 4742 009c 0822     	 movs r2,#8
 4743 009e DA60     	 str r2,[r3,#12]
1186:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4744              	 .loc 3 1186 0
 4745 00a0 0C37     	 adds r7,r7,#12
 4746              	.LCFI438:
 4747              	 .cfi_def_cfa_offset 4
 4748 00a2 BD46     	 mov sp,r7
 4749              	.LCFI439:
 4750              	 .cfi_def_cfa_register 13
 4751              	 
 4752 00a4 5DF8047B 	 ldr r7,[sp],#4
 4753              	.LCFI440:
 4754              	 .cfi_restore 7
 4755              	 .cfi_def_cfa_offset 0
 4756 00a8 7047     	 bx lr
 4757              	.L319:
 4758 00aa 00BF     	 .align 2
 4759              	.L318:
 4760 00ac 10470050 	 .word 1342195472
 4761 00b0 60410050 	 .word 1342194016
 4762              	 .cfi_endproc
 4763              	.LFE249:
 4765              	 .section .text.XMC_SCU_CLOCK_StopUsbPll,"ax",%progbits
 4766              	 .align 2
 4767              	 .global XMC_SCU_CLOCK_StopUsbPll
 4768              	 .thumb
 4769              	 .thumb_func
 4771              	XMC_SCU_CLOCK_StopUsbPll:
 4772              	.LFB250:
1187:../Libraries/XMCLib/src/xmc4_scu.c **** 
1188:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL operation */
1189:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopUsbPll(void)
1190:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4773              	 .loc 3 1190 0
 4774              	 .cfi_startproc
 4775              	 
 4776              	 
 4777              	 
 4778 0000 80B4     	 push {r7}
 4779              	.LCFI441:
 4780              	 .cfi_def_cfa_offset 4
 4781              	 .cfi_offset 7,-4
 4782 0002 00AF     	 add r7,sp,#0
 4783              	.LCFI442:
 4784              	 .cfi_def_cfa_register 7
1191:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk |
 4785              	 .loc 3 1191 0
 4786 0004 034B     	 ldr r3,.L321
 4787 0006 044A     	 ldr r2,.L321+4
 4788 0008 5A61     	 str r2,[r3,#20]
1192:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_PLL_USBPLLCON_VCOBYP_Msk);
1193:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4789              	 .loc 3 1193 0
 4790 000a BD46     	 mov sp,r7
 4791              	.LCFI443:
 4792              	 .cfi_def_cfa_register 13
 4793              	 
 4794 000c 5DF8047B 	 ldr r7,[sp],#4
 4795              	.LCFI444:
 4796              	 .cfi_restore 7
 4797              	 .cfi_def_cfa_offset 0
 4798 0010 7047     	 bx lr
 4799              	.L322:
 4800 0012 00BF     	 .align 2
 4801              	.L321:
 4802 0014 10470050 	 .word 1342195472
 4803 0018 03000100 	 .word 65539
 4804              	 .cfi_endproc
 4805              	.LFE250:
 4807              	 .section .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode,"ax",%progbits
 4808              	 .align 2
 4809              	 .global XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 4810              	 .thumb
 4811              	 .thumb_func
 4813              	XMC_SCU_CLOCK_SetBackupClockCalibrationMode:
 4814              	.LFB251:
1194:../Libraries/XMCLib/src/xmc4_scu.c **** 
1195:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to onfigure the calibration mode for internal oscillator */
1196:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetBackupClockCalibrationMode(XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t mode)
1197:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4815              	 .loc 3 1197 0
 4816              	 .cfi_startproc
 4817              	 
 4818              	 
 4819 0000 80B5     	 push {r7,lr}
 4820              	.LCFI445:
 4821              	 .cfi_def_cfa_offset 8
 4822              	 .cfi_offset 7,-8
 4823              	 .cfi_offset 14,-4
 4824 0002 82B0     	 sub sp,sp,#8
 4825              	.LCFI446:
 4826              	 .cfi_def_cfa_offset 16
 4827 0004 00AF     	 add r7,sp,#0
 4828              	.LCFI447:
 4829              	 .cfi_def_cfa_register 7
 4830 0006 0346     	 mov r3,r0
 4831 0008 FB71     	 strb r3,[r7,#7]
1198:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable factory calibration based trimming */
1199:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FOTR_Msk;
 4832              	 .loc 3 1199 0
 4833 000a 0F4A     	 ldr r2,.L325
 4834 000c 0E4B     	 ldr r3,.L325
 4835 000e 5B68     	 ldr r3,[r3,#4]
 4836 0010 43F48013 	 orr r3,r3,#1048576
 4837 0014 5360     	 str r3,[r2,#4]
1200:../Libraries/XMCLib/src/xmc4_scu.c **** 
1201:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC)
 4838              	 .loc 3 1201 0
 4839 0016 FB79     	 ldrb r3,[r7,#7]
 4840 0018 012B     	 cmp r3,#1
 4841 001a 0ED1     	 bne .L324
1202:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1203:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Disable factory calibration based trimming */
1204:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FOTR_Msk;
 4842              	 .loc 3 1204 0
 4843 001c 0A4A     	 ldr r2,.L325
 4844 001e 0A4B     	 ldr r3,.L325
 4845 0020 5B68     	 ldr r3,[r3,#4]
 4846 0022 23F48013 	 bic r3,r3,#1048576
 4847 0026 5360     	 str r3,[r2,#4]
1205:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_lDelay(100UL);
 4848              	 .loc 3 1205 0
 4849 0028 6420     	 movs r0,#100
 4850 002a FFF7FEFF 	 bl XMC_SCU_lDelay
1206:../Libraries/XMCLib/src/xmc4_scu.c **** 
1207:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Enable automatic calibration */
1208:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_AOTREN_Msk;
 4851              	 .loc 3 1208 0
 4852 002e 064A     	 ldr r2,.L325
 4853 0030 054B     	 ldr r3,.L325
 4854 0032 5B68     	 ldr r3,[r3,#4]
 4855 0034 43F40023 	 orr r3,r3,#524288
 4856 0038 5360     	 str r3,[r2,#4]
 4857              	.L324:
1209:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1210:../Libraries/XMCLib/src/xmc4_scu.c **** 
1211:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(100UL);
 4858              	 .loc 3 1211 0
 4859 003a 6420     	 movs r0,#100
 4860 003c FFF7FEFF 	 bl XMC_SCU_lDelay
1212:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4861              	 .loc 3 1212 0
 4862 0040 0837     	 adds r7,r7,#8
 4863              	.LCFI448:
 4864              	 .cfi_def_cfa_offset 8
 4865 0042 BD46     	 mov sp,r7
 4866              	.LCFI449:
 4867              	 .cfi_def_cfa_register 13
 4868              	 
 4869 0044 80BD     	 pop {r7,pc}
 4870              	.L326:
 4871 0046 00BF     	 .align 2
 4872              	.L325:
 4873 0048 10470050 	 .word 1342195472
 4874              	 .cfi_endproc
 4875              	.LFE251:
 4877              	 .section .text.XMC_SCU_POWER_EnableUsb,"ax",%progbits
 4878              	 .align 2
 4879              	 .global XMC_SCU_POWER_EnableUsb
 4880              	 .thumb
 4881              	 .thumb_func
 4883              	XMC_SCU_POWER_EnableUsb:
 4884              	.LFB252:
1213:../Libraries/XMCLib/src/xmc4_scu.c **** 
1214:../Libraries/XMCLib/src/xmc4_scu.c **** 
1215:../Libraries/XMCLib/src/xmc4_scu.c **** 
1216:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB Phy and comparator */
1217:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_EnableUsb(void)
1218:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4885              	 .loc 3 1218 0
 4886              	 .cfi_startproc
 4887              	 
 4888              	 
 4889              	 
 4890 0000 80B4     	 push {r7}
 4891              	.LCFI450:
 4892              	 .cfi_def_cfa_offset 4
 4893              	 .cfi_offset 7,-4
 4894 0002 00AF     	 add r7,sp,#0
 4895              	.LCFI451:
 4896              	 .cfi_def_cfa_register 7
1219:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1220:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)(SCU_POWER_PWRSET_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4897              	 .loc 3 1220 0
 4898 0004 034B     	 ldr r3,.L328
 4899 0006 4FF44032 	 mov r2,#196608
 4900 000a 5A60     	 str r2,[r3,#4]
1221:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1222:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_USBPHYPDQ_Msk;
1223:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1224:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4901              	 .loc 3 1224 0
 4902 000c BD46     	 mov sp,r7
 4903              	.LCFI452:
 4904              	 .cfi_def_cfa_register 13
 4905              	 
 4906 000e 5DF8047B 	 ldr r7,[sp],#4
 4907              	.LCFI453:
 4908              	 .cfi_restore 7
 4909              	 .cfi_def_cfa_offset 0
 4910 0012 7047     	 bx lr
 4911              	.L329:
 4912              	 .align 2
 4913              	.L328:
 4914 0014 00420050 	 .word 1342194176
 4915              	 .cfi_endproc
 4916              	.LFE252:
 4918              	 .section .text.XMC_SCU_POWER_DisableUsb,"ax",%progbits
 4919              	 .align 2
 4920              	 .global XMC_SCU_POWER_DisableUsb
 4921              	 .thumb
 4922              	 .thumb_func
 4924              	XMC_SCU_POWER_DisableUsb:
 4925              	.LFB253:
1225:../Libraries/XMCLib/src/xmc4_scu.c **** 
1226:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down USB Phy and comparator */
1227:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_DisableUsb(void)
1228:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4926              	 .loc 3 1228 0
 4927              	 .cfi_startproc
 4928              	 
 4929              	 
 4930              	 
 4931 0000 80B4     	 push {r7}
 4932              	.LCFI454:
 4933              	 .cfi_def_cfa_offset 4
 4934              	 .cfi_offset 7,-4
 4935 0002 00AF     	 add r7,sp,#0
 4936              	.LCFI455:
 4937              	 .cfi_def_cfa_register 7
1229:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1230:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)(SCU_POWER_PWRCLR_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4938              	 .loc 3 1230 0
 4939 0004 034B     	 ldr r3,.L331
 4940 0006 4FF44032 	 mov r2,#196608
 4941 000a 9A60     	 str r2,[r3,#8]
1231:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1232:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_USBPHYPDQ_Msk;
1233:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1234:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4942              	 .loc 3 1234 0
 4943 000c BD46     	 mov sp,r7
 4944              	.LCFI456:
 4945              	 .cfi_def_cfa_register 13
 4946              	 
 4947 000e 5DF8047B 	 ldr r7,[sp],#4
 4948              	.LCFI457:
 4949              	 .cfi_restore 7
 4950              	 .cfi_def_cfa_offset 0
 4951 0012 7047     	 bx lr
 4952              	.L332:
 4953              	 .align 2
 4954              	.L331:
 4955 0014 00420050 	 .word 1342194176
 4956              	 .cfi_endproc
 4957              	.LFE253:
 4959              	 .section .text.XMC_SCU_CLOCK_IsUsbPllLocked,"ax",%progbits
 4960              	 .align 2
 4961              	 .global XMC_SCU_CLOCK_IsUsbPllLocked
 4962              	 .thumb
 4963              	 .thumb_func
 4965              	XMC_SCU_CLOCK_IsUsbPllLocked:
 4966              	.LFB254:
1235:../Libraries/XMCLib/src/xmc4_scu.c **** 
1236:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check USB PLL is locked or not */
1237:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsUsbPllLocked(void)
1238:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4967              	 .loc 3 1238 0
 4968              	 .cfi_startproc
 4969              	 
 4970              	 
 4971              	 
 4972 0000 80B4     	 push {r7}
 4973              	.LCFI458:
 4974              	 .cfi_def_cfa_offset 4
 4975              	 .cfi_offset 7,-4
 4976 0002 00AF     	 add r7,sp,#0
 4977              	.LCFI459:
 4978              	 .cfi_def_cfa_register 7
1239:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) != 0UL);
 4979              	 .loc 3 1239 0
 4980 0004 064B     	 ldr r3,.L335
 4981 0006 1B69     	 ldr r3,[r3,#16]
 4982 0008 03F00403 	 and r3,r3,#4
 4983 000c 002B     	 cmp r3,#0
 4984 000e 14BF     	 ite ne
 4985 0010 0123     	 movne r3,#1
 4986 0012 0023     	 moveq r3,#0
 4987 0014 DBB2     	 uxtb r3,r3
1240:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4988              	 .loc 3 1240 0
 4989 0016 1846     	 mov r0,r3
 4990 0018 BD46     	 mov sp,r7
 4991              	.LCFI460:
 4992              	 .cfi_def_cfa_register 13
 4993              	 
 4994 001a 5DF8047B 	 ldr r7,[sp],#4
 4995              	.LCFI461:
 4996              	 .cfi_restore 7
 4997              	 .cfi_def_cfa_offset 0
 4998 001e 7047     	 bx lr
 4999              	.L336:
 5000              	 .align 2
 5001              	.L335:
 5002 0020 10470050 	 .word 1342195472
 5003              	 .cfi_endproc
 5004              	.LFE254:
 5006              	 .section .text.XMC_SCU_HIB_EnableHibernateDomain,"ax",%progbits
 5007              	 .align 2
 5008              	 .global XMC_SCU_HIB_EnableHibernateDomain
 5009              	 .thumb
 5010              	 .thumb_func
 5012              	XMC_SCU_HIB_EnableHibernateDomain:
 5013              	.LFB255:
1241:../Libraries/XMCLib/src/xmc4_scu.c **** 
1242:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power up the hibernation domain */
1243:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableHibernateDomain(void)
1244:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5014              	 .loc 3 1244 0
 5015              	 .cfi_startproc
 5016              	 
 5017              	 
 5018              	 
 5019 0000 80B4     	 push {r7}
 5020              	.LCFI462:
 5021              	 .cfi_def_cfa_offset 4
 5022              	 .cfi_offset 7,-4
 5023 0002 00AF     	 add r7,sp,#0
 5024              	.LCFI463:
 5025              	 .cfi_def_cfa_register 7
1245:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up HIB domain if and only if it is currently powered down */
1246:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 5026              	 .loc 3 1246 0
 5027 0004 124B     	 ldr r3,.L342
 5028 0006 1B68     	 ldr r3,[r3]
 5029 0008 03F00103 	 and r3,r3,#1
 5030 000c 002B     	 cmp r3,#0
 5031 000e 09D1     	 bne .L338
1247:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1248:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_HIB_Msk;
 5032              	 .loc 3 1248 0
 5033 0010 0F4B     	 ldr r3,.L342
 5034 0012 0122     	 movs r2,#1
 5035 0014 5A60     	 str r2,[r3,#4]
1249:../Libraries/XMCLib/src/xmc4_scu.c **** 
1250:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 5036              	 .loc 3 1250 0
 5037 0016 00BF     	 nop
 5038              	.L339:
 5039              	 .loc 3 1250 0 is_stmt 0 discriminator 1
 5040 0018 0D4B     	 ldr r3,.L342
 5041 001a 1B68     	 ldr r3,[r3]
 5042 001c 03F00103 	 and r3,r3,#1
 5043 0020 002B     	 cmp r3,#0
 5044 0022 F9D0     	 beq .L339
 5045              	.L338:
1251:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1252:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1253:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1254:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1255:../Libraries/XMCLib/src/xmc4_scu.c **** 
1256:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Remove the reset only if HIB domain were in a state of reset */
1257:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 5046              	 .loc 3 1257 0 is_stmt 1
 5047 0024 0B4B     	 ldr r3,.L342+4
 5048 0026 1B68     	 ldr r3,[r3]
 5049 0028 03F40073 	 and r3,r3,#512
 5050 002c 002B     	 cmp r3,#0
 5051 002e 0AD0     	 beq .L337
1258:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1259:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_HIBRS_Msk;
 5052              	 .loc 3 1259 0
 5053 0030 084B     	 ldr r3,.L342+4
 5054 0032 4FF40072 	 mov r2,#512
 5055 0036 9A60     	 str r2,[r3,#8]
1260:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk) != 0UL)
 5056              	 .loc 3 1260 0
 5057 0038 00BF     	 nop
 5058              	.L341:
 5059              	 .loc 3 1260 0 is_stmt 0 discriminator 1
 5060 003a 064B     	 ldr r3,.L342+4
 5061 003c 1B68     	 ldr r3,[r3]
 5062 003e 03F40073 	 and r3,r3,#512
 5063 0042 002B     	 cmp r3,#0
 5064 0044 F9D1     	 bne .L341
 5065              	.L337:
1261:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1262:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1263:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1264:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1265:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5066              	 .loc 3 1265 0 is_stmt 1
 5067 0046 BD46     	 mov sp,r7
 5068              	.LCFI464:
 5069              	 .cfi_def_cfa_register 13
 5070              	 
 5071 0048 5DF8047B 	 ldr r7,[sp],#4
 5072              	.LCFI465:
 5073              	 .cfi_restore 7
 5074              	 .cfi_def_cfa_offset 0
 5075 004c 7047     	 bx lr
 5076              	.L343:
 5077 004e 00BF     	 .align 2
 5078              	.L342:
 5079 0050 00420050 	 .word 1342194176
 5080 0054 00440050 	 .word 1342194688
 5081              	 .cfi_endproc
 5082              	.LFE255:
 5084              	 .section .text.XMC_SCU_HIB_DisableHibernateDomain,"ax",%progbits
 5085              	 .align 2
 5086              	 .global XMC_SCU_HIB_DisableHibernateDomain
 5087              	 .thumb
 5088              	 .thumb_func
 5090              	XMC_SCU_HIB_DisableHibernateDomain:
 5091              	.LFB256:
1266:../Libraries/XMCLib/src/xmc4_scu.c **** 
1267:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down the hibernation domain */
1268:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableHibernateDomain(void)
1269:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5092              	 .loc 3 1269 0
 5093              	 .cfi_startproc
 5094              	 
 5095              	 
 5096              	 
 5097 0000 80B4     	 push {r7}
 5098              	.LCFI466:
 5099              	 .cfi_def_cfa_offset 4
 5100              	 .cfi_offset 7,-4
 5101 0002 00AF     	 add r7,sp,#0
 5102              	.LCFI467:
 5103              	 .cfi_def_cfa_register 7
1270:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Disable hibernate domain */
1271:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_HIB_Msk;
 5104              	 .loc 3 1271 0
 5105 0004 054B     	 ldr r3,.L345
 5106 0006 0122     	 movs r2,#1
 5107 0008 9A60     	 str r2,[r3,#8]
1272:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Reset of hibernate domain reset */
1273:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_RESET->RSTSET = (uint32_t)SCU_RESET_RSTSET_HIBRS_Msk;
 5108              	 .loc 3 1273 0
 5109 000a 054B     	 ldr r3,.L345+4
 5110 000c 4FF40072 	 mov r2,#512
 5111 0010 5A60     	 str r2,[r3,#4]
1274:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5112              	 .loc 3 1274 0
 5113 0012 BD46     	 mov sp,r7
 5114              	.LCFI468:
 5115              	 .cfi_def_cfa_register 13
 5116              	 
 5117 0014 5DF8047B 	 ldr r7,[sp],#4
 5118              	.LCFI469:
 5119              	 .cfi_restore 7
 5120              	 .cfi_def_cfa_offset 0
 5121 0018 7047     	 bx lr
 5122              	.L346:
 5123 001a 00BF     	 .align 2
 5124              	.L345:
 5125 001c 00420050 	 .word 1342194176
 5126 0020 00440050 	 .word 1342194688
 5127              	 .cfi_endproc
 5128              	.LFE256:
 5130              	 .section .text.XMC_SCU_HIB_IsHibernateDomainEnabled,"ax",%progbits
 5131              	 .align 2
 5132              	 .global XMC_SCU_HIB_IsHibernateDomainEnabled
 5133              	 .thumb
 5134              	 .thumb_func
 5136              	XMC_SCU_HIB_IsHibernateDomainEnabled:
 5137              	.LFB257:
1275:../Libraries/XMCLib/src/xmc4_scu.c **** 
1276:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check the hibernation domain is enabled or not */
1277:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HIB_IsHibernateDomainEnabled(void)
1278:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5138              	 .loc 3 1278 0
 5139              	 .cfi_startproc
 5140              	 
 5141              	 
 5142              	 
 5143 0000 80B4     	 push {r7}
 5144              	.LCFI470:
 5145              	 .cfi_def_cfa_offset 4
 5146              	 .cfi_offset 7,-4
 5147 0002 00AF     	 add r7,sp,#0
 5148              	.LCFI471:
 5149              	 .cfi_def_cfa_register 7
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5150              	 .loc 3 1279 0
 5151 0004 0B4B     	 ldr r3,.L351
 5152 0006 1B68     	 ldr r3,[r3]
 5153 0008 03F00103 	 and r3,r3,#1
 5154 000c 002B     	 cmp r3,#0
 5155 000e 07D0     	 beq .L348
1280:../Libraries/XMCLib/src/xmc4_scu.c ****           !(bool)(SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk));
 5156              	 .loc 3 1280 0 discriminator 1
 5157 0010 094B     	 ldr r3,.L351+4
 5158 0012 1B68     	 ldr r3,[r3]
 5159 0014 03F40073 	 and r3,r3,#512
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5160              	 .loc 3 1279 0 discriminator 1
 5161 0018 002B     	 cmp r3,#0
 5162 001a 01D1     	 bne .L348
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5163              	 .loc 3 1279 0 is_stmt 0 discriminator 3
 5164 001c 0123     	 movs r3,#1
 5165 001e 00E0     	 b .L349
 5166              	.L348:
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5167              	 .loc 3 1279 0 discriminator 4
 5168 0020 0023     	 movs r3,#0
 5169              	.L349:
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5170              	 .loc 3 1279 0 discriminator 6
 5171 0022 03F00103 	 and r3,r3,#1
 5172 0026 DBB2     	 uxtb r3,r3
1281:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5173              	 .loc 3 1281 0 is_stmt 1 discriminator 6
 5174 0028 1846     	 mov r0,r3
 5175 002a BD46     	 mov sp,r7
 5176              	.LCFI472:
 5177              	 .cfi_def_cfa_register 13
 5178              	 
 5179 002c 5DF8047B 	 ldr r7,[sp],#4
 5180              	.LCFI473:
 5181              	 .cfi_restore 7
 5182              	 .cfi_def_cfa_offset 0
 5183 0030 7047     	 bx lr
 5184              	.L352:
 5185 0032 00BF     	 .align 2
 5186              	.L351:
 5187 0034 00420050 	 .word 1342194176
 5188 0038 00440050 	 .word 1342194688
 5189              	 .cfi_endproc
 5190              	.LFE257:
 5192              	 .section .text.XMC_SCU_HIB_EnableInternalSlowClock,"ax",%progbits
 5193              	 .align 2
 5194              	 .global XMC_SCU_HIB_EnableInternalSlowClock
 5195              	 .thumb
 5196              	 .thumb_func
 5198              	XMC_SCU_HIB_EnableInternalSlowClock:
 5199              	.LFB258:
1282:../Libraries/XMCLib/src/xmc4_scu.c **** 
1283:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1284:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableInternalSlowClock(void)
1285:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5200              	 .loc 3 1285 0
 5201              	 .cfi_startproc
 5202              	 
 5203              	 
 5204              	 
 5205 0000 80B4     	 push {r7}
 5206              	.LCFI474:
 5207              	 .cfi_def_cfa_offset 4
 5208              	 .cfi_offset 7,-4
 5209 0002 00AF     	 add r7,sp,#0
 5210              	.LCFI475:
 5211              	 .cfi_def_cfa_register 7
1286:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5212              	 .loc 3 1286 0
 5213 0004 00BF     	 nop
 5214              	.L354:
 5215              	 .loc 3 1286 0 is_stmt 0 discriminator 1
 5216 0006 084B     	 ldr r3,.L355
 5217 0008 D3F8C430 	 ldr r3,[r3,#196]
 5218 000c 03F02003 	 and r3,r3,#32
 5219 0010 002B     	 cmp r3,#0
 5220 0012 F8D1     	 bne .L354
1287:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1288:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */
1289:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1290:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL &= (uint32_t)~(SCU_HIBERNATE_OSCSICTRL_PWD_Msk);
 5221              	 .loc 3 1290 0 is_stmt 1
 5222 0014 054A     	 ldr r2,.L355+4
 5223 0016 054B     	 ldr r3,.L355+4
 5224 0018 5B69     	 ldr r3,[r3,#20]
 5225 001a 23F00103 	 bic r3,r3,#1
 5226 001e 5361     	 str r3,[r2,#20]
1291:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5227              	 .loc 3 1291 0
 5228 0020 BD46     	 mov sp,r7
 5229              	.LCFI476:
 5230              	 .cfi_def_cfa_register 13
 5231              	 
 5232 0022 5DF8047B 	 ldr r7,[sp],#4
 5233              	.LCFI477:
 5234              	 .cfi_restore 7
 5235              	 .cfi_def_cfa_offset 0
 5236 0026 7047     	 bx lr
 5237              	.L356:
 5238              	 .align 2
 5239              	.L355:
 5240 0028 00400050 	 .word 1342193664
 5241 002c 00430050 	 .word 1342194432
 5242              	 .cfi_endproc
 5243              	.LFE258:
 5245              	 .section .text.XMC_SCU_HIB_DisableInternalSlowClock,"ax",%progbits
 5246              	 .align 2
 5247              	 .global XMC_SCU_HIB_DisableInternalSlowClock
 5248              	 .thumb
 5249              	 .thumb_func
 5251              	XMC_SCU_HIB_DisableInternalSlowClock:
 5252              	.LFB259:
1292:../Libraries/XMCLib/src/xmc4_scu.c **** 
1293:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1294:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableInternalSlowClock(void)
1295:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5253              	 .loc 3 1295 0
 5254              	 .cfi_startproc
 5255              	 
 5256              	 
 5257              	 
 5258 0000 80B4     	 push {r7}
 5259              	.LCFI478:
 5260              	 .cfi_def_cfa_offset 4
 5261              	 .cfi_offset 7,-4
 5262 0002 00AF     	 add r7,sp,#0
 5263              	.LCFI479:
 5264              	 .cfi_def_cfa_register 7
1296:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5265              	 .loc 3 1296 0
 5266 0004 00BF     	 nop
 5267              	.L358:
 5268              	 .loc 3 1296 0 is_stmt 0 discriminator 1
 5269 0006 084B     	 ldr r3,.L359
 5270 0008 D3F8C430 	 ldr r3,[r3,#196]
 5271 000c 03F02003 	 and r3,r3,#32
 5272 0010 002B     	 cmp r3,#0
 5273 0012 F8D1     	 bne .L358
1297:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1298:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */
1299:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1300:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL |= (uint32_t)SCU_HIBERNATE_OSCSICTRL_PWD_Msk;
 5274              	 .loc 3 1300 0 is_stmt 1
 5275 0014 054A     	 ldr r2,.L359+4
 5276 0016 054B     	 ldr r3,.L359+4
 5277 0018 5B69     	 ldr r3,[r3,#20]
 5278 001a 43F00103 	 orr r3,r3,#1
 5279 001e 5361     	 str r3,[r2,#20]
1301:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5280              	 .loc 3 1301 0
 5281 0020 BD46     	 mov sp,r7
 5282              	.LCFI480:
 5283              	 .cfi_def_cfa_register 13
 5284              	 
 5285 0022 5DF8047B 	 ldr r7,[sp],#4
 5286              	.LCFI481:
 5287              	 .cfi_restore 7
 5288              	 .cfi_def_cfa_offset 0
 5289 0026 7047     	 bx lr
 5290              	.L360:
 5291              	 .align 2
 5292              	.L359:
 5293 0028 00400050 	 .word 1342193664
 5294 002c 00430050 	 .word 1342194432
 5295              	 .cfi_endproc
 5296              	.LFE259:
 5298              	 .section .text.XMC_SCU_HIB_ClearEventStatus,"ax",%progbits
 5299              	 .align 2
 5300              	 .global XMC_SCU_HIB_ClearEventStatus
 5301              	 .thumb
 5302              	 .thumb_func
 5304              	XMC_SCU_HIB_ClearEventStatus:
 5305              	.LFB260:
1302:../Libraries/XMCLib/src/xmc4_scu.c **** 
1303:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_ClearEventStatus(int32_t event)
1304:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5306              	 .loc 3 1304 0
 5307              	 .cfi_startproc
 5308              	 
 5309              	 
 5310              	 
 5311 0000 80B4     	 push {r7}
 5312              	.LCFI482:
 5313              	 .cfi_def_cfa_offset 4
 5314              	 .cfi_offset 7,-4
 5315 0002 83B0     	 sub sp,sp,#12
 5316              	.LCFI483:
 5317              	 .cfi_def_cfa_offset 16
 5318 0004 00AF     	 add r7,sp,#0
 5319              	.LCFI484:
 5320              	 .cfi_def_cfa_register 7
 5321 0006 7860     	 str r0,[r7,#4]
1305:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 5322              	 .loc 3 1305 0
 5323 0008 00BF     	 nop
 5324              	.L362:
 5325              	 .loc 3 1305 0 is_stmt 0 discriminator 1
 5326 000a 074B     	 ldr r3,.L363
 5327 000c D3F8C430 	 ldr r3,[r3,#196]
 5328 0010 03F00203 	 and r3,r3,#2
 5329 0014 002B     	 cmp r3,#0
 5330 0016 F8D1     	 bne .L362
1306:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1307:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCLR register in hibernate domain is ready to accept a write */
1308:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1309:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = (uint32_t)event;
 5331              	 .loc 3 1309 0 is_stmt 1
 5332 0018 044A     	 ldr r2,.L363+4
 5333 001a 7B68     	 ldr r3,[r7,#4]
 5334 001c 5360     	 str r3,[r2,#4]
1310:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5335              	 .loc 3 1310 0
 5336 001e 0C37     	 adds r7,r7,#12
 5337              	.LCFI485:
 5338              	 .cfi_def_cfa_offset 4
 5339 0020 BD46     	 mov sp,r7
 5340              	.LCFI486:
 5341              	 .cfi_def_cfa_register 13
 5342              	 
 5343 0022 5DF8047B 	 ldr r7,[sp],#4
 5344              	.LCFI487:
 5345              	 .cfi_restore 7
 5346              	 .cfi_def_cfa_offset 0
 5347 0026 7047     	 bx lr
 5348              	.L364:
 5349              	 .align 2
 5350              	.L363:
 5351 0028 00400050 	 .word 1342193664
 5352 002c 00430050 	 .word 1342194432
 5353              	 .cfi_endproc
 5354              	.LFE260:
 5356              	 .section .text.XMC_SCU_HIB_TriggerEvent,"ax",%progbits
 5357              	 .align 2
 5358              	 .global XMC_SCU_HIB_TriggerEvent
 5359              	 .thumb
 5360              	 .thumb_func
 5362              	XMC_SCU_HIB_TriggerEvent:
 5363              	.LFB261:
1311:../Libraries/XMCLib/src/xmc4_scu.c **** 
1312:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_TriggerEvent(int32_t event)
1313:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5364              	 .loc 3 1313 0
 5365              	 .cfi_startproc
 5366              	 
 5367              	 
 5368              	 
 5369 0000 80B4     	 push {r7}
 5370              	.LCFI488:
 5371              	 .cfi_def_cfa_offset 4
 5372              	 .cfi_offset 7,-4
 5373 0002 83B0     	 sub sp,sp,#12
 5374              	.LCFI489:
 5375              	 .cfi_def_cfa_offset 16
 5376 0004 00AF     	 add r7,sp,#0
 5377              	.LCFI490:
 5378              	 .cfi_def_cfa_register 7
 5379 0006 7860     	 str r0,[r7,#4]
1314:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 5380              	 .loc 3 1314 0
 5381 0008 00BF     	 nop
 5382              	.L366:
 5383              	 .loc 3 1314 0 is_stmt 0 discriminator 1
 5384 000a 074B     	 ldr r3,.L367
 5385 000c D3F8C430 	 ldr r3,[r3,#196]
 5386 0010 03F00403 	 and r3,r3,#4
 5387 0014 002B     	 cmp r3,#0
 5388 0016 F8D1     	 bne .L366
1315:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1316:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDSET register in hibernate domain is ready to accept a write */
1317:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1318:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDSET = (uint32_t)event;
 5389              	 .loc 3 1318 0 is_stmt 1
 5390 0018 044A     	 ldr r2,.L367+4
 5391 001a 7B68     	 ldr r3,[r7,#4]
 5392 001c 9360     	 str r3,[r2,#8]
1319:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5393              	 .loc 3 1319 0
 5394 001e 0C37     	 adds r7,r7,#12
 5395              	.LCFI491:
 5396              	 .cfi_def_cfa_offset 4
 5397 0020 BD46     	 mov sp,r7
 5398              	.LCFI492:
 5399              	 .cfi_def_cfa_register 13
 5400              	 
 5401 0022 5DF8047B 	 ldr r7,[sp],#4
 5402              	.LCFI493:
 5403              	 .cfi_restore 7
 5404              	 .cfi_def_cfa_offset 0
 5405 0026 7047     	 bx lr
 5406              	.L368:
 5407              	 .align 2
 5408              	.L367:
 5409 0028 00400050 	 .word 1342193664
 5410 002c 00430050 	 .word 1342194432
 5411              	 .cfi_endproc
 5412              	.LFE261:
 5414              	 .section .text.XMC_SCU_HIB_EnableEvent,"ax",%progbits
 5415              	 .align 2
 5416              	 .global XMC_SCU_HIB_EnableEvent
 5417              	 .thumb
 5418              	 .thumb_func
 5420              	XMC_SCU_HIB_EnableEvent:
 5421              	.LFB262:
1320:../Libraries/XMCLib/src/xmc4_scu.c **** 
1321:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableEvent(int32_t event)
1322:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5422              	 .loc 3 1322 0
 5423              	 .cfi_startproc
 5424              	 
 5425              	 
 5426              	 
 5427 0000 80B4     	 push {r7}
 5428              	.LCFI494:
 5429              	 .cfi_def_cfa_offset 4
 5430              	 .cfi_offset 7,-4
 5431 0002 83B0     	 sub sp,sp,#12
 5432              	.LCFI495:
 5433              	 .cfi_def_cfa_offset 16
 5434 0004 00AF     	 add r7,sp,#0
 5435              	.LCFI496:
 5436              	 .cfi_def_cfa_register 7
 5437 0006 7860     	 str r0,[r7,#4]
1323:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1324:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1325:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1326:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1327:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1328:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1329:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1330:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1331:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1332:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1333:../Libraries/XMCLib/src/xmc4_scu.c **** 
1334:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5438              	 .loc 3 1334 0
 5439 0008 00BF     	 nop
 5440              	.L370:
 5441              	 .loc 3 1334 0 is_stmt 0 discriminator 1
 5442 000a 094B     	 ldr r3,.L371
 5443 000c D3F8C430 	 ldr r3,[r3,#196]
 5444 0010 03F00803 	 and r3,r3,#8
 5445 0014 002B     	 cmp r3,#0
 5446 0016 F8D1     	 bne .L370
1335:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1336:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1337:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1338:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)event;
 5447              	 .loc 3 1338 0 is_stmt 1
 5448 0018 0649     	 ldr r1,.L371+4
 5449 001a 064B     	 ldr r3,.L371+4
 5450 001c DA68     	 ldr r2,[r3,#12]
 5451 001e 7B68     	 ldr r3,[r7,#4]
 5452 0020 1343     	 orrs r3,r3,r2
 5453 0022 CB60     	 str r3,[r1,#12]
1339:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5454              	 .loc 3 1339 0
 5455 0024 0C37     	 adds r7,r7,#12
 5456              	.LCFI497:
 5457              	 .cfi_def_cfa_offset 4
 5458 0026 BD46     	 mov sp,r7
 5459              	.LCFI498:
 5460              	 .cfi_def_cfa_register 13
 5461              	 
 5462 0028 5DF8047B 	 ldr r7,[sp],#4
 5463              	.LCFI499:
 5464              	 .cfi_restore 7
 5465              	 .cfi_def_cfa_offset 0
 5466 002c 7047     	 bx lr
 5467              	.L372:
 5468 002e 00BF     	 .align 2
 5469              	.L371:
 5470 0030 00400050 	 .word 1342193664
 5471 0034 00430050 	 .word 1342194432
 5472              	 .cfi_endproc
 5473              	.LFE262:
 5475              	 .section .text.XMC_SCU_HIB_DisableEvent,"ax",%progbits
 5476              	 .align 2
 5477              	 .global XMC_SCU_HIB_DisableEvent
 5478              	 .thumb
 5479              	 .thumb_func
 5481              	XMC_SCU_HIB_DisableEvent:
 5482              	.LFB263:
1340:../Libraries/XMCLib/src/xmc4_scu.c **** 
1341:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableEvent(int32_t event)
1342:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5483              	 .loc 3 1342 0
 5484              	 .cfi_startproc
 5485              	 
 5486              	 
 5487              	 
 5488 0000 80B4     	 push {r7}
 5489              	.LCFI500:
 5490              	 .cfi_def_cfa_offset 4
 5491              	 .cfi_offset 7,-4
 5492 0002 83B0     	 sub sp,sp,#12
 5493              	.LCFI501:
 5494              	 .cfi_def_cfa_offset 16
 5495 0004 00AF     	 add r7,sp,#0
 5496              	.LCFI502:
 5497              	 .cfi_def_cfa_register 7
 5498 0006 7860     	 str r0,[r7,#4]
1343:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1344:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1345:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1346:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1347:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1348:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1349:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1350:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1351:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1352:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1353:../Libraries/XMCLib/src/xmc4_scu.c **** 
1354:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5499              	 .loc 3 1354 0
 5500 0008 00BF     	 nop
 5501              	.L374:
 5502              	 .loc 3 1354 0 is_stmt 0 discriminator 1
 5503 000a 094B     	 ldr r3,.L375
 5504 000c D3F8C430 	 ldr r3,[r3,#196]
 5505 0010 03F00803 	 and r3,r3,#8
 5506 0014 002B     	 cmp r3,#0
 5507 0016 F8D1     	 bne .L374
1355:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1356:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1357:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1358:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR &= (uint32_t)~event;
 5508              	 .loc 3 1358 0 is_stmt 1
 5509 0018 0649     	 ldr r1,.L375+4
 5510 001a 064B     	 ldr r3,.L375+4
 5511 001c DB68     	 ldr r3,[r3,#12]
 5512 001e 7A68     	 ldr r2,[r7,#4]
 5513 0020 D243     	 mvns r2,r2
 5514 0022 1340     	 ands r3,r3,r2
 5515 0024 CB60     	 str r3,[r1,#12]
1359:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5516              	 .loc 3 1359 0
 5517 0026 0C37     	 adds r7,r7,#12
 5518              	.LCFI503:
 5519              	 .cfi_def_cfa_offset 4
 5520 0028 BD46     	 mov sp,r7
 5521              	.LCFI504:
 5522              	 .cfi_def_cfa_register 13
 5523              	 
 5524 002a 5DF8047B 	 ldr r7,[sp],#4
 5525              	.LCFI505:
 5526              	 .cfi_restore 7
 5527              	 .cfi_def_cfa_offset 0
 5528 002e 7047     	 bx lr
 5529              	.L376:
 5530              	 .align 2
 5531              	.L375:
 5532 0030 00400050 	 .word 1342193664
 5533 0034 00430050 	 .word 1342194432
 5534              	 .cfi_endproc
 5535              	.LFE263:
 5537              	 .section .text.XMC_SCU_HIB_EnterHibernateState,"ax",%progbits
 5538              	 .align 2
 5539              	 .global XMC_SCU_HIB_EnterHibernateState
 5540              	 .thumb
 5541              	 .thumb_func
 5543              	XMC_SCU_HIB_EnterHibernateState:
 5544              	.LFB264:
1360:../Libraries/XMCLib/src/xmc4_scu.c **** 
1361:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateState(void)
1362:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5545              	 .loc 3 1362 0
 5546              	 .cfi_startproc
 5547              	 
 5548              	 
 5549              	 
 5550 0000 80B4     	 push {r7}
 5551              	.LCFI506:
 5552              	 .cfi_def_cfa_offset 4
 5553              	 .cfi_offset 7,-4
 5554 0002 00AF     	 add r7,sp,#0
 5555              	.LCFI507:
 5556              	 .cfi_def_cfa_register 7
1363:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5557              	 .loc 3 1363 0
 5558 0004 00BF     	 nop
 5559              	.L378:
 5560              	 .loc 3 1363 0 is_stmt 0 discriminator 1
 5561 0006 084B     	 ldr r3,.L379
 5562 0008 D3F8C430 	 ldr r3,[r3,#196]
 5563 000c 03F00803 	 and r3,r3,#8
 5564 0010 002B     	 cmp r3,#0
 5565 0012 F8D1     	 bne .L378
1364:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1365:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1366:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1367:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_HIB_Msk;
 5566              	 .loc 3 1367 0 is_stmt 1
 5567 0014 054A     	 ldr r2,.L379+4
 5568 0016 054B     	 ldr r3,.L379+4
 5569 0018 DB68     	 ldr r3,[r3,#12]
 5570 001a 43F01003 	 orr r3,r3,#16
 5571 001e D360     	 str r3,[r2,#12]
1368:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5572              	 .loc 3 1368 0
 5573 0020 BD46     	 mov sp,r7
 5574              	.LCFI508:
 5575              	 .cfi_def_cfa_register 13
 5576              	 
 5577 0022 5DF8047B 	 ldr r7,[sp],#4
 5578              	.LCFI509:
 5579              	 .cfi_restore 7
 5580              	 .cfi_def_cfa_offset 0
 5581 0026 7047     	 bx lr
 5582              	.L380:
 5583              	 .align 2
 5584              	.L379:
 5585 0028 00400050 	 .word 1342193664
 5586 002c 00430050 	 .word 1342194432
 5587              	 .cfi_endproc
 5588              	.LFE264:
 5590              	 .section .text.XMC_SCU_HIB_EnterHibernateStateEx,"ax",%progbits
 5591              	 .align 2
 5592              	 .global XMC_SCU_HIB_EnterHibernateStateEx
 5593              	 .thumb
 5594              	 .thumb_func
 5596              	XMC_SCU_HIB_EnterHibernateStateEx:
 5597              	.LFB265:
1369:../Libraries/XMCLib/src/xmc4_scu.c **** 
1370:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateStateEx(XMC_SCU_HIB_HIBERNATE_MODE_t mode)
1371:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5598              	 .loc 3 1371 0
 5599              	 .cfi_startproc
 5600              	 
 5601              	 
 5602 0000 80B5     	 push {r7,lr}
 5603              	.LCFI510:
 5604              	 .cfi_def_cfa_offset 8
 5605              	 .cfi_offset 7,-8
 5606              	 .cfi_offset 14,-4
 5607 0002 82B0     	 sub sp,sp,#8
 5608              	.LCFI511:
 5609              	 .cfi_def_cfa_offset 16
 5610 0004 00AF     	 add r7,sp,#0
 5611              	.LCFI512:
 5612              	 .cfi_def_cfa_register 7
 5613 0006 0346     	 mov r3,r0
 5614 0008 FB71     	 strb r3,[r7,#7]
1372:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL)
 5615              	 .loc 3 1372 0
 5616 000a FB79     	 ldrb r3,[r7,#7]
 5617 000c 002B     	 cmp r3,#0
 5618 000e 01D1     	 bne .L381
1373:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1374:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_HIB_EnterHibernateState();
 5619              	 .loc 3 1374 0
 5620 0010 FFF7FEFF 	 bl XMC_SCU_HIB_EnterHibernateState
 5621              	.L381:
1375:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1376:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1377:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL)
1378:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1379:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HINTSET_Msk)
1380:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1381:../Libraries/XMCLib/src/xmc4_scu.c ****       /* Wait until HDCR register in hibernate domain is ready to accept a write */
1382:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1383:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HINTSET = SCU_HIBERNATE_HINTSET_HIBNINT_Msk;
1384:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1385:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1386:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5622              	 .loc 3 1386 0
 5623 0014 0837     	 adds r7,r7,#8
 5624              	.LCFI513:
 5625              	 .cfi_def_cfa_offset 8
 5626 0016 BD46     	 mov sp,r7
 5627              	.LCFI514:
 5628              	 .cfi_def_cfa_register 13
 5629              	 
 5630 0018 80BD     	 pop {r7,pc}
 5631              	 .cfi_endproc
 5632              	.LFE265:
 5634 001a 00BF     	 .section .text.XMC_SCU_HIB_SetWakeupTriggerInput,"ax",%progbits
 5635              	 .align 2
 5636              	 .global XMC_SCU_HIB_SetWakeupTriggerInput
 5637              	 .thumb
 5638              	 .thumb_func
 5640              	XMC_SCU_HIB_SetWakeupTriggerInput:
 5641              	.LFB266:
1387:../Libraries/XMCLib/src/xmc4_scu.c **** 
1388:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetWakeupTriggerInput(XMC_SCU_HIB_IO_t pin)
1389:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5642              	 .loc 3 1389 0
 5643              	 .cfi_startproc
 5644              	 
 5645              	 
 5646              	 
 5647 0000 80B4     	 push {r7}
 5648              	.LCFI515:
 5649              	 .cfi_def_cfa_offset 4
 5650              	 .cfi_offset 7,-4
 5651 0002 83B0     	 sub sp,sp,#12
 5652              	.LCFI516:
 5653              	 .cfi_def_cfa_offset 16
 5654 0004 00AF     	 add r7,sp,#0
 5655              	.LCFI517:
 5656              	 .cfi_def_cfa_register 7
 5657 0006 0346     	 mov r3,r0
 5658 0008 FB71     	 strb r3,[r7,#7]
1390:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5659              	 .loc 3 1390 0
 5660 000a 00BF     	 nop
 5661              	.L384:
 5662              	 .loc 3 1390 0 is_stmt 0 discriminator 1
 5663 000c 0D4B     	 ldr r3,.L387
 5664 000e D3F8C430 	 ldr r3,[r3,#196]
 5665 0012 03F00803 	 and r3,r3,#8
 5666 0016 002B     	 cmp r3,#0
 5667 0018 F8D1     	 bne .L384
1391:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1392:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1393:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1394:../Libraries/XMCLib/src/xmc4_scu.c **** 
1395:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5668              	 .loc 3 1395 0 is_stmt 1
 5669 001a FB79     	 ldrb r3,[r7,#7]
 5670 001c 002B     	 cmp r3,#0
 5671 001e 06D1     	 bne .L385
1396:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1397:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 5672              	 .loc 3 1397 0
 5673 0020 094A     	 ldr r2,.L387+4
 5674 0022 094B     	 ldr r3,.L387+4
 5675 0024 DB68     	 ldr r3,[r3,#12]
 5676 0026 43F48073 	 orr r3,r3,#256
 5677 002a D360     	 str r3,[r2,#12]
 5678 002c 05E0     	 b .L383
 5679              	.L385:
1398:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1399:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1400:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1401:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 5680              	 .loc 3 1401 0
 5681 002e 064A     	 ldr r2,.L387+4
 5682 0030 054B     	 ldr r3,.L387+4
 5683 0032 DB68     	 ldr r3,[r3,#12]
 5684 0034 23F48073 	 bic r3,r3,#256
 5685 0038 D360     	 str r3,[r2,#12]
 5686              	.L383:
1402:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1403:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5687              	 .loc 3 1403 0
 5688 003a 0C37     	 adds r7,r7,#12
 5689              	.LCFI518:
 5690              	 .cfi_def_cfa_offset 4
 5691 003c BD46     	 mov sp,r7
 5692              	.LCFI519:
 5693              	 .cfi_def_cfa_register 13
 5694              	 
 5695 003e 5DF8047B 	 ldr r7,[sp],#4
 5696              	.LCFI520:
 5697              	 .cfi_restore 7
 5698              	 .cfi_def_cfa_offset 0
 5699 0042 7047     	 bx lr
 5700              	.L388:
 5701              	 .align 2
 5702              	.L387:
 5703 0044 00400050 	 .word 1342193664
 5704 0048 00430050 	 .word 1342194432
 5705              	 .cfi_endproc
 5706              	.LFE266:
 5708              	 .section .text.XMC_SCU_HIB_SetPinMode,"ax",%progbits
 5709              	 .align 2
 5710              	 .global XMC_SCU_HIB_SetPinMode
 5711              	 .thumb
 5712              	 .thumb_func
 5714              	XMC_SCU_HIB_SetPinMode:
 5715              	.LFB267:
1404:../Libraries/XMCLib/src/xmc4_scu.c **** 
1405:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinMode(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_PIN_MODE_t mode)
1406:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5716              	 .loc 3 1406 0
 5717              	 .cfi_startproc
 5718              	 
 5719              	 
 5720              	 
 5721 0000 80B4     	 push {r7}
 5722              	.LCFI521:
 5723              	 .cfi_def_cfa_offset 4
 5724              	 .cfi_offset 7,-4
 5725 0002 83B0     	 sub sp,sp,#12
 5726              	.LCFI522:
 5727              	 .cfi_def_cfa_offset 16
 5728 0004 00AF     	 add r7,sp,#0
 5729              	.LCFI523:
 5730              	 .cfi_def_cfa_register 7
 5731 0006 0346     	 mov r3,r0
 5732 0008 3960     	 str r1,[r7]
 5733 000a FB71     	 strb r3,[r7,#7]
1407:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5734              	 .loc 3 1407 0
 5735 000c 00BF     	 nop
 5736              	.L390:
 5737              	 .loc 3 1407 0 is_stmt 0 discriminator 1
 5738 000e 0F4B     	 ldr r3,.L391
 5739 0010 D3F8C430 	 ldr r3,[r3,#196]
 5740 0014 03F00803 	 and r3,r3,#8
 5741 0018 002B     	 cmp r3,#0
 5742 001a F8D1     	 bne .L390
1408:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1409:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1410:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1411:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0SEL_Msk << (SCU_HIBERNATE
 5743              	 .loc 3 1411 0 is_stmt 1
 5744 001c 0C49     	 ldr r1,.L391+4
 5745 001e 0C4B     	 ldr r3,.L391+4
 5746 0020 DA68     	 ldr r2,[r3,#12]
 5747 0022 FB79     	 ldrb r3,[r7,#7]
 5748 0024 9B00     	 lsls r3,r3,#2
 5749 0026 1846     	 mov r0,r3
 5750 0028 4FF47023 	 mov r3,#983040
 5751 002c 8340     	 lsls r3,r3,r0
 5752 002e DB43     	 mvns r3,r3
 5753 0030 1A40     	 ands r2,r2,r3
1412:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5754              	 .loc 3 1412 0
 5755 0032 FB79     	 ldrb r3,[r7,#7]
 5756 0034 9B00     	 lsls r3,r3,#2
1411:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5757              	 .loc 3 1411 0
 5758 0036 1846     	 mov r0,r3
 5759              	 .loc 3 1412 0
 5760 0038 3B68     	 ldr r3,[r7]
 5761 003a 8340     	 lsls r3,r3,r0
1411:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5762              	 .loc 3 1411 0
 5763 003c 1343     	 orrs r3,r3,r2
 5764 003e CB60     	 str r3,[r1,#12]
1413:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5765              	 .loc 3 1413 0
 5766 0040 0C37     	 adds r7,r7,#12
 5767              	.LCFI524:
 5768              	 .cfi_def_cfa_offset 4
 5769 0042 BD46     	 mov sp,r7
 5770              	.LCFI525:
 5771              	 .cfi_def_cfa_register 13
 5772              	 
 5773 0044 5DF8047B 	 ldr r7,[sp],#4
 5774              	.LCFI526:
 5775              	 .cfi_restore 7
 5776              	 .cfi_def_cfa_offset 0
 5777 0048 7047     	 bx lr
 5778              	.L392:
 5779 004a 00BF     	 .align 2
 5780              	.L391:
 5781 004c 00400050 	 .word 1342193664
 5782 0050 00430050 	 .word 1342194432
 5783              	 .cfi_endproc
 5784              	.LFE267:
 5786              	 .section .text.XMC_SCU_HIB_SetPinOutputLevel,"ax",%progbits
 5787              	 .align 2
 5788              	 .global XMC_SCU_HIB_SetPinOutputLevel
 5789              	 .thumb
 5790              	 .thumb_func
 5792              	XMC_SCU_HIB_SetPinOutputLevel:
 5793              	.LFB268:
1414:../Libraries/XMCLib/src/xmc4_scu.c **** 
1415:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinOutputLevel(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_IO_OUTPUT_LEVEL_t level)
1416:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5794              	 .loc 3 1416 0
 5795              	 .cfi_startproc
 5796              	 
 5797              	 
 5798              	 
 5799 0000 80B4     	 push {r7}
 5800              	.LCFI527:
 5801              	 .cfi_def_cfa_offset 4
 5802              	 .cfi_offset 7,-4
 5803 0002 83B0     	 sub sp,sp,#12
 5804              	.LCFI528:
 5805              	 .cfi_def_cfa_offset 16
 5806 0004 00AF     	 add r7,sp,#0
 5807              	.LCFI529:
 5808              	 .cfi_def_cfa_register 7
 5809 0006 0346     	 mov r3,r0
 5810 0008 0A46     	 mov r2,r1
 5811 000a FB71     	 strb r3,[r7,#7]
 5812 000c 1346     	 mov r3,r2
 5813 000e BB80     	 strh r3,[r7,#4]
1417:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5814              	 .loc 3 1417 0
 5815 0010 00BF     	 nop
 5816              	.L394:
 5817              	 .loc 3 1417 0 is_stmt 0 discriminator 1
 5818 0012 0E4B     	 ldr r3,.L395
 5819 0014 D3F8C430 	 ldr r3,[r3,#196]
 5820 0018 03F00803 	 and r3,r3,#8
 5821 001c 002B     	 cmp r3,#0
 5822 001e F8D1     	 bne .L394
1418:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1419:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1420:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1421:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0POL_Msk << pin)) |
 5823              	 .loc 3 1421 0 is_stmt 1
 5824 0020 0B48     	 ldr r0,.L395+4
 5825 0022 0B4B     	 ldr r3,.L395+4
 5826 0024 DA68     	 ldr r2,[r3,#12]
 5827 0026 FB79     	 ldrb r3,[r7,#7]
 5828 0028 4FF48051 	 mov r1,#4096
 5829 002c 01FA03F3 	 lsl r3,r1,r3
 5830 0030 DB43     	 mvns r3,r3
 5831 0032 1340     	 ands r3,r3,r2
1422:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5832              	 .loc 3 1422 0
 5833 0034 B988     	 ldrh r1,[r7,#4]
 5834 0036 FA79     	 ldrb r2,[r7,#7]
 5835 0038 01FA02F2 	 lsl r2,r1,r2
1421:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5836              	 .loc 3 1421 0
 5837 003c 1343     	 orrs r3,r3,r2
 5838 003e C360     	 str r3,[r0,#12]
1423:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5839              	 .loc 3 1423 0
 5840 0040 0C37     	 adds r7,r7,#12
 5841              	.LCFI530:
 5842              	 .cfi_def_cfa_offset 4
 5843 0042 BD46     	 mov sp,r7
 5844              	.LCFI531:
 5845              	 .cfi_def_cfa_register 13
 5846              	 
 5847 0044 5DF8047B 	 ldr r7,[sp],#4
 5848              	.LCFI532:
 5849              	 .cfi_restore 7
 5850              	 .cfi_def_cfa_offset 0
 5851 0048 7047     	 bx lr
 5852              	.L396:
 5853 004a 00BF     	 .align 2
 5854              	.L395:
 5855 004c 00400050 	 .word 1342193664
 5856 0050 00430050 	 .word 1342194432
 5857              	 .cfi_endproc
 5858              	.LFE268:
 5860              	 .section .text.XMC_SCU_HIB_SetInput0,"ax",%progbits
 5861              	 .align 2
 5862              	 .global XMC_SCU_HIB_SetInput0
 5863              	 .thumb
 5864              	 .thumb_func
 5866              	XMC_SCU_HIB_SetInput0:
 5867              	.LFB269:
1424:../Libraries/XMCLib/src/xmc4_scu.c **** 
1425:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetInput0(XMC_SCU_HIB_IO_t pin)
1426:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5868              	 .loc 3 1426 0
 5869              	 .cfi_startproc
 5870              	 
 5871              	 
 5872              	 
 5873 0000 80B4     	 push {r7}
 5874              	.LCFI533:
 5875              	 .cfi_def_cfa_offset 4
 5876              	 .cfi_offset 7,-4
 5877 0002 83B0     	 sub sp,sp,#12
 5878              	.LCFI534:
 5879              	 .cfi_def_cfa_offset 16
 5880 0004 00AF     	 add r7,sp,#0
 5881              	.LCFI535:
 5882              	 .cfi_def_cfa_register 7
 5883 0006 0346     	 mov r3,r0
 5884 0008 FB71     	 strb r3,[r7,#7]
1427:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5885              	 .loc 3 1427 0
 5886 000a 00BF     	 nop
 5887              	.L398:
 5888              	 .loc 3 1427 0 is_stmt 0 discriminator 1
 5889 000c 0D4B     	 ldr r3,.L401
 5890 000e D3F8C430 	 ldr r3,[r3,#196]
 5891 0012 03F00803 	 and r3,r3,#8
 5892 0016 002B     	 cmp r3,#0
 5893 0018 F8D1     	 bne .L398
1428:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1429:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1430:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1431:../Libraries/XMCLib/src/xmc4_scu.c **** 
1432:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5894              	 .loc 3 1432 0 is_stmt 1
 5895 001a FB79     	 ldrb r3,[r7,#7]
 5896 001c 002B     	 cmp r3,#0
 5897 001e 06D1     	 bne .L399
1433:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1434:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 5898              	 .loc 3 1434 0
 5899 0020 094A     	 ldr r2,.L401+4
 5900 0022 094B     	 ldr r3,.L401+4
 5901 0024 DB68     	 ldr r3,[r3,#12]
 5902 0026 43F48063 	 orr r3,r3,#1024
 5903 002a D360     	 str r3,[r2,#12]
 5904 002c 05E0     	 b .L397
 5905              	.L399:
1435:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1436:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1437:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1438:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 5906              	 .loc 3 1438 0
 5907 002e 064A     	 ldr r2,.L401+4
 5908 0030 054B     	 ldr r3,.L401+4
 5909 0032 DB68     	 ldr r3,[r3,#12]
 5910 0034 23F48063 	 bic r3,r3,#1024
 5911 0038 D360     	 str r3,[r2,#12]
 5912              	.L397:
1439:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1440:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5913              	 .loc 3 1440 0
 5914 003a 0C37     	 adds r7,r7,#12
 5915              	.LCFI536:
 5916              	 .cfi_def_cfa_offset 4
 5917 003c BD46     	 mov sp,r7
 5918              	.LCFI537:
 5919              	 .cfi_def_cfa_register 13
 5920              	 
 5921 003e 5DF8047B 	 ldr r7,[sp],#4
 5922              	.LCFI538:
 5923              	 .cfi_restore 7
 5924              	 .cfi_def_cfa_offset 0
 5925 0042 7047     	 bx lr
 5926              	.L402:
 5927              	 .align 2
 5928              	.L401:
 5929 0044 00400050 	 .word 1342193664
 5930 0048 00430050 	 .word 1342194432
 5931              	 .cfi_endproc
 5932              	.LFE269:
 5934              	 .section .text.XMC_SCU_HIB_SetSR0Input,"ax",%progbits
 5935              	 .align 2
 5936              	 .global XMC_SCU_HIB_SetSR0Input
 5937              	 .thumb
 5938              	 .thumb_func
 5940              	XMC_SCU_HIB_SetSR0Input:
 5941              	.LFB270:
1441:../Libraries/XMCLib/src/xmc4_scu.c **** 
1442:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR0Input(XMC_SCU_HIB_SR0_INPUT_t input)
1443:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5942              	 .loc 3 1443 0
 5943              	 .cfi_startproc
 5944              	 
 5945              	 
 5946              	 
 5947 0000 80B4     	 push {r7}
 5948              	.LCFI539:
 5949              	 .cfi_def_cfa_offset 4
 5950              	 .cfi_offset 7,-4
 5951 0002 83B0     	 sub sp,sp,#12
 5952              	.LCFI540:
 5953              	 .cfi_def_cfa_offset 16
 5954 0004 00AF     	 add r7,sp,#0
 5955              	.LCFI541:
 5956              	 .cfi_def_cfa_register 7
 5957 0006 0346     	 mov r3,r0
 5958 0008 FB80     	 strh r3,[r7,#6]
1444:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5959              	 .loc 3 1444 0
 5960 000a 00BF     	 nop
 5961              	.L404:
 5962              	 .loc 3 1444 0 is_stmt 0 discriminator 1
 5963 000c 094B     	 ldr r3,.L405
 5964 000e D3F8C430 	 ldr r3,[r3,#196]
 5965 0012 03F00803 	 and r3,r3,#8
 5966 0016 002B     	 cmp r3,#0
 5967 0018 F8D1     	 bne .L404
1445:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1446:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1447:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1448:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1449:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
1450:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1451:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk)) |
 5968              	 .loc 3 1451 0 is_stmt 1
 5969 001a 0749     	 ldr r1,.L405+4
 5970 001c 064B     	 ldr r3,.L405+4
 5971 001e DB68     	 ldr r3,[r3,#12]
 5972 0020 23F48062 	 bic r2,r3,#1024
 5973 0024 FB88     	 ldrh r3,[r7,#6]
 5974 0026 1343     	 orrs r3,r3,r2
 5975 0028 CB60     	 str r3,[r1,#12]
1452:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1453:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1454:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5976              	 .loc 3 1454 0
 5977 002a 0C37     	 adds r7,r7,#12
 5978              	.LCFI542:
 5979              	 .cfi_def_cfa_offset 4
 5980 002c BD46     	 mov sp,r7
 5981              	.LCFI543:
 5982              	 .cfi_def_cfa_register 13
 5983              	 
 5984 002e 5DF8047B 	 ldr r7,[sp],#4
 5985              	.LCFI544:
 5986              	 .cfi_restore 7
 5987              	 .cfi_def_cfa_offset 0
 5988 0032 7047     	 bx lr
 5989              	.L406:
 5990              	 .align 2
 5991              	.L405:
 5992 0034 00400050 	 .word 1342193664
 5993 0038 00430050 	 .word 1342194432
 5994              	 .cfi_endproc
 5995              	.LFE270:
 5997              	 .section .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable,"ax",%progbits
 5998              	 .align 2
 5999              	 .global XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 6000              	 .thumb
 6001              	 .thumb_func
 6003              	XMC_SCU_CLOCK_IsLowPowerOscillatorStable:
 6004              	.LFB271:
1455:../Libraries/XMCLib/src/xmc4_scu.c **** 
1456:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1457:../Libraries/XMCLib/src/xmc4_scu.c **** 
1458:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1459:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR1Input(XMC_SCU_HIB_SR1_INPUT_t input)
1460:../Libraries/XMCLib/src/xmc4_scu.c **** {
1461:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
1462:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1463:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1464:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1465:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI1SEL_Msk | SCU_HIB
1466:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1467:../Libraries/XMCLib/src/xmc4_scu.c **** }
1468:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1469:../Libraries/XMCLib/src/xmc4_scu.c **** 
1470:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetInput(XMC_SCU_HIB_LPAC_INPUT_t input)
1471:../Libraries/XMCLib/src/xmc4_scu.c **** {
1472:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1473:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1474:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1475:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1476:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_CMPEN_Msk
1477:../Libraries/XMCLib/src/xmc4_scu.c ****                             input;
1478:../Libraries/XMCLib/src/xmc4_scu.c **** }
1479:../Libraries/XMCLib/src/xmc4_scu.c **** 
1480:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTrigger(XMC_SCU_HIB_LPAC_TRIGGER_t trigger)
1481:../Libraries/XMCLib/src/xmc4_scu.c **** {
1482:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1483:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1484:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1485:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1486:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_TRIGSEL_M
1487:../Libraries/XMCLib/src/xmc4_scu.c ****                             trigger;
1488:../Libraries/XMCLib/src/xmc4_scu.c **** }
1489:../Libraries/XMCLib/src/xmc4_scu.c **** 
1490:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTiming(bool enable_delay, uint16_t interval_count, uint8_t settle_count)
1491:../Libraries/XMCLib/src/xmc4_scu.c **** {
1492:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t config = 0;
1493:../Libraries/XMCLib/src/xmc4_scu.c **** 
1494:../Libraries/XMCLib/src/xmc4_scu.c ****   if (enable_delay)
1495:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1496:../Libraries/XMCLib/src/xmc4_scu.c ****     config = SCU_HIBERNATE_LPACCONF_CONVDEL_Msk;
1497:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1498:../Libraries/XMCLib/src/xmc4_scu.c **** 
1499:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= interval_count << SCU_HIBERNATE_LPACCONF_INTERVCNT_Pos;
1500:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= settle_count << SCU_HIBERNATE_LPACCONF_SETTLECNT_Pos;
1501:../Libraries/XMCLib/src/xmc4_scu.c **** 
1502:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1503:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1504:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1505:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1506:../Libraries/XMCLib/src/xmc4_scu.c **** 
1507:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~(SCU_HIBERNATE_LPACCONF_CONVDEL_
1508:../Libraries/XMCLib/src/xmc4_scu.c ****                              SCU_HIBERNATE_LPACCONF_INTERVCNT_Msk |
1509:../Libraries/XMCLib/src/xmc4_scu.c ****                              SCU_HIBERNATE_LPACCONF_SETTLECNT_Msk)) |
1510:../Libraries/XMCLib/src/xmc4_scu.c ****                             config;
1511:../Libraries/XMCLib/src/xmc4_scu.c **** 
1512:../Libraries/XMCLib/src/xmc4_scu.c **** }
1513:../Libraries/XMCLib/src/xmc4_scu.c **** 
1514:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetVBATThresholds(uint8_t lower, uint8_t upper)
1515:../Libraries/XMCLib/src/xmc4_scu.c **** {
1516:../Libraries/XMCLib/src/xmc4_scu.c **** 
1517:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH0_Msk)
1518:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1519:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1520:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1521:../Libraries/XMCLib/src/xmc4_scu.c **** 
1522:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH0 = (lower << SCU_HIBERNATE_LPACTH0_VBATLO_Pos) | (upper << SCU_HIBERNATE_LP
1523:../Libraries/XMCLib/src/xmc4_scu.c **** 
1524:../Libraries/XMCLib/src/xmc4_scu.c **** 
1525:../Libraries/XMCLib/src/xmc4_scu.c **** 
1526:../Libraries/XMCLib/src/xmc4_scu.c **** }
1527:../Libraries/XMCLib/src/xmc4_scu.c **** 
1528:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds(uint8_t lower, uint8_t upper)
1529:../Libraries/XMCLib/src/xmc4_scu.c **** {
1530:../Libraries/XMCLib/src/xmc4_scu.c **** 
1531:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1532:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1533:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1534:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1535:../Libraries/XMCLib/src/xmc4_scu.c **** 
1536:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Ms
1537:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
1538:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO0HI_Pos);
1539:../Libraries/XMCLib/src/xmc4_scu.c **** 
1540:../Libraries/XMCLib/src/xmc4_scu.c **** }
1541:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1542:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds(uint8_t lower, uint8_t upper)
1543:../Libraries/XMCLib/src/xmc4_scu.c **** {
1544:../Libraries/XMCLib/src/xmc4_scu.c **** 
1545:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1546:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1547:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1548:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1549:../Libraries/XMCLib/src/xmc4_scu.c **** 
1550:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Ms
1551:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
1552:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO1HI_Pos);
1553:../Libraries/XMCLib/src/xmc4_scu.c **** 
1554:../Libraries/XMCLib/src/xmc4_scu.c **** }
1555:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1556:../Libraries/XMCLib/src/xmc4_scu.c **** int32_t XMC_SCU_HIB_LPAC_GetStatus(void)
1557:../Libraries/XMCLib/src/xmc4_scu.c **** {
1558:../Libraries/XMCLib/src/xmc4_scu.c ****   return SCU_HIBERNATE->LPACST;
1559:../Libraries/XMCLib/src/xmc4_scu.c **** }
1560:../Libraries/XMCLib/src/xmc4_scu.c **** 
1561:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_ClearStatus(int32_t status)
1562:../Libraries/XMCLib/src/xmc4_scu.c **** {
1563:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCLR_Msk)
1564:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1565:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACCLR register in hibernate domain is ready to accept a write */
1566:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1567:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCLR = status;;
1568:../Libraries/XMCLib/src/xmc4_scu.c **** }
1569:../Libraries/XMCLib/src/xmc4_scu.c **** 
1570:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_TriggerCompare(XMC_SCU_HIB_LPAC_INPUT_t input)
1571:../Libraries/XMCLib/src/xmc4_scu.c **** {
1572:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACSET_Msk)
1573:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1574:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACSET register in hibernate domain is ready to accept a write */
1575:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1576:../Libraries/XMCLib/src/xmc4_scu.c **** 
1577:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACSET = input;
1578:../Libraries/XMCLib/src/xmc4_scu.c **** }
1579:../Libraries/XMCLib/src/xmc4_scu.c **** 
1580:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1581:../Libraries/XMCLib/src/xmc4_scu.c **** 
1582:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void)
1583:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6005              	 .loc 3 1583 0
 6006              	 .cfi_startproc
 6007              	 
 6008              	 
 6009              	 
 6010 0000 80B4     	 push {r7}
 6011              	.LCFI545:
 6012              	 .cfi_def_cfa_offset 4
 6013              	 .cfi_offset 7,-4
 6014 0002 00AF     	 add r7,sp,#0
 6015              	.LCFI546:
 6016              	 .cfi_def_cfa_register 7
1584:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) == 0UL);
 6017              	 .loc 3 1584 0
 6018 0004 064B     	 ldr r3,.L409
 6019 0006 1B68     	 ldr r3,[r3]
 6020 0008 03F00803 	 and r3,r3,#8
 6021 000c 002B     	 cmp r3,#0
 6022 000e 0CBF     	 ite eq
 6023 0010 0123     	 moveq r3,#1
 6024 0012 0023     	 movne r3,#0
 6025 0014 DBB2     	 uxtb r3,r3
1585:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6026              	 .loc 3 1585 0
 6027 0016 1846     	 mov r0,r3
 6028 0018 BD46     	 mov sp,r7
 6029              	.LCFI547:
 6030              	 .cfi_def_cfa_register 13
 6031              	 
 6032 001a 5DF8047B 	 ldr r7,[sp],#4
 6033              	.LCFI548:
 6034              	 .cfi_restore 7
 6035              	 .cfi_def_cfa_offset 0
 6036 001e 7047     	 bx lr
 6037              	.L410:
 6038              	 .align 2
 6039              	.L409:
 6040 0020 00430050 	 .word 1342194432
 6041              	 .cfi_endproc
 6042              	.LFE271:
 6044              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillator,"ax",%progbits
 6045              	 .align 2
 6046              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillator
 6047              	 .thumb
 6048              	 .thumb_func
 6050              	XMC_SCU_CLOCK_EnableLowPowerOscillator:
 6051              	.LFB272:
1586:../Libraries/XMCLib/src/xmc4_scu.c **** 
1587:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1588:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void)
1589:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6052              	 .loc 3 1589 0
 6053              	 .cfi_startproc
 6054              	 
 6055              	 
 6056 0000 80B5     	 push {r7,lr}
 6057              	.LCFI549:
 6058              	 .cfi_def_cfa_offset 8
 6059              	 .cfi_offset 7,-8
 6060              	 .cfi_offset 14,-4
 6061 0002 00AF     	 add r7,sp,#0
 6062              	.LCFI550:
 6063              	 .cfi_def_cfa_register 7
1590:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP */
1591:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED);
 6064              	 .loc 3 1591 0
 6065 0004 4FF40000 	 mov r0,#8388608
 6066 0008 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1592:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6067              	 .loc 3 1592 0
 6068 000c 174A     	 ldr r2,.L415
 6069 000e 174B     	 ldr r3,.L415
 6070 0010 DB69     	 ldr r3,[r3,#28]
 6071 0012 23F03003 	 bic r3,r3,#48
 6072 0016 D361     	 str r3,[r2,#28]
1593:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED) == 0);
 6073              	 .loc 3 1593 0
 6074 0018 00BF     	 nop
 6075              	.L412:
 6076              	 .loc 3 1593 0 is_stmt 0 discriminator 1
 6077 001a FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6078 001e 0346     	 mov r3,r0
 6079 0020 03F40003 	 and r3,r3,#8388608
 6080 0024 002B     	 cmp r3,#0
 6081 0026 F8D0     	 beq .L412
1594:../Libraries/XMCLib/src/xmc4_scu.c **** 
1595:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Clear ULP WDG status */
1596:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED);
 6082              	 .loc 3 1596 0 is_stmt 1
 6083 0028 4FF40030 	 mov r0,#131072
 6084 002c FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1597:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = (uint32_t)SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 6085              	 .loc 3 1597 0
 6086 0030 0E4B     	 ldr r3,.L415
 6087 0032 0822     	 movs r2,#8
 6088 0034 5A60     	 str r2,[r3,#4]
1598:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED) == 0);
 6089              	 .loc 3 1598 0
 6090 0036 00BF     	 nop
 6091              	.L413:
 6092              	 .loc 3 1598 0 is_stmt 0 discriminator 1
 6093 0038 FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6094 003c 0346     	 mov r3,r0
 6095 003e 03F40033 	 and r3,r3,#131072
 6096 0042 002B     	 cmp r3,#0
 6097 0044 F8D0     	 beq .L413
1599:../Libraries/XMCLib/src/xmc4_scu.c **** 
1600:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable ULP WDG */
1601:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED);
 6098              	 .loc 3 1601 0 is_stmt 1
 6099 0046 4FF40020 	 mov r0,#524288
 6100 004a FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1602:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 6101              	 .loc 3 1602 0
 6102 004e 074A     	 ldr r2,.L415
 6103 0050 064B     	 ldr r3,.L415
 6104 0052 DB68     	 ldr r3,[r3,#12]
 6105 0054 43F00803 	 orr r3,r3,#8
 6106 0058 D360     	 str r3,[r2,#12]
1603:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED) == 0);
 6107              	 .loc 3 1603 0
 6108 005a 00BF     	 nop
 6109              	.L414:
 6110              	 .loc 3 1603 0 is_stmt 0 discriminator 1
 6111 005c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6112 0060 0346     	 mov r3,r0
 6113 0062 03F40023 	 and r3,r3,#524288
 6114 0066 002B     	 cmp r3,#0
 6115 0068 F8D0     	 beq .L414
1604:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6116              	 .loc 3 1604 0 is_stmt 1
 6117 006a 80BD     	 pop {r7,pc}
 6118              	.L416:
 6119              	 .align 2
 6120              	.L415:
 6121 006c 00430050 	 .word 1342194432
 6122              	 .cfi_endproc
 6123              	.LFE272:
 6125              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillator,"ax",%progbits
 6126              	 .align 2
 6127              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillator
 6128              	 .thumb
 6129              	 .thumb_func
 6131              	XMC_SCU_CLOCK_DisableLowPowerOscillator:
 6132              	.LFB273:
1605:../Libraries/XMCLib/src/xmc4_scu.c **** 
1606:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1607:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void)
1608:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6133              	 .loc 3 1608 0
 6134              	 .cfi_startproc
 6135              	 
 6136              	 
 6137              	 
 6138 0000 80B4     	 push {r7}
 6139              	.LCFI551:
 6140              	 .cfi_def_cfa_offset 4
 6141              	 .cfi_offset 7,-4
 6142 0002 00AF     	 add r7,sp,#0
 6143              	.LCFI552:
 6144              	 .cfi_def_cfa_register 7
1609:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6145              	 .loc 3 1609 0
 6146 0004 00BF     	 nop
 6147              	.L418:
 6148              	 .loc 3 1609 0 is_stmt 0 discriminator 1
 6149 0006 084B     	 ldr r3,.L419
 6150 0008 D3F8C430 	 ldr r3,[r3,#196]
 6151 000c 03F08003 	 and r3,r3,#128
 6152 0010 002B     	 cmp r3,#0
 6153 0012 F8D1     	 bne .L418
1610:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1611:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */
1612:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1613:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= (uint32_t)SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6154              	 .loc 3 1613 0 is_stmt 1
 6155 0014 054A     	 ldr r2,.L419+4
 6156 0016 054B     	 ldr r3,.L419+4
 6157 0018 DB69     	 ldr r3,[r3,#28]
 6158 001a 43F03003 	 orr r3,r3,#48
 6159 001e D361     	 str r3,[r2,#28]
1614:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6160              	 .loc 3 1614 0
 6161 0020 BD46     	 mov sp,r7
 6162              	.LCFI553:
 6163              	 .cfi_def_cfa_register 13
 6164              	 
 6165 0022 5DF8047B 	 ldr r7,[sp],#4
 6166              	.LCFI554:
 6167              	 .cfi_restore 7
 6168              	 .cfi_def_cfa_offset 0
 6169 0026 7047     	 bx lr
 6170              	.L420:
 6171              	 .align 2
 6172              	.L419:
 6173 0028 00400050 	 .word 1342193664
 6174 002c 00430050 	 .word 1342194432
 6175              	 .cfi_endproc
 6176              	.LFE273:
 6178              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6179              	 .align 2
 6180              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
 6181              	 .thumb
 6182              	 .thumb_func
 6184              	XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:
 6185              	.LFB274:
1615:../Libraries/XMCLib/src/xmc4_scu.c **** 
1616:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void)
1617:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6186              	 .loc 3 1617 0
 6187              	 .cfi_startproc
 6188              	 
 6189              	 
 6190              	 
 6191 0000 80B4     	 push {r7}
 6192              	.LCFI555:
 6193              	 .cfi_def_cfa_offset 4
 6194              	 .cfi_offset 7,-4
 6195 0002 00AF     	 add r7,sp,#0
 6196              	.LCFI556:
 6197              	 .cfi_def_cfa_register 7
1618:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6198              	 .loc 3 1618 0
 6199 0004 00BF     	 nop
 6200              	.L422:
 6201              	 .loc 3 1618 0 is_stmt 0 discriminator 1
 6202 0006 084B     	 ldr r3,.L423
 6203 0008 D3F8C430 	 ldr r3,[r3,#196]
 6204 000c 03F08003 	 and r3,r3,#128
 6205 0010 002B     	 cmp r3,#0
 6206 0012 F8D1     	 bne .L422
1619:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1620:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */
1621:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1622:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= SCU_HIBERNATE_OSCULCTRL_X1DEN_Msk | SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6207              	 .loc 3 1622 0 is_stmt 1
 6208 0014 054A     	 ldr r2,.L423+4
 6209 0016 054B     	 ldr r3,.L423+4
 6210 0018 DB69     	 ldr r3,[r3,#28]
 6211 001a 43F03103 	 orr r3,r3,#49
 6212 001e D361     	 str r3,[r2,#28]
1623:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6213              	 .loc 3 1623 0
 6214 0020 BD46     	 mov sp,r7
 6215              	.LCFI557:
 6216              	 .cfi_def_cfa_register 13
 6217              	 
 6218 0022 5DF8047B 	 ldr r7,[sp],#4
 6219              	.LCFI558:
 6220              	 .cfi_restore 7
 6221              	 .cfi_def_cfa_offset 0
 6222 0026 7047     	 bx lr
 6223              	.L424:
 6224              	 .align 2
 6225              	.L423:
 6226 0028 00400050 	 .word 1342193664
 6227 002c 00430050 	 .word 1342194432
 6228              	 .cfi_endproc
 6229              	.LFE274:
 6231              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6232              	 .align 2
 6233              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
 6234              	 .thumb
 6235              	 .thumb_func
 6237              	XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:
 6238              	.LFB275:
1624:../Libraries/XMCLib/src/xmc4_scu.c **** 
1625:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void)
1626:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6239              	 .loc 3 1626 0
 6240              	 .cfi_startproc
 6241              	 
 6242              	 
 6243              	 
 6244 0000 80B4     	 push {r7}
 6245              	.LCFI559:
 6246              	 .cfi_def_cfa_offset 4
 6247              	 .cfi_offset 7,-4
 6248 0002 00AF     	 add r7,sp,#0
 6249              	.LCFI560:
 6250              	 .cfi_def_cfa_register 7
1627:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6251              	 .loc 3 1627 0
 6252 0004 00BF     	 nop
 6253              	.L426:
 6254              	 .loc 3 1627 0 is_stmt 0 discriminator 1
 6255 0006 094B     	 ldr r3,.L427
 6256 0008 D3F8C430 	 ldr r3,[r3,#196]
 6257 000c 03F08003 	 and r3,r3,#128
 6258 0010 002B     	 cmp r3,#0
 6259 0012 F8D1     	 bne .L426
1628:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1629:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */
1630:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1631:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL = (SCU_HIBERNATE->OSCULCTRL & ~(uint32_t)(SCU_HIBERNATE_OSCULCTRL_X1DEN_
 6260              	 .loc 3 1631 0 is_stmt 1
 6261 0014 064A     	 ldr r2,.L427+4
 6262 0016 064B     	 ldr r3,.L427+4
 6263 0018 DB69     	 ldr r3,[r3,#28]
 6264 001a 23F03103 	 bic r3,r3,#49
 6265 001e 43F02003 	 orr r3,r3,#32
 6266 0022 D361     	 str r3,[r2,#28]
1632:../Libraries/XMCLib/src/xmc4_scu.c ****                              (SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN << SCU_HIBERNATE_OSCULCTR
1633:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6267              	 .loc 3 1633 0
 6268 0024 BD46     	 mov sp,r7
 6269              	.LCFI561:
 6270              	 .cfi_def_cfa_register 13
 6271              	 
 6272 0026 5DF8047B 	 ldr r7,[sp],#4
 6273              	.LCFI562:
 6274              	 .cfi_restore 7
 6275              	 .cfi_def_cfa_offset 0
 6276 002a 7047     	 bx lr
 6277              	.L428:
 6278              	 .align 2
 6279              	.L427:
 6280 002c 00400050 	 .word 1342193664
 6281 0030 00430050 	 .word 1342194432
 6282              	 .cfi_endproc
 6283              	.LFE275:
 6285              	 .section .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6286              	 .align 2
 6287              	 .global XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
 6288              	 .thumb
 6289              	 .thumb_func
 6291              	XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:
 6292              	.LFB276:
1634:../Libraries/XMCLib/src/xmc4_scu.c **** 
1635:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void)
1636:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6293              	 .loc 3 1636 0
 6294              	 .cfi_startproc
 6295              	 
 6296              	 
 6297              	 
 6298 0000 80B4     	 push {r7}
 6299              	.LCFI563:
 6300              	 .cfi_def_cfa_offset 4
 6301              	 .cfi_offset 7,-4
 6302 0002 00AF     	 add r7,sp,#0
 6303              	.LCFI564:
 6304              	 .cfi_def_cfa_register 7
1637:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_HIBERNATE->OSCULSTAT & SCU_HIBERNATE_OSCULSTAT_X1D_Msk);
 6305              	 .loc 3 1637 0
 6306 0004 044B     	 ldr r3,.L431
 6307 0006 9B69     	 ldr r3,[r3,#24]
 6308 0008 03F00103 	 and r3,r3,#1
1638:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6309              	 .loc 3 1638 0
 6310 000c 1846     	 mov r0,r3
 6311 000e BD46     	 mov sp,r7
 6312              	.LCFI565:
 6313              	 .cfi_def_cfa_register 13
 6314              	 
 6315 0010 5DF8047B 	 ldr r7,[sp],#4
 6316              	.LCFI566:
 6317              	 .cfi_restore 7
 6318              	 .cfi_def_cfa_offset 0
 6319 0014 7047     	 bx lr
 6320              	.L432:
 6321 0016 00BF     	 .align 2
 6322              	.L431:
 6323 0018 00430050 	 .word 1342194432
 6324              	 .cfi_endproc
 6325              	.LFE276:
 6327              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator,"ax",%progbits
 6328              	 .align 2
 6329              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 6330              	 .thumb
 6331              	 .thumb_func
 6333              	XMC_SCU_CLOCK_EnableHighPerformanceOscillator:
 6334              	.LFB277:
1639:../Libraries/XMCLib/src/xmc4_scu.c **** 
1640:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable High Precision High Speed oscillator */
1641:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void)
1642:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6335              	 .loc 3 1642 0
 6336              	 .cfi_startproc
 6337              	 
 6338              	 
 6339 0000 B0B5     	 push {r4,r5,r7,lr}
 6340              	.LCFI567:
 6341              	 .cfi_def_cfa_offset 16
 6342              	 .cfi_offset 4,-16
 6343              	 .cfi_offset 5,-12
 6344              	 .cfi_offset 7,-8
 6345              	 .cfi_offset 14,-4
 6346 0002 00AF     	 add r7,sp,#0
 6347              	.LCFI568:
 6348              	 .cfi_def_cfa_register 7
1643:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_PLLPWD_Msk;
 6349              	 .loc 3 1643 0
 6350 0004 0F4A     	 ldr r2,.L434
 6351 0006 0F4B     	 ldr r3,.L434
 6352 0008 5B68     	 ldr r3,[r3,#4]
 6353 000a 23F48033 	 bic r3,r3,#65536
 6354 000e 5360     	 str r3,[r2,#4]
1644:../Libraries/XMCLib/src/xmc4_scu.c **** 
1645:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL = (uint32_t)((SCU_OSC->OSCHPCTRL & ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCH
 6355              	 .loc 3 1645 0
 6356 0010 0D4D     	 ldr r5,.L434+4
 6357 0012 0D4B     	 ldr r3,.L434+4
 6358 0014 5B68     	 ldr r3,[r3,#4]
 6359 0016 23F47024 	 bic r4,r3,#983040
 6360 001a 24F03004 	 bic r4,r4,#48
1646:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 6361              	 .loc 3 1646 0
 6362 001e FFF7FEFF 	 bl OSCHP_GetFrequency
 6363 0022 0246     	 mov r2,r0
 6364 0024 094B     	 ldr r3,.L434+8
 6365 0026 A3FB0223 	 umull r2,r3,r3,r2
 6366 002a 1B0D     	 lsrs r3,r3,#20
 6367 002c 013B     	 subs r3,r3,#1
 6368 002e 1B04     	 lsls r3,r3,#16
1645:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 6369              	 .loc 3 1645 0
 6370 0030 2343     	 orrs r3,r3,r4
 6371 0032 6B60     	 str r3,[r5,#4]
1647:../Libraries/XMCLib/src/xmc4_scu.c **** 
1648:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart OSC Watchdog */
1649:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_OSCRES_Msk;
 6372              	 .loc 3 1649 0
 6373 0034 034A     	 ldr r2,.L434
 6374 0036 034B     	 ldr r3,.L434
 6375 0038 5B68     	 ldr r3,[r3,#4]
 6376 003a 23F40033 	 bic r3,r3,#131072
 6377 003e 5360     	 str r3,[r2,#4]
1650:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6378              	 .loc 3 1650 0
 6379 0040 B0BD     	 pop {r4,r5,r7,pc}
 6380              	.L435:
 6381 0042 00BF     	 .align 2
 6382              	.L434:
 6383 0044 10470050 	 .word 1342195472
 6384 0048 00470050 	 .word 1342195456
 6385 004c 6BCA5F6B 	 .word 1801439851
 6386              	 .cfi_endproc
 6387              	.LFE277:
 6389              	 .section .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable,"ax",%progbits
 6390              	 .align 2
 6391              	 .global XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 6392              	 .thumb
 6393              	 .thumb_func
 6395              	XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:
 6396              	.LFB278:
1651:../Libraries/XMCLib/src/xmc4_scu.c **** 
1652:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void)
1653:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6397              	 .loc 3 1653 0
 6398              	 .cfi_startproc
 6399              	 
 6400              	 
 6401              	 
 6402 0000 80B4     	 push {r7}
 6403              	.LCFI569:
 6404              	 .cfi_def_cfa_offset 4
 6405              	 .cfi_offset 7,-4
 6406 0002 00AF     	 add r7,sp,#0
 6407              	.LCFI570:
 6408              	 .cfi_def_cfa_register 7
1654:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_PLL->PLLSTAT & XMC_SCU_PLL_PLLSTAT_OSC_USABLE) == XMC_SCU_PLL_PLLSTAT_OSC_USABLE);
 6409              	 .loc 3 1654 0
 6410 0004 074B     	 ldr r3,.L438
 6411 0006 1B68     	 ldr r3,[r3]
 6412 0008 03F46073 	 and r3,r3,#896
 6413 000c B3F5607F 	 cmp r3,#896
 6414 0010 0CBF     	 ite eq
 6415 0012 0123     	 moveq r3,#1
 6416 0014 0023     	 movne r3,#0
 6417 0016 DBB2     	 uxtb r3,r3
1655:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6418              	 .loc 3 1655 0
 6419 0018 1846     	 mov r0,r3
 6420 001a BD46     	 mov sp,r7
 6421              	.LCFI571:
 6422              	 .cfi_def_cfa_register 13
 6423              	 
 6424 001c 5DF8047B 	 ldr r7,[sp],#4
 6425              	.LCFI572:
 6426              	 .cfi_restore 7
 6427              	 .cfi_def_cfa_offset 0
 6428 0020 7047     	 bx lr
 6429              	.L439:
 6430 0022 00BF     	 .align 2
 6431              	.L438:
 6432 0024 10470050 	 .word 1342195472
 6433              	 .cfi_endproc
 6434              	.LFE278:
 6436              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator,"ax",%progbits
 6437              	 .align 2
 6438              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillator
 6439              	 .thumb
 6440              	 .thumb_func
 6442              	XMC_SCU_CLOCK_DisableHighPerformanceOscillator:
 6443              	.LFB279:
1656:../Libraries/XMCLib/src/xmc4_scu.c **** 
1657:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable High Precision High Speed oscillator */
1658:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void)
1659:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6444              	 .loc 3 1659 0
 6445              	 .cfi_startproc
 6446              	 
 6447              	 
 6448              	 
 6449 0000 80B4     	 push {r7}
 6450              	.LCFI573:
 6451              	 .cfi_def_cfa_offset 4
 6452              	 .cfi_offset 7,-4
 6453 0002 00AF     	 add r7,sp,#0
 6454              	.LCFI574:
 6455              	 .cfi_def_cfa_register 7
1660:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= (uint32_t)SCU_OSC_OSCHPCTRL_MODE_Msk;
 6456              	 .loc 3 1660 0
 6457 0004 044A     	 ldr r2,.L441
 6458 0006 044B     	 ldr r3,.L441
 6459 0008 5B68     	 ldr r3,[r3,#4]
 6460 000a 43F03003 	 orr r3,r3,#48
 6461 000e 5360     	 str r3,[r2,#4]
1661:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6462              	 .loc 3 1661 0
 6463 0010 BD46     	 mov sp,r7
 6464              	.LCFI575:
 6465              	 .cfi_def_cfa_register 13
 6466              	 
 6467 0012 5DF8047B 	 ldr r7,[sp],#4
 6468              	.LCFI576:
 6469              	 .cfi_restore 7
 6470              	 .cfi_def_cfa_offset 0
 6471 0016 7047     	 bx lr
 6472              	.L442:
 6473              	 .align 2
 6474              	.L441:
 6475 0018 00470050 	 .word 1342195456
 6476              	 .cfi_endproc
 6477              	.LFE279:
 6479              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 6480              	 .align 2
 6481              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
 6482              	 .thumb
 6483              	 .thumb_func
 6485              	XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:
 6486              	.LFB280:
1662:../Libraries/XMCLib/src/xmc4_scu.c **** 
1663:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void)
1664:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6487              	 .loc 3 1664 0
 6488              	 .cfi_startproc
 6489              	 
 6490              	 
 6491              	 
 6492 0000 80B4     	 push {r7}
 6493              	.LCFI577:
 6494              	 .cfi_def_cfa_offset 4
 6495              	 .cfi_offset 7,-4
 6496 0002 00AF     	 add r7,sp,#0
 6497              	.LCFI578:
 6498              	 .cfi_def_cfa_register 7
1665:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 6499              	 .loc 3 1665 0
 6500 0004 044A     	 ldr r2,.L444
 6501 0006 044B     	 ldr r3,.L444
 6502 0008 5B68     	 ldr r3,[r3,#4]
 6503 000a 43F00103 	 orr r3,r3,#1
 6504 000e 5360     	 str r3,[r2,#4]
1666:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6505              	 .loc 3 1666 0
 6506 0010 BD46     	 mov sp,r7
 6507              	.LCFI579:
 6508              	 .cfi_def_cfa_register 13
 6509              	 
 6510 0012 5DF8047B 	 ldr r7,[sp],#4
 6511              	.LCFI580:
 6512              	 .cfi_restore 7
 6513              	 .cfi_def_cfa_offset 0
 6514 0016 7047     	 bx lr
 6515              	.L445:
 6516              	 .align 2
 6517              	.L444:
 6518 0018 00470050 	 .word 1342195456
 6519              	 .cfi_endproc
 6520              	.LFE280:
 6522              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 6523              	 .align 2
 6524              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
 6525              	 .thumb
 6526              	 .thumb_func
 6528              	XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:
 6529              	.LFB281:
1667:../Libraries/XMCLib/src/xmc4_scu.c **** 
1668:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void)
1669:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6530              	 .loc 3 1669 0
 6531              	 .cfi_startproc
 6532              	 
 6533              	 
 6534              	 
 6535 0000 80B4     	 push {r7}
 6536              	.LCFI581:
 6537              	 .cfi_def_cfa_offset 4
 6538              	 .cfi_offset 7,-4
 6539 0002 00AF     	 add r7,sp,#0
 6540              	.LCFI582:
 6541              	 .cfi_def_cfa_register 7
1670:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL &= ~SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 6542              	 .loc 3 1670 0
 6543 0004 044A     	 ldr r2,.L447
 6544 0006 044B     	 ldr r3,.L447
 6545 0008 5B68     	 ldr r3,[r3,#4]
 6546 000a 23F00103 	 bic r3,r3,#1
 6547 000e 5360     	 str r3,[r2,#4]
1671:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6548              	 .loc 3 1671 0
 6549 0010 BD46     	 mov sp,r7
 6550              	.LCFI583:
 6551              	 .cfi_def_cfa_register 13
 6552              	 
 6553 0012 5DF8047B 	 ldr r7,[sp],#4
 6554              	.LCFI584:
 6555              	 .cfi_restore 7
 6556              	 .cfi_def_cfa_offset 0
 6557 0016 7047     	 bx lr
 6558              	.L448:
 6559              	 .align 2
 6560              	.L447:
 6561 0018 00470050 	 .word 1342195456
 6562              	 .cfi_endproc
 6563              	.LFE281:
 6565              	 .section .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6566              	 .align 2
 6567              	 .global XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
 6568              	 .thumb
 6569              	 .thumb_func
 6571              	XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:
 6572              	.LFB282:
1672:../Libraries/XMCLib/src/xmc4_scu.c **** 
1673:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void)
1674:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6573              	 .loc 3 1674 0
 6574              	 .cfi_startproc
 6575              	 
 6576              	 
 6577              	 
 6578 0000 80B4     	 push {r7}
 6579              	.LCFI585:
 6580              	 .cfi_def_cfa_offset 4
 6581              	 .cfi_offset 7,-4
 6582 0002 00AF     	 add r7,sp,#0
 6583              	.LCFI586:
 6584              	 .cfi_def_cfa_register 7
1675:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_OSC->OSCHPSTAT & SCU_OSC_OSCHPSTAT_X1D_Msk);
 6585              	 .loc 3 1675 0
 6586 0004 044B     	 ldr r3,.L451
 6587 0006 1B68     	 ldr r3,[r3]
 6588 0008 03F00103 	 and r3,r3,#1
1676:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6589              	 .loc 3 1676 0
 6590 000c 1846     	 mov r0,r3
 6591 000e BD46     	 mov sp,r7
 6592              	.LCFI587:
 6593              	 .cfi_def_cfa_register 13
 6594              	 
 6595 0010 5DF8047B 	 ldr r7,[sp],#4
 6596              	.LCFI588:
 6597              	 .cfi_restore 7
 6598              	 .cfi_def_cfa_offset 0
 6599 0014 7047     	 bx lr
 6600              	.L452:
 6601 0016 00BF     	 .align 2
 6602              	.L451:
 6603 0018 00470050 	 .word 1342195456
 6604              	 .cfi_endproc
 6605              	.LFE282:
 6607              	 .section .text.XMC_SCU_CLOCK_EnableSystemPll,"ax",%progbits
 6608              	 .align 2
 6609              	 .global XMC_SCU_CLOCK_EnableSystemPll
 6610              	 .thumb
 6611              	 .thumb_func
 6613              	XMC_SCU_CLOCK_EnableSystemPll:
 6614              	.LFB283:
1677:../Libraries/XMCLib/src/xmc4_scu.c **** 
1678:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable main PLL */
1679:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableSystemPll(void)
1680:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6615              	 .loc 3 1680 0
 6616              	 .cfi_startproc
 6617              	 
 6618              	 
 6619              	 
 6620 0000 80B4     	 push {r7}
 6621              	.LCFI589:
 6622              	 .cfi_def_cfa_offset 4
 6623              	 .cfi_offset 7,-4
 6624 0002 00AF     	 add r7,sp,#0
 6625              	.LCFI590:
 6626              	 .cfi_def_cfa_register 7
1681:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 6627              	 .loc 3 1681 0
 6628 0004 054A     	 ldr r2,.L454
 6629 0006 054B     	 ldr r3,.L454
 6630 0008 5B68     	 ldr r3,[r3,#4]
 6631 000a 23F48033 	 bic r3,r3,#65536
 6632 000e 23F00203 	 bic r3,r3,#2
 6633 0012 5360     	 str r3,[r2,#4]
1682:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6634              	 .loc 3 1682 0
 6635 0014 BD46     	 mov sp,r7
 6636              	.LCFI591:
 6637              	 .cfi_def_cfa_register 13
 6638              	 
 6639 0016 5DF8047B 	 ldr r7,[sp],#4
 6640              	.LCFI592:
 6641              	 .cfi_restore 7
 6642              	 .cfi_def_cfa_offset 0
 6643 001a 7047     	 bx lr
 6644              	.L455:
 6645              	 .align 2
 6646              	.L454:
 6647 001c 10470050 	 .word 1342195472
 6648              	 .cfi_endproc
 6649              	.LFE283:
 6651              	 .section .text.XMC_SCU_CLOCK_DisableSystemPll,"ax",%progbits
 6652              	 .align 2
 6653              	 .global XMC_SCU_CLOCK_DisableSystemPll
 6654              	 .thumb
 6655              	 .thumb_func
 6657              	XMC_SCU_CLOCK_DisableSystemPll:
 6658              	.LFB284:
1683:../Libraries/XMCLib/src/xmc4_scu.c **** 
1684:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable main PLL */
1685:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableSystemPll(void)
1686:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6659              	 .loc 3 1686 0
 6660              	 .cfi_startproc
 6661              	 
 6662              	 
 6663              	 
 6664 0000 80B4     	 push {r7}
 6665              	.LCFI593:
 6666              	 .cfi_def_cfa_offset 4
 6667              	 .cfi_offset 7,-4
 6668 0002 00AF     	 add r7,sp,#0
 6669              	.LCFI594:
 6670              	 .cfi_def_cfa_register 7
1687:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 6671              	 .loc 3 1687 0
 6672 0004 054A     	 ldr r2,.L457
 6673 0006 054B     	 ldr r3,.L457
 6674 0008 5B68     	 ldr r3,[r3,#4]
 6675 000a 43F48033 	 orr r3,r3,#65536
 6676 000e 43F00203 	 orr r3,r3,#2
 6677 0012 5360     	 str r3,[r2,#4]
1688:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6678              	 .loc 3 1688 0
 6679 0014 BD46     	 mov sp,r7
 6680              	.LCFI595:
 6681              	 .cfi_def_cfa_register 13
 6682              	 
 6683 0016 5DF8047B 	 ldr r7,[sp],#4
 6684              	.LCFI596:
 6685              	 .cfi_restore 7
 6686              	 .cfi_def_cfa_offset 0
 6687 001a 7047     	 bx lr
 6688              	.L458:
 6689              	 .align 2
 6690              	.L457:
 6691 001c 10470050 	 .word 1342195472
 6692              	 .cfi_endproc
 6693              	.LFE284:
 6695              	 .section .text.XMC_SCU_CLOCK_StartSystemPll,"ax",%progbits
 6696              	 .align 2
 6697              	 .global XMC_SCU_CLOCK_StartSystemPll
 6698              	 .thumb
 6699              	 .thumb_func
 6701              	XMC_SCU_CLOCK_StartSystemPll:
 6702              	.LFB285:
1689:../Libraries/XMCLib/src/xmc4_scu.c **** 
1690:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure main PLL */
1691:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartSystemPll(XMC_SCU_CLOCK_SYSPLLCLKSRC_t source,
1692:../Libraries/XMCLib/src/xmc4_scu.c ****                                   XMC_SCU_CLOCK_SYSPLL_MODE_t mode,
1693:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t pdiv,
1694:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t ndiv,
1695:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t kdiv)
1696:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6703              	 .loc 3 1696 0
 6704              	 .cfi_startproc
 6705              	 
 6706              	 
 6707 0000 80B5     	 push {r7,lr}
 6708              	.LCFI597:
 6709              	 .cfi_def_cfa_offset 8
 6710              	 .cfi_offset 7,-8
 6711              	 .cfi_offset 14,-4
 6712 0002 86B0     	 sub sp,sp,#24
 6713              	.LCFI598:
 6714              	 .cfi_def_cfa_offset 32
 6715 0004 00AF     	 add r7,sp,#0
 6716              	.LCFI599:
 6717              	 .cfi_def_cfa_register 7
 6718 0006 BA60     	 str r2,[r7,#8]
 6719 0008 7B60     	 str r3,[r7,#4]
 6720 000a 0346     	 mov r3,r0
 6721 000c FB81     	 strh r3,[r7,#14]
 6722 000e 0B46     	 mov r3,r1
 6723 0010 7B73     	 strb r3,[r7,#13]
1697:../Libraries/XMCLib/src/xmc4_scu.c **** 
1698:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t vco_frequency; /* Q10.22, max VCO frequency = 520MHz */
1699:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t kdiv_temp;
1700:../Libraries/XMCLib/src/xmc4_scu.c **** 
1701:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemPllClockSource(source);
 6724              	 .loc 3 1701 0
 6725 0012 FB89     	 ldrh r3,[r7,#14]
 6726 0014 1846     	 mov r0,r3
 6727 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemPllClockSource
1702:../Libraries/XMCLib/src/xmc4_scu.c **** 
1703:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)
 6728              	 .loc 3 1703 0
 6729 001a 7B7B     	 ldrb r3,[r7,#13]
 6730 001c 012B     	 cmp r3,#1
 6731 001e 40F08B80 	 bne .L460
1704:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1705:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Calculate initial step to be close to fOFI */
1706:../Libraries/XMCLib/src/xmc4_scu.c ****     if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 6732              	 .loc 3 1706 0
 6733 0022 FB89     	 ldrh r3,[r7,#14]
 6734 0024 002B     	 cmp r3,#0
 6735 0026 09D1     	 bne .L461
1707:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1708:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OSCHP_GetFrequency() / 1000000U) << 22;
 6736              	 .loc 3 1708 0
 6737 0028 FFF7FEFF 	 bl OSCHP_GetFrequency
 6738 002c 0246     	 mov r2,r0
 6739 002e 544B     	 ldr r3,.L471
 6740 0030 A3FB0223 	 umull r2,r3,r3,r2
 6741 0034 9B0C     	 lsrs r3,r3,#18
 6742 0036 9B05     	 lsls r3,r3,#22
 6743 0038 7B61     	 str r3,[r7,#20]
 6744 003a 02E0     	 b .L462
 6745              	.L461:
1709:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1710:../Libraries/XMCLib/src/xmc4_scu.c ****     else
1711:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1712:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OFI_FREQUENCY / 1000000U) << 22;
 6746              	 .loc 3 1712 0
 6747 003c 4FF0C063 	 mov r3,#100663296
 6748 0040 7B61     	 str r3,[r7,#20]
 6749              	.L462:
1713:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1714:../Libraries/XMCLib/src/xmc4_scu.c ****     vco_frequency = ((vco_frequency * ndiv) / pdiv);
 6750              	 .loc 3 1714 0
 6751 0042 7B69     	 ldr r3,[r7,#20]
 6752 0044 7A68     	 ldr r2,[r7,#4]
 6753 0046 02FB03F2 	 mul r2,r2,r3
 6754 004a BB68     	 ldr r3,[r7,#8]
 6755 004c B2FBF3F3 	 udiv r3,r2,r3
 6756 0050 7B61     	 str r3,[r7,#20]
1715:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / (OFI_FREQUENCY / 1000000U)) >> 22;
 6757              	 .loc 3 1715 0
 6758 0052 7B69     	 ldr r3,[r7,#20]
 6759 0054 4B4A     	 ldr r2,.L471+4
 6760 0056 A2FB0323 	 umull r2,r3,r2,r3
 6761 005a 1B09     	 lsrs r3,r3,#4
 6762 005c 9B0D     	 lsrs r3,r3,#22
 6763 005e 3B61     	 str r3,[r7,#16]
1716:../Libraries/XMCLib/src/xmc4_scu.c **** 
1717:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1718:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 6764              	 .loc 3 1718 0
 6765 0060 494A     	 ldr r2,.L471+8
 6766 0062 494B     	 ldr r3,.L471+8
 6767 0064 5B68     	 ldr r3,[r3,#4]
 6768 0066 43F00103 	 orr r3,r3,#1
 6769 006a 5360     	 str r3,[r2,#4]
1719:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 6770              	 .loc 3 1719 0
 6771 006c 00BF     	 nop
 6772              	.L463:
 6773              	 .loc 3 1719 0 is_stmt 0 discriminator 1
 6774 006e 464B     	 ldr r3,.L471+8
 6775 0070 1B68     	 ldr r3,[r3]
 6776 0072 03F00103 	 and r3,r3,#1
 6777 0076 002B     	 cmp r3,#0
 6778 0078 F9D0     	 beq .L463
1720:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1721:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for prescaler mode */
1722:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1723:../Libraries/XMCLib/src/xmc4_scu.c **** 
1724:../Libraries/XMCLib/src/xmc4_scu.c ****     /* disconnect Oscillator from PLL */
1725:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FINDIS_Msk;
 6779              	 .loc 3 1725 0 is_stmt 1
 6780 007a 434A     	 ldr r2,.L471+8
 6781 007c 424B     	 ldr r3,.L471+8
 6782 007e 5B68     	 ldr r3,[r3,#4]
 6783 0080 43F01003 	 orr r3,r3,#16
 6784 0084 5360     	 str r3,[r2,#4]
1726:../Libraries/XMCLib/src/xmc4_scu.c **** 
1727:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Setup divider settings for main PLL */
1728:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~(SCU_PLL_PLLCON1_NDIV_Msk | SCU_PLL_PLLCON1_
 6785              	 .loc 3 1728 0
 6786 0086 4049     	 ldr r1,.L471+8
 6787 0088 3F4B     	 ldr r3,.L471+8
 6788 008a 9A68     	 ldr r2,[r3,#8]
 6789 008c 3F4B     	 ldr r3,.L471+12
 6790 008e 1340     	 ands r3,r3,r2
1729:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6791              	 .loc 3 1729 0
 6792 0090 7A68     	 ldr r2,[r7,#4]
 6793 0092 013A     	 subs r2,r2,#1
 6794 0094 1202     	 lsls r2,r2,#8
 6795 0096 1A43     	 orrs r2,r2,r3
1730:../Libraries/XMCLib/src/xmc4_scu.c ****                                   ((kdiv_temp - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos) |
 6796              	 .loc 3 1730 0
 6797 0098 3B69     	 ldr r3,[r7,#16]
 6798 009a 013B     	 subs r3,r3,#1
 6799 009c 1B04     	 lsls r3,r3,#16
1729:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6800              	 .loc 3 1729 0
 6801 009e 1A43     	 orrs r2,r2,r3
1731:../Libraries/XMCLib/src/xmc4_scu.c ****                                   ((pdiv - 1UL) << SCU_PLL_PLLCON1_PDIV_Pos));
 6802              	 .loc 3 1731 0
 6803 00a0 BB68     	 ldr r3,[r7,#8]
 6804 00a2 013B     	 subs r3,r3,#1
 6805 00a4 1B06     	 lsls r3,r3,#24
1728:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6806              	 .loc 3 1728 0
 6807 00a6 1343     	 orrs r3,r3,r2
 6808 00a8 8B60     	 str r3,[r1,#8]
1732:../Libraries/XMCLib/src/xmc4_scu.c **** 
1733:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Set OSCDISCDIS, OSC clock remains connected to the VCO in case of loss of lock */
1734:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 6809              	 .loc 3 1734 0
 6810 00aa 374A     	 ldr r2,.L471+8
 6811 00ac 364B     	 ldr r3,.L471+8
 6812 00ae 5B68     	 ldr r3,[r3,#4]
 6813 00b0 43F04003 	 orr r3,r3,#64
 6814 00b4 5360     	 str r3,[r2,#4]
1735:../Libraries/XMCLib/src/xmc4_scu.c **** 
1736:../Libraries/XMCLib/src/xmc4_scu.c ****     /* connect Oscillator to PLL */
1737:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FINDIS_Msk;
 6815              	 .loc 3 1737 0
 6816 00b6 344A     	 ldr r2,.L471+8
 6817 00b8 334B     	 ldr r3,.L471+8
 6818 00ba 5B68     	 ldr r3,[r3,#4]
 6819 00bc 23F01003 	 bic r3,r3,#16
 6820 00c0 5360     	 str r3,[r2,#4]
1738:../Libraries/XMCLib/src/xmc4_scu.c **** 
1739:../Libraries/XMCLib/src/xmc4_scu.c ****     /* restart PLL Lock detection */
1740:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_RESLD_Msk;
 6821              	 .loc 3 1740 0
 6822 00c2 314A     	 ldr r2,.L471+8
 6823 00c4 304B     	 ldr r3,.L471+8
 6824 00c6 5B68     	 ldr r3,[r3,#4]
 6825 00c8 43F48023 	 orr r3,r3,#262144
 6826 00cc 5360     	 str r3,[r2,#4]
1741:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 6827              	 .loc 3 1741 0
 6828 00ce 00BF     	 nop
 6829              	.L464:
 6830              	 .loc 3 1741 0 is_stmt 0 discriminator 1
 6831 00d0 2D4B     	 ldr r3,.L471+8
 6832 00d2 1B68     	 ldr r3,[r3]
 6833 00d4 03F00403 	 and r3,r3,#4
 6834 00d8 002B     	 cmp r3,#0
 6835 00da F9D0     	 beq .L464
1742:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1743:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for PLL Lock */
1744:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1745:../Libraries/XMCLib/src/xmc4_scu.c **** 
1746:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to normal mode */
1747:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_VCOBYP_Msk;
 6836              	 .loc 3 1747 0 is_stmt 1
 6837 00dc 2A4A     	 ldr r2,.L471+8
 6838 00de 2A4B     	 ldr r3,.L471+8
 6839 00e0 5B68     	 ldr r3,[r3,#4]
 6840 00e2 23F00103 	 bic r3,r3,#1
 6841 00e6 5360     	 str r3,[r2,#4]
1748:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 6842              	 .loc 3 1748 0
 6843 00e8 00BF     	 nop
 6844              	.L465:
 6845              	 .loc 3 1748 0 is_stmt 0 discriminator 1
 6846 00ea 274B     	 ldr r3,.L471+8
 6847 00ec 1B68     	 ldr r3,[r3]
 6848 00ee 03F00103 	 and r3,r3,#1
 6849 00f2 002B     	 cmp r3,#0
 6850 00f4 F9D1     	 bne .L465
1749:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1750:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for normal mode */
1751:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1752:../Libraries/XMCLib/src/xmc4_scu.c **** 
1753:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Ramp up PLL frequency in steps */
1754:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 60UL) >> 22;
 6851              	 .loc 3 1754 0 is_stmt 1
 6852 00f6 7B69     	 ldr r3,[r7,#20]
 6853 00f8 254A     	 ldr r2,.L471+16
 6854 00fa A2FB0323 	 umull r2,r3,r2,r3
 6855 00fe 5B09     	 lsrs r3,r3,#5
 6856 0100 9B0D     	 lsrs r3,r3,#22
 6857 0102 3B61     	 str r3,[r7,#16]
1755:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 6858              	 .loc 3 1755 0
 6859 0104 3A6A     	 ldr r2,[r7,#32]
 6860 0106 3B69     	 ldr r3,[r7,#16]
 6861 0108 9A42     	 cmp r2,r3
 6862 010a 02D2     	 bcs .L466
1756:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1757:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 6863              	 .loc 3 1757 0
 6864 010c 3869     	 ldr r0,[r7,#16]
 6865 010e FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6866              	.L466:
1758:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1759:../Libraries/XMCLib/src/xmc4_scu.c **** 
1760:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 90UL) >> 22;
 6867              	 .loc 3 1760 0
 6868 0112 7B69     	 ldr r3,[r7,#20]
 6869 0114 5B08     	 lsrs r3,r3,#1
 6870 0116 1F4A     	 ldr r2,.L471+20
 6871 0118 A2FB0323 	 umull r2,r3,r2,r3
 6872 011c 5B09     	 lsrs r3,r3,#5
 6873 011e 9B0D     	 lsrs r3,r3,#22
 6874 0120 3B61     	 str r3,[r7,#16]
1761:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 6875              	 .loc 3 1761 0
 6876 0122 3A6A     	 ldr r2,[r7,#32]
 6877 0124 3B69     	 ldr r3,[r7,#16]
 6878 0126 9A42     	 cmp r2,r3
 6879 0128 02D2     	 bcs .L467
1762:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1763:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 6880              	 .loc 3 1763 0
 6881 012a 3869     	 ldr r0,[r7,#16]
 6882 012c FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6883              	.L467:
1764:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1765:../Libraries/XMCLib/src/xmc4_scu.c **** 
1766:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv);
 6884              	 .loc 3 1766 0
 6885 0130 386A     	 ldr r0,[r7,#32]
 6886 0132 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6887 0136 1CE0     	 b .L468
 6888              	.L460:
1767:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1768:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1769:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1770:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K1DIV_Msk) |
 6889              	 .loc 3 1770 0
 6890 0138 1349     	 ldr r1,.L471+8
 6891 013a 134B     	 ldr r3,.L471+8
 6892 013c 9B68     	 ldr r3,[r3,#8]
 6893 013e 23F07F02 	 bic r2,r3,#127
1771:../Libraries/XMCLib/src/xmc4_scu.c ****                                   ((kdiv - 1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 6894              	 .loc 3 1771 0
 6895 0142 3B6A     	 ldr r3,[r7,#32]
 6896 0144 013B     	 subs r3,r3,#1
1770:../Libraries/XMCLib/src/xmc4_scu.c ****                                   ((kdiv - 1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 6897              	 .loc 3 1770 0
 6898 0146 1343     	 orrs r3,r3,r2
 6899 0148 8B60     	 str r3,[r1,#8]
1772:../Libraries/XMCLib/src/xmc4_scu.c **** 
1773:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_K1RDY_Msk) == 0U)
 6900              	 .loc 3 1773 0
 6901 014a 00BF     	 nop
 6902              	.L469:
 6903              	 .loc 3 1773 0 is_stmt 0 discriminator 1
 6904 014c 0E4B     	 ldr r3,.L471+8
 6905 014e 1B68     	 ldr r3,[r3]
 6906 0150 03F01003 	 and r3,r3,#16
 6907 0154 002B     	 cmp r3,#0
 6908 0156 F9D0     	 beq .L469
1774:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1775:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until K1-divider operates on the configured value  */
1776:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1777:../Libraries/XMCLib/src/xmc4_scu.c **** 
1778:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1779:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 6909              	 .loc 3 1779 0 is_stmt 1
 6910 0158 0B4A     	 ldr r2,.L471+8
 6911 015a 0B4B     	 ldr r3,.L471+8
 6912 015c 5B68     	 ldr r3,[r3,#4]
 6913 015e 43F00103 	 orr r3,r3,#1
 6914 0162 5360     	 str r3,[r2,#4]
1780:../Libraries/XMCLib/src/xmc4_scu.c **** 
1781:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 6915              	 .loc 3 1781 0
 6916 0164 00BF     	 nop
 6917              	.L470:
 6918              	 .loc 3 1781 0 is_stmt 0 discriminator 1
 6919 0166 084B     	 ldr r3,.L471+8
 6920 0168 1B68     	 ldr r3,[r3]
 6921 016a 03F00103 	 and r3,r3,#1
 6922 016e 002B     	 cmp r3,#0
 6923 0170 F9D0     	 beq .L470
 6924              	.L468:
1782:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1783:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for prescaler mode */
1784:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1785:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1786:../Libraries/XMCLib/src/xmc4_scu.c **** 
1787:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_SOSCWDGT_Msk | SCU_TRAP_TRAPCLR_SVCOLCKT_Msk;
 6925              	 .loc 3 1787 0 is_stmt 1
 6926 0172 094B     	 ldr r3,.L471+24
 6927 0174 0522     	 movs r2,#5
 6928 0176 DA60     	 str r2,[r3,#12]
1788:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6929              	 .loc 3 1788 0
 6930 0178 1837     	 adds r7,r7,#24
 6931              	.LCFI600:
 6932              	 .cfi_def_cfa_offset 8
 6933 017a BD46     	 mov sp,r7
 6934              	.LCFI601:
 6935              	 .cfi_def_cfa_register 13
 6936              	 
 6937 017c 80BD     	 pop {r7,pc}
 6938              	.L472:
 6939 017e 00BF     	 .align 2
 6940              	.L471:
 6941 0180 83DE1B43 	 .word 1125899907
 6942 0184 ABAAAAAA 	 .word -1431655765
 6943 0188 10470050 	 .word 1342195472
 6944 018c FF8080F0 	 .word -260013825
 6945 0190 89888888 	 .word -2004318071
 6946 0194 B7600BB6 	 .word -1240768329
 6947 0198 60410050 	 .word 1342194016
 6948              	 .cfi_endproc
 6949              	.LFE285:
 6951              	 .section .text.XMC_SCU_CLOCK_StopSystemPll,"ax",%progbits
 6952              	 .align 2
 6953              	 .global XMC_SCU_CLOCK_StopSystemPll
 6954              	 .thumb
 6955              	 .thumb_func
 6957              	XMC_SCU_CLOCK_StopSystemPll:
 6958              	.LFB286:
1789:../Libraries/XMCLib/src/xmc4_scu.c **** 
1790:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to stop main PLL operation */
1791:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopSystemPll(void)
1792:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6959              	 .loc 3 1792 0
 6960              	 .cfi_startproc
 6961              	 
 6962              	 
 6963              	 
 6964 0000 80B4     	 push {r7}
 6965              	.LCFI602:
 6966              	 .cfi_def_cfa_offset 4
 6967              	 .cfi_offset 7,-4
 6968 0002 00AF     	 add r7,sp,#0
 6969              	.LCFI603:
 6970              	 .cfi_def_cfa_register 7
1793:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_PLLPWD_Msk;
 6971              	 .loc 3 1793 0
 6972 0004 044A     	 ldr r2,.L474
 6973 0006 044B     	 ldr r3,.L474
 6974 0008 5B68     	 ldr r3,[r3,#4]
 6975 000a 43F48033 	 orr r3,r3,#65536
 6976 000e 5360     	 str r3,[r2,#4]
1794:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6977              	 .loc 3 1794 0
 6978 0010 BD46     	 mov sp,r7
 6979              	.LCFI604:
 6980              	 .cfi_def_cfa_register 13
 6981              	 
 6982 0012 5DF8047B 	 ldr r7,[sp],#4
 6983              	.LCFI605:
 6984              	 .cfi_restore 7
 6985              	 .cfi_def_cfa_offset 0
 6986 0016 7047     	 bx lr
 6987              	.L475:
 6988              	 .align 2
 6989              	.L474:
 6990 0018 10470050 	 .word 1342195472
 6991              	 .cfi_endproc
 6992              	.LFE286:
 6994              	 .section .text.XMC_SCU_CLOCK_StepSystemPllFrequency,"ax",%progbits
 6995              	 .align 2
 6996              	 .global XMC_SCU_CLOCK_StepSystemPllFrequency
 6997              	 .thumb
 6998              	 .thumb_func
 7000              	XMC_SCU_CLOCK_StepSystemPllFrequency:
 7001              	.LFB287:
1795:../Libraries/XMCLib/src/xmc4_scu.c **** 
1796:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to step up/down the main PLL frequency */
1797:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StepSystemPllFrequency(uint32_t kdiv)
1798:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7002              	 .loc 3 1798 0
 7003              	 .cfi_startproc
 7004              	 
 7005              	 
 7006 0000 80B5     	 push {r7,lr}
 7007              	.LCFI606:
 7008              	 .cfi_def_cfa_offset 8
 7009              	 .cfi_offset 7,-8
 7010              	 .cfi_offset 14,-4
 7011 0002 82B0     	 sub sp,sp,#8
 7012              	.LCFI607:
 7013              	 .cfi_def_cfa_offset 16
 7014 0004 00AF     	 add r7,sp,#0
 7015              	.LCFI608:
 7016              	 .cfi_def_cfa_register 7
 7017 0006 7860     	 str r0,[r7,#4]
1799:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 7018              	 .loc 3 1799 0
 7019 0008 0B49     	 ldr r1,.L478
 7020 000a 0B4B     	 ldr r3,.L478
 7021 000c 9B68     	 ldr r3,[r3,#8]
 7022 000e 23F4FE02 	 bic r2,r3,#8323072
1800:../Libraries/XMCLib/src/xmc4_scu.c ****                                 ((kdiv - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos));
 7023              	 .loc 3 1800 0
 7024 0012 7B68     	 ldr r3,[r7,#4]
 7025 0014 013B     	 subs r3,r3,#1
 7026 0016 1B04     	 lsls r3,r3,#16
1799:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 7027              	 .loc 3 1799 0
 7028 0018 1343     	 orrs r3,r3,r2
 7029 001a 8B60     	 str r3,[r1,#8]
1801:../Libraries/XMCLib/src/xmc4_scu.c **** 
1802:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_K2RDY_Msk) == 0U)
 7030              	 .loc 3 1802 0
 7031 001c 00BF     	 nop
 7032              	.L477:
 7033              	 .loc 3 1802 0 is_stmt 0 discriminator 1
 7034 001e 064B     	 ldr r3,.L478
 7035 0020 1B68     	 ldr r3,[r3]
 7036 0022 03F02003 	 and r3,r3,#32
 7037 0026 002B     	 cmp r3,#0
 7038 0028 F9D0     	 beq .L477
1803:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1804:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait until K2-divider operates on the configured value  */
1805:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1806:../Libraries/XMCLib/src/xmc4_scu.c **** 
1807:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(50U);
 7039              	 .loc 3 1807 0 is_stmt 1
 7040 002a 3220     	 movs r0,#50
 7041 002c FFF7FEFF 	 bl XMC_SCU_lDelay
1808:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7042              	 .loc 3 1808 0
 7043 0030 0837     	 adds r7,r7,#8
 7044              	.LCFI609:
 7045              	 .cfi_def_cfa_offset 8
 7046 0032 BD46     	 mov sp,r7
 7047              	.LCFI610:
 7048              	 .cfi_def_cfa_register 13
 7049              	 
 7050 0034 80BD     	 pop {r7,pc}
 7051              	.L479:
 7052 0036 00BF     	 .align 2
 7053              	.L478:
 7054 0038 10470050 	 .word 1342195472
 7055              	 .cfi_endproc
 7056              	.LFE287:
 7058              	 .section .text.XMC_SCU_CLOCK_IsSystemPllLocked,"ax",%progbits
 7059              	 .align 2
 7060              	 .global XMC_SCU_CLOCK_IsSystemPllLocked
 7061              	 .thumb
 7062              	 .thumb_func
 7064              	XMC_SCU_CLOCK_IsSystemPllLocked:
 7065              	.LFB288:
1809:../Libraries/XMCLib/src/xmc4_scu.c **** 
1810:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check main PLL is locked or not */
1811:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsSystemPllLocked(void)
1812:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7066              	 .loc 3 1812 0
 7067              	 .cfi_startproc
 7068              	 
 7069              	 
 7070              	 
 7071 0000 80B4     	 push {r7}
 7072              	.LCFI611:
 7073              	 .cfi_def_cfa_offset 4
 7074              	 .cfi_offset 7,-4
 7075 0002 00AF     	 add r7,sp,#0
 7076              	.LCFI612:
 7077              	 .cfi_def_cfa_register 7
1813:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) != 0UL);
 7078              	 .loc 3 1813 0
 7079 0004 064B     	 ldr r3,.L482
 7080 0006 1B68     	 ldr r3,[r3]
 7081 0008 03F00403 	 and r3,r3,#4
 7082 000c 002B     	 cmp r3,#0
 7083 000e 14BF     	 ite ne
 7084 0010 0123     	 movne r3,#1
 7085 0012 0023     	 moveq r3,#0
 7086 0014 DBB2     	 uxtb r3,r3
1814:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7087              	 .loc 3 1814 0
 7088 0016 1846     	 mov r0,r3
 7089 0018 BD46     	 mov sp,r7
 7090              	.LCFI613:
 7091              	 .cfi_def_cfa_register 13
 7092              	 
 7093 001a 5DF8047B 	 ldr r7,[sp],#4
 7094              	.LCFI614:
 7095              	 .cfi_restore 7
 7096              	 .cfi_def_cfa_offset 0
 7097 001e 7047     	 bx lr
 7098              	.L483:
 7099              	 .align 2
 7100              	.L482:
 7101 0020 10470050 	 .word 1342195472
 7102              	 .cfi_endproc
 7103              	.LFE288:
 7105              	 .section .text.XMC_SCU_INTERRUPT_SetEventHandler,"ax",%progbits
 7106              	 .align 2
 7107              	 .global XMC_SCU_INTERRUPT_SetEventHandler
 7108              	 .thumb
 7109              	 .thumb_func
 7111              	XMC_SCU_INTERRUPT_SetEventHandler:
 7112              	.LFB289:
1815:../Libraries/XMCLib/src/xmc4_scu.c **** 
1816:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1817:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to assign the event handler function to be executed on occurrence of the selected event.
1818:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1819:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_INTERRUPT_SetEventHandler(const XMC_SCU_INTERRUPT_EVENT_t event,
1820:../Libraries/XMCLib/src/xmc4_scu.c ****     const XMC_SCU_INTERRUPT_EVENT_HANDLER_t handler)
1821:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7113              	 .loc 3 1821 0
 7114              	 .cfi_startproc
 7115              	 
 7116              	 
 7117              	 
 7118 0000 80B4     	 push {r7}
 7119              	.LCFI615:
 7120              	 .cfi_def_cfa_offset 4
 7121              	 .cfi_offset 7,-4
 7122 0002 85B0     	 sub sp,sp,#20
 7123              	.LCFI616:
 7124              	 .cfi_def_cfa_offset 24
 7125 0004 00AF     	 add r7,sp,#0
 7126              	.LCFI617:
 7127              	 .cfi_def_cfa_register 7
 7128 0006 7860     	 str r0,[r7,#4]
 7129 0008 3960     	 str r1,[r7]
1822:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1823:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status;
1824:../Libraries/XMCLib/src/xmc4_scu.c **** 
1825:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 7130              	 .loc 3 1825 0
 7131 000a 0023     	 movs r3,#0
 7132 000c FB60     	 str r3,[r7,#12]
1826:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7133              	 .loc 3 1826 0
 7134 000e 02E0     	 b .L485
 7135              	.L487:
1827:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1828:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;
 7136              	 .loc 3 1828 0
 7137 0010 FB68     	 ldr r3,[r7,#12]
 7138 0012 0133     	 adds r3,r3,#1
 7139 0014 FB60     	 str r3,[r7,#12]
 7140              	.L485:
1826:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7141              	 .loc 3 1826 0
 7142 0016 FB68     	 ldr r3,[r7,#12]
 7143 0018 7A68     	 ldr r2,[r7,#4]
 7144 001a 22FA03F3 	 lsr r3,r2,r3
 7145 001e 03F00103 	 and r3,r3,#1
 7146 0022 002B     	 cmp r3,#0
 7147 0024 02D1     	 bne .L486
1826:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7148              	 .loc 3 1826 0 is_stmt 0 discriminator 1
 7149 0026 FB68     	 ldr r3,[r7,#12]
 7150 0028 1F2B     	 cmp r3,#31
 7151 002a F1D9     	 bls .L487
 7152              	.L486:
1829:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1830:../Libraries/XMCLib/src/xmc4_scu.c **** 
1831:../Libraries/XMCLib/src/xmc4_scu.c ****   if (index == XMC_SCU_INTERRUPT_EVENT_MAX)
 7153              	 .loc 3 1831 0 is_stmt 1
 7154 002c FB68     	 ldr r3,[r7,#12]
 7155 002e 202B     	 cmp r3,#32
 7156 0030 02D1     	 bne .L488
1832:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1833:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 7157              	 .loc 3 1833 0
 7158 0032 0123     	 movs r3,#1
 7159 0034 FB72     	 strb r3,[r7,#11]
 7160 0036 06E0     	 b .L489
 7161              	.L488:
1834:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1835:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1836:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1837:../Libraries/XMCLib/src/xmc4_scu.c ****     event_handler_list[index] = handler;
 7162              	 .loc 3 1837 0
 7163 0038 0649     	 ldr r1,.L491
 7164 003a FB68     	 ldr r3,[r7,#12]
 7165 003c 3A68     	 ldr r2,[r7]
 7166 003e 41F82320 	 str r2,[r1,r3,lsl#2]
1838:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_OK;
 7167              	 .loc 3 1838 0
 7168 0042 0023     	 movs r3,#0
 7169 0044 FB72     	 strb r3,[r7,#11]
 7170              	.L489:
1839:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1840:../Libraries/XMCLib/src/xmc4_scu.c **** 
1841:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 7171              	 .loc 3 1841 0
 7172 0046 FB7A     	 ldrb r3,[r7,#11]
1842:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7173              	 .loc 3 1842 0
 7174 0048 1846     	 mov r0,r3
 7175 004a 1437     	 adds r7,r7,#20
 7176              	.LCFI618:
 7177              	 .cfi_def_cfa_offset 4
 7178 004c BD46     	 mov sp,r7
 7179              	.LCFI619:
 7180              	 .cfi_def_cfa_register 13
 7181              	 
 7182 004e 5DF8047B 	 ldr r7,[sp],#4
 7183              	.LCFI620:
 7184              	 .cfi_restore 7
 7185              	 .cfi_def_cfa_offset 0
 7186 0052 7047     	 bx lr
 7187              	.L492:
 7188              	 .align 2
 7189              	.L491:
 7190 0054 00000000 	 .word event_handler_list
 7191              	 .cfi_endproc
 7192              	.LFE289:
 7194              	 .section .text.XMC_SCU_IRQHandler,"ax",%progbits
 7195              	 .align 2
 7196              	 .global XMC_SCU_IRQHandler
 7197              	 .thumb
 7198              	 .thumb_func
 7200              	XMC_SCU_IRQHandler:
 7201              	.LFB290:
1843:../Libraries/XMCLib/src/xmc4_scu.c **** 
1844:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1845:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to execute callback functions for multiple events.
1846:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1847:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_IRQHandler(uint32_t sr_num)
1848:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7202              	 .loc 3 1848 0
 7203              	 .cfi_startproc
 7204              	 
 7205              	 
 7206 0000 80B5     	 push {r7,lr}
 7207              	.LCFI621:
 7208              	 .cfi_def_cfa_offset 8
 7209              	 .cfi_offset 7,-8
 7210              	 .cfi_offset 14,-4
 7211 0002 86B0     	 sub sp,sp,#24
 7212              	.LCFI622:
 7213              	 .cfi_def_cfa_offset 32
 7214 0004 00AF     	 add r7,sp,#0
 7215              	.LCFI623:
 7216              	 .cfi_def_cfa_register 7
 7217 0006 7860     	 str r0,[r7,#4]
1849:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1850:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_t event;
1851:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler;
1852:../Libraries/XMCLib/src/xmc4_scu.c **** 
1853:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_UNUSED_ARG(sr_num);
1854:../Libraries/XMCLib/src/xmc4_scu.c **** 
1855:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 7218              	 .loc 3 1855 0
 7219 0008 0023     	 movs r3,#0
 7220 000a 7B61     	 str r3,[r7,#20]
1856:../Libraries/XMCLib/src/xmc4_scu.c ****   event = XMC_SCU_INTERUPT_GetEventStatus();
 7221              	 .loc 3 1856 0
 7222 000c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 7223 0010 3861     	 str r0,[r7,#16]
1857:../Libraries/XMCLib/src/xmc4_scu.c ****   while (index < XMC_SCU_INTERRUPT_EVENT_MAX)
 7224              	 .loc 3 1857 0
 7225 0012 1CE0     	 b .L494
 7226              	.L498:
1858:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1859:../Libraries/XMCLib/src/xmc4_scu.c ****     if ((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) != 0U)
 7227              	 .loc 3 1859 0
 7228 0014 7B69     	 ldr r3,[r7,#20]
 7229 0016 3A69     	 ldr r2,[r7,#16]
 7230 0018 22FA03F3 	 lsr r3,r2,r3
 7231 001c 03F00103 	 and r3,r3,#1
 7232 0020 002B     	 cmp r3,#0
 7233 0022 11D0     	 beq .L495
1860:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1861:../Libraries/XMCLib/src/xmc4_scu.c ****       event_handler = event_handler_list[index];
 7234              	 .loc 3 1861 0
 7235 0024 0D4A     	 ldr r2,.L499
 7236 0026 7B69     	 ldr r3,[r7,#20]
 7237 0028 52F82330 	 ldr r3,[r2,r3,lsl#2]
 7238 002c FB60     	 str r3,[r7,#12]
1862:../Libraries/XMCLib/src/xmc4_scu.c ****       if (event_handler != NULL)
 7239              	 .loc 3 1862 0
 7240 002e FB68     	 ldr r3,[r7,#12]
 7241 0030 002B     	 cmp r3,#0
 7242 0032 01D0     	 beq .L496
1863:../Libraries/XMCLib/src/xmc4_scu.c ****       {
1864:../Libraries/XMCLib/src/xmc4_scu.c ****         (event_handler)();
 7243              	 .loc 3 1864 0
 7244 0034 FB68     	 ldr r3,[r7,#12]
 7245 0036 9847     	 blx r3
 7246              	.L496:
1865:../Libraries/XMCLib/src/xmc4_scu.c ****       }
1866:../Libraries/XMCLib/src/xmc4_scu.c **** 
1867:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_INTERRUPT_ClearEventStatus((uint32_t)(1UL << index));
 7247              	 .loc 3 1867 0
 7248 0038 7B69     	 ldr r3,[r7,#20]
 7249 003a 0122     	 movs r2,#1
 7250 003c 02FA03F3 	 lsl r3,r2,r3
 7251 0040 1846     	 mov r0,r3
 7252 0042 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1868:../Libraries/XMCLib/src/xmc4_scu.c **** 
1869:../Libraries/XMCLib/src/xmc4_scu.c ****       break;
 7253              	 .loc 3 1869 0
 7254 0046 05E0     	 b .L493
 7255              	.L495:
1870:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1871:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;
 7256              	 .loc 3 1871 0
 7257 0048 7B69     	 ldr r3,[r7,#20]
 7258 004a 0133     	 adds r3,r3,#1
 7259 004c 7B61     	 str r3,[r7,#20]
 7260              	.L494:
1857:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 7261              	 .loc 3 1857 0
 7262 004e 7B69     	 ldr r3,[r7,#20]
 7263 0050 1F2B     	 cmp r3,#31
 7264 0052 DFD9     	 bls .L498
 7265              	.L493:
1872:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1873:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7266              	 .loc 3 1873 0
 7267 0054 1837     	 adds r7,r7,#24
 7268              	.LCFI624:
 7269              	 .cfi_def_cfa_offset 8
 7270 0056 BD46     	 mov sp,r7
 7271              	.LCFI625:
 7272              	 .cfi_def_cfa_register 13
 7273              	 
 7274 0058 80BD     	 pop {r7,pc}
 7275              	.L500:
 7276 005a 00BF     	 .align 2
 7277              	.L499:
 7278 005c 00000000 	 .word event_handler_list
 7279              	 .cfi_endproc
 7280              	.LFE290:
 7282              	 .text
 7283              	.Letext0:
 7284              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 7285              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 7286              	 .file 6 "C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 7287              	 .file 7 "C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/CMSIS/Include/cmsis_gcc.h"
 7288              	 .file 8 "C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/CMSIS/Include/core_cm4.h"
 7289              	 .file 9 "C:/work_mari/XMC4800/common-tasks/CAN_NODE/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_scu.c
    {standard input}:20     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 $t
    {standard input}:24     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 XMC_SCU_CLOCK_GetUsbClockSource
    {standard input}:57     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000018 $d
    {standard input}:62     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 $t
    {standard input}:66     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 XMC_SCU_CLOCK_GetWdtClockSource
    {standard input}:98     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000018 $d
    {standard input}:103    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 $t
    {standard input}:107    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_GetExternalOutputClockSource
    {standard input}:141    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:0000001c $d
    {standard input}:146    .text.XMC_SCU_CLOCK_GetECATClockDivider:00000000 $t
    {standard input}:150    .text.XMC_SCU_CLOCK_GetECATClockDivider:00000000 XMC_SCU_CLOCK_GetECATClockDivider
    {standard input}:182    .text.XMC_SCU_CLOCK_GetECATClockDivider:00000018 $d
    {standard input}:187    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:191    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:226    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:232    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 $t
    {standard input}:236    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 XMC_SCU_CLOCK_GetCpuClockFrequency
    {standard input}:268    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000014 $d
    {standard input}:273    .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:277    .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:308    .text.XMC_SCU_GetMirrorStatus:00000014 $d
    {standard input}:313    .bss.event_handler_list:00000000 $d
    {standard input}:316    .bss.event_handler_list:00000000 event_handler_list
    {standard input}:319    .text.XMC_SCU_lDelay:00000000 $t
    {standard input}:323    .text.XMC_SCU_lDelay:00000000 XMC_SCU_lDelay
    {standard input}:385    .text.XMC_SCU_lDelay:0000003c $d
    {standard input}:391    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 $t
    {standard input}:396    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 XMC_SCU_INTERRUPT_EnableEvent
    {standard input}:437    .text.XMC_SCU_INTERRUPT_EnableEvent:00000020 $d
    {standard input}:442    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 $t
    {standard input}:447    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 XMC_SCU_INTERRUPT_DisableEvent
    {standard input}:489    .text.XMC_SCU_INTERRUPT_DisableEvent:00000020 $d
    {standard input}:494    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 $t
    {standard input}:499    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 XMC_SCU_INTERRUPT_TriggerEvent
    {standard input}:540    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000020 $d
    {standard input}:545    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 $t
    {standard input}:550    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 XMC_SCU_INTERUPT_GetEventStatus
    {standard input}:581    .text.XMC_SCU_INTERUPT_GetEventStatus:00000014 $d
    {standard input}:586    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 $t
    {standard input}:591    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 XMC_SCU_INTERRUPT_ClearEventStatus
    {standard input}:629    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000018 $d
    {standard input}:634    .text.XMC_SCU_GetBootMode:00000000 $t
    {standard input}:639    .text.XMC_SCU_GetBootMode:00000000 XMC_SCU_GetBootMode
    {standard input}:671    .text.XMC_SCU_GetBootMode:00000018 $d
    {standard input}:676    .text.XMC_SCU_SetBootMode:00000000 $t
    {standard input}:681    .text.XMC_SCU_SetBootMode:00000000 XMC_SCU_SetBootMode
    {standard input}:720    .text.XMC_SCU_SetBootMode:0000001c $d
    {standard input}:725    .text.XMC_SCU_ReadGPR:00000000 $t
    {standard input}:730    .text.XMC_SCU_ReadGPR:00000000 XMC_SCU_ReadGPR
    {standard input}:772    .text.XMC_SCU_ReadGPR:00000020 $d
    {standard input}:777    .text.XMC_SCU_WriteGPR:00000000 $t
    {standard input}:782    .text.XMC_SCU_WriteGPR:00000000 XMC_SCU_WriteGPR
    {standard input}:825    .text.XMC_SCU_WriteGPR:00000024 $d
    {standard input}:830    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 $t
    {standard input}:835    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 XMC_SCU_EnableOutOfRangeComparator
    {standard input}:883    .text.XMC_SCU_EnableOutOfRangeComparator:00000034 $d
    {standard input}:888    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 $t
    {standard input}:893    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 XMC_SCU_DisableOutOfRangeComparator
    {standard input}:942    .text.XMC_SCU_DisableOutOfRangeComparator:00000034 $d
    {standard input}:947    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 $t
    {standard input}:952    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 XMC_SCU_CalibrateTemperatureSensor
    {standard input}:1000   .text.XMC_SCU_CalibrateTemperatureSensor:00000028 $d
    {standard input}:1005   .text.XMC_SCU_EnableTemperatureSensor:00000000 $t
    {standard input}:1010   .text.XMC_SCU_EnableTemperatureSensor:00000000 XMC_SCU_EnableTemperatureSensor
    {standard input}:1043   .text.XMC_SCU_EnableTemperatureSensor:0000001c $d
    {standard input}:1048   .text.XMC_SCU_DisableTemperatureSensor:00000000 $t
    {standard input}:1053   .text.XMC_SCU_DisableTemperatureSensor:00000000 XMC_SCU_DisableTemperatureSensor
    {standard input}:1086   .text.XMC_SCU_DisableTemperatureSensor:0000001c $d
    {standard input}:1091   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 $t
    {standard input}:1096   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 XMC_SCU_IsTemperatureSensorEnabled
    {standard input}:1133   .text.XMC_SCU_IsTemperatureSensorEnabled:00000024 $d
    {standard input}:1138   .text.XMC_SCU_IsTemperatureSensorReady:00000000 $t
    {standard input}:1143   .text.XMC_SCU_IsTemperatureSensorReady:00000000 XMC_SCU_IsTemperatureSensorReady
    {standard input}:1180   .text.XMC_SCU_IsTemperatureSensorReady:00000024 $d
    {standard input}:1185   .text.XMC_SCU_StartTemperatureMeasurement:00000000 $t
    {standard input}:1190   .text.XMC_SCU_StartTemperatureMeasurement:00000000 XMC_SCU_StartTemperatureMeasurement
    {standard input}:1321   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 XMC_SCU_IsTemperatureSensorBusy
    {standard input}:1251   .text.XMC_SCU_StartTemperatureMeasurement:00000048 $d
    {standard input}:1256   .text.XMC_SCU_GetTemperatureMeasurement:00000000 $t
    {standard input}:1261   .text.XMC_SCU_GetTemperatureMeasurement:00000000 XMC_SCU_GetTemperatureMeasurement
    {standard input}:1311   .text.XMC_SCU_GetTemperatureMeasurement:00000034 $d
    {standard input}:1316   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 $t
    {standard input}:1358   .text.XMC_SCU_IsTemperatureSensorBusy:00000024 $d
    {standard input}:1363   .text.XMC_SCU_WriteToRetentionMemory:00000000 $t
    {standard input}:1368   .text.XMC_SCU_WriteToRetentionMemory:00000000 XMC_SCU_WriteToRetentionMemory
    {standard input}:1429   .text.XMC_SCU_WriteToRetentionMemory:00000048 $d
    {standard input}:1434   .text.XMC_SCU_ReadFromRetentionMemory:00000000 $t
    {standard input}:1439   .text.XMC_SCU_ReadFromRetentionMemory:00000000 XMC_SCU_ReadFromRetentionMemory
    {standard input}:1499   .text.XMC_SCU_ReadFromRetentionMemory:00000044 $d
    {standard input}:1504   .text.XMC_SCU_CLOCK_Init:00000000 $t
    {standard input}:1509   .text.XMC_SCU_CLOCK_Init:00000000 XMC_SCU_CLOCK_Init
    {standard input}:3201   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 XMC_SCU_CLOCK_SetSystemClockSource
    {standard input}:5012   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 XMC_SCU_HIB_EnableHibernateDomain
    {standard input}:6050   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillator
    {standard input}:6003   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 XMC_SCU_CLOCK_IsLowPowerOscillatorStable
    {standard input}:3543   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 XMC_SCU_HIB_SetStandbyClockSource
    {standard input}:4813   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 XMC_SCU_CLOCK_SetBackupClockCalibrationMode
    {standard input}:3608   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 XMC_SCU_CLOCK_SetSystemClockDivider
    {standard input}:3718   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 XMC_SCU_CLOCK_SetCpuClockDivider
    {standard input}:3663   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 XMC_SCU_CLOCK_SetCcuClockDivider
    {standard input}:3773   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 XMC_SCU_CLOCK_SetPeripheralClockDivider
    {standard input}:6333   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillator
    {standard input}:6395   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
    {standard input}:6657   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 XMC_SCU_CLOCK_DisableSystemPll
    {standard input}:6613   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 XMC_SCU_CLOCK_EnableSystemPll
    {standard input}:6701   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 XMC_SCU_CLOCK_StartSystemPll
    {standard input}:1676   .text.XMC_SCU_TRAP_Enable:00000000 $t
    {standard input}:1681   .text.XMC_SCU_TRAP_Enable:00000000 XMC_SCU_TRAP_Enable
    {standard input}:1723   .text.XMC_SCU_TRAP_Enable:00000020 $d
    {standard input}:1728   .text.XMC_SCU_TRAP_Disable:00000000 $t
    {standard input}:1733   .text.XMC_SCU_TRAP_Disable:00000000 XMC_SCU_TRAP_Disable
    {standard input}:1774   .text.XMC_SCU_TRAP_Disable:00000020 $d
    {standard input}:1779   .text.XMC_SCU_TRAP_GetStatus:00000000 $t
    {standard input}:1784   .text.XMC_SCU_TRAP_GetStatus:00000000 XMC_SCU_TRAP_GetStatus
    {standard input}:1815   .text.XMC_SCU_TRAP_GetStatus:00000014 $d
    {standard input}:1820   .text.XMC_SCU_TRAP_Trigger:00000000 $t
    {standard input}:1825   .text.XMC_SCU_TRAP_Trigger:00000000 XMC_SCU_TRAP_Trigger
    {standard input}:1863   .text.XMC_SCU_TRAP_Trigger:00000018 $d
    {standard input}:1868   .text.XMC_SCU_TRAP_ClearStatus:00000000 $t
    {standard input}:1873   .text.XMC_SCU_TRAP_ClearStatus:00000000 XMC_SCU_TRAP_ClearStatus
    {standard input}:1911   .text.XMC_SCU_TRAP_ClearStatus:00000018 $d
    {standard input}:1916   .text.XMC_SCU_PARITY_ClearStatus:00000000 $t
    {standard input}:1921   .text.XMC_SCU_PARITY_ClearStatus:00000000 XMC_SCU_PARITY_ClearStatus
    {standard input}:1962   .text.XMC_SCU_PARITY_ClearStatus:00000020 $d
    {standard input}:1967   .text.XMC_SCU_PARITY_GetStatus:00000000 $t
    {standard input}:1972   .text.XMC_SCU_PARITY_GetStatus:00000000 XMC_SCU_PARITY_GetStatus
    {standard input}:2003   .text.XMC_SCU_PARITY_GetStatus:00000014 $d
    {standard input}:2008   .text.XMC_SCU_PARITY_Enable:00000000 $t
    {standard input}:2013   .text.XMC_SCU_PARITY_Enable:00000000 XMC_SCU_PARITY_Enable
    {standard input}:2054   .text.XMC_SCU_PARITY_Enable:00000020 $d
    {standard input}:2059   .text.XMC_SCU_PARITY_Disable:00000000 $t
    {standard input}:2064   .text.XMC_SCU_PARITY_Disable:00000000 XMC_SCU_PARITY_Disable
    {standard input}:2106   .text.XMC_SCU_PARITY_Disable:00000020 $d
    {standard input}:2111   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 $t
    {standard input}:2116   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 XMC_SCU_PARITY_EnableTrapGeneration
    {standard input}:2157   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000020 $d
    {standard input}:2162   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 $t
    {standard input}:2167   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 XMC_SCU_PARITY_DisableTrapGeneration
    {standard input}:2209   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000020 $d
    {standard input}:2214   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 $t
    {standard input}:2219   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 XMC_SCU_INTERRUPT_EnableNmiRequest
    {standard input}:2260   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000020 $d
    {standard input}:2265   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 $t
    {standard input}:2270   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 XMC_SCU_INTERRUPT_DisableNmiRequest
    {standard input}:2312   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000020 $d
    {standard input}:2317   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 $t
    {standard input}:2322   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 XMC_SCU_RESET_AssertPeripheralReset
    {standard input}:2375   .text.XMC_SCU_RESET_AssertPeripheralReset:00000034 $d
    {standard input}:2380   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 $t
    {standard input}:2385   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 XMC_SCU_RESET_DeassertPeripheralReset
    {standard input}:2438   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000034 $d
    {standard input}:2443   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 $t
    {standard input}:2448   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 XMC_SCU_RESET_IsPeripheralResetAsserted
    {standard input}:2508   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000044 $d
    {standard input}:2513   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 $t
    {standard input}:2518   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockFrequency
    {standard input}:2611   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
    {standard input}:2601   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000078 $d
    {standard input}:2606   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 $t
    {standard input}:2658   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000028 $d
    {standard input}:2664   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 $t
    {standard input}:2669   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbPllClockFrequency
    {standard input}:2733   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000050 $d
    {standard input}:2738   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 $t
    {standard input}:2743   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 XMC_SCU_CLOCK_GetCcuClockFrequency
    {standard input}:2785   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000028 $d
    {standard input}:2790   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 $t
    {standard input}:2795   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbClockFrequency
    {standard input}:2857   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000044 $d
    {standard input}:2862   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 $t
    {standard input}:2867   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 XMC_SCU_CLOCK_GetEbuClockFrequency
    {standard input}:2909   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000024 $d
    {standard input}:2914   .text.XMC_SCU_CLOCK_GetECATClockFrequency:00000000 $t
    {standard input}:2919   .text.XMC_SCU_CLOCK_GetECATClockFrequency:00000000 XMC_SCU_CLOCK_GetECATClockFrequency
    {standard input}:2970   .text.XMC_SCU_CLOCK_GetECATClockFrequency:00000038 $d
    {standard input}:2975   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 $t
    {standard input}:2980   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 XMC_SCU_CLOCK_GetWdtClockFrequency
    {standard input}:3051   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000050 $d
    {standard input}:3057   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 $t
    {standard input}:3062   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 XMC_SCU_CLOCK_GetExternalOutputClockFrequency
    {standard input}:3151   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:0000006c $d
    {standard input}:3157   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 $t
    {standard input}:3162   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 XMC_SCU_CLOCK_GetPeripheralClockFrequency
    {standard input}:3191   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:0000001c $d
    {standard input}:3196   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 $t
    {standard input}:3243   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000024 $d
    {standard input}:3248   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 $t
    {standard input}:3253   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 XMC_SCU_CLOCK_SetUsbClockSource
    {standard input}:3295   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000024 $d
    {standard input}:3300   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 $t
    {standard input}:3305   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 XMC_SCU_CLOCK_SetWdtClockSource
    {standard input}:3347   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000024 $d
    {standard input}:3352   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 $t
    {standard input}:3357   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_SetExternalOutputClockSource
    {standard input}:3402   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000024 $d
    {standard input}:3407   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 $t
    {standard input}:3412   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 XMC_SCU_CLOCK_SetSystemPllClockSource
    {standard input}:3468   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:0000003c $d
    {standard input}:3473   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 $t
    {standard input}:3478   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 XMC_SCU_HIB_SetRtcClockSource
    {standard input}:3532   .text.XMC_SCU_HIB_SetRtcClockSource:00000034 $d
    {standard input}:3538   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 $t
    {standard input}:3597   .text.XMC_SCU_HIB_SetStandbyClockSource:00000034 $d
    {standard input}:3603   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 $t
    {standard input}:3653   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000024 $d
    {standard input}:3658   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 $t
    {standard input}:3708   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000024 $d
    {standard input}:3713   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 $t
    {standard input}:3763   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000024 $d
    {standard input}:3768   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 $t
    {standard input}:3818   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000024 $d
    {standard input}:3823   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 $t
    {standard input}:3828   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 XMC_SCU_CLOCK_SetUsbClockDivider
    {standard input}:3873   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000024 $d
    {standard input}:3878   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 $t
    {standard input}:3883   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 XMC_SCU_CLOCK_SetEbuClockDivider
    {standard input}:3928   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000024 $d
    {standard input}:3933   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 $t
    {standard input}:3938   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 XMC_SCU_CLOCK_SetWdtClockDivider
    {standard input}:3983   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000024 $d
    {standard input}:3988   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 $t
    {standard input}:3993   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 XMC_SCU_CLOCK_SetExternalOutputClockDivider
    {standard input}:4040   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:0000002c $d
    {standard input}:4045   .text.XMC_SCU_CLOCK_SetECATClockDivider:00000000 $t
    {standard input}:4050   .text.XMC_SCU_CLOCK_SetECATClockDivider:00000000 XMC_SCU_CLOCK_SetECATClockDivider
    {standard input}:4095   .text.XMC_SCU_CLOCK_SetECATClockDivider:00000024 $d
    {standard input}:4100   .text.XMC_SCU_CLOCK_EnableClock:00000000 $t
    {standard input}:4105   .text.XMC_SCU_CLOCK_EnableClock:00000000 XMC_SCU_CLOCK_EnableClock
    {standard input}:4144   .text.XMC_SCU_CLOCK_EnableClock:0000001c $d
    {standard input}:4149   .text.XMC_SCU_CLOCK_DisableClock:00000000 $t
    {standard input}:4154   .text.XMC_SCU_CLOCK_DisableClock:00000000 XMC_SCU_CLOCK_DisableClock
    {standard input}:4193   .text.XMC_SCU_CLOCK_DisableClock:0000001c $d
    {standard input}:4198   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 $t
    {standard input}:4203   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 XMC_SCU_CLOCK_IsClockEnabled
    {standard input}:4249   .text.XMC_SCU_CLOCK_IsClockEnabled:00000028 $d
    {standard input}:4254   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 $t
    {standard input}:4259   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 XMC_SCU_CLOCK_GatePeripheralClock
    {standard input}:4312   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000034 $d
    {standard input}:4317   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 $t
    {standard input}:4322   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 XMC_SCU_CLOCK_UngatePeripheralClock
    {standard input}:4375   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000034 $d
    {standard input}:4380   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 $t
    {standard input}:4385   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 XMC_SCU_CLOCK_IsPeripheralClockGated
    {standard input}:4445   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000044 $d
    {standard input}:4450   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 $t
    {standard input}:4455   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 XMC_SCU_POWER_GetEVR13Voltage
    {standard input}:4492   .text.XMC_SCU_POWER_GetEVR13Voltage:00000028 $d
    {standard input}:4498   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 $t
    {standard input}:4503   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 XMC_SCU_POWER_GetEVR33Voltage
    {standard input}:4541   .text.XMC_SCU_POWER_GetEVR33Voltage:0000002c $d
    {standard input}:4547   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 $t
    {standard input}:4552   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 XMC_SCU_CLOCK_EnableUsbPll
    {standard input}:4586   .text.XMC_SCU_CLOCK_EnableUsbPll:0000001c $d
    {standard input}:4591   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 $t
    {standard input}:4596   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 XMC_SCU_CLOCK_DisableUsbPll
    {standard input}:4630   .text.XMC_SCU_CLOCK_DisableUsbPll:0000001c $d
    {standard input}:4635   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 $t
    {standard input}:4640   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 XMC_SCU_CLOCK_StartUsbPll
    {standard input}:4760   .text.XMC_SCU_CLOCK_StartUsbPll:000000ac $d
    {standard input}:4766   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 $t
    {standard input}:4771   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 XMC_SCU_CLOCK_StopUsbPll
    {standard input}:4802   .text.XMC_SCU_CLOCK_StopUsbPll:00000014 $d
    {standard input}:4808   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 $t
    {standard input}:4873   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000048 $d
    {standard input}:4878   .text.XMC_SCU_POWER_EnableUsb:00000000 $t
    {standard input}:4883   .text.XMC_SCU_POWER_EnableUsb:00000000 XMC_SCU_POWER_EnableUsb
    {standard input}:4914   .text.XMC_SCU_POWER_EnableUsb:00000014 $d
    {standard input}:4919   .text.XMC_SCU_POWER_DisableUsb:00000000 $t
    {standard input}:4924   .text.XMC_SCU_POWER_DisableUsb:00000000 XMC_SCU_POWER_DisableUsb
    {standard input}:4955   .text.XMC_SCU_POWER_DisableUsb:00000014 $d
    {standard input}:4960   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 $t
    {standard input}:4965   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 XMC_SCU_CLOCK_IsUsbPllLocked
    {standard input}:5002   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000020 $d
    {standard input}:5007   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 $t
    {standard input}:5079   .text.XMC_SCU_HIB_EnableHibernateDomain:00000050 $d
    {standard input}:5085   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 $t
    {standard input}:5090   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 XMC_SCU_HIB_DisableHibernateDomain
    {standard input}:5125   .text.XMC_SCU_HIB_DisableHibernateDomain:0000001c $d
    {standard input}:5131   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 $t
    {standard input}:5136   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 XMC_SCU_HIB_IsHibernateDomainEnabled
    {standard input}:5187   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000034 $d
    {standard input}:5193   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 $t
    {standard input}:5198   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 XMC_SCU_HIB_EnableInternalSlowClock
    {standard input}:5240   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000028 $d
    {standard input}:5246   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 $t
    {standard input}:5251   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 XMC_SCU_HIB_DisableInternalSlowClock
    {standard input}:5293   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000028 $d
    {standard input}:5299   .text.XMC_SCU_HIB_ClearEventStatus:00000000 $t
    {standard input}:5304   .text.XMC_SCU_HIB_ClearEventStatus:00000000 XMC_SCU_HIB_ClearEventStatus
    {standard input}:5351   .text.XMC_SCU_HIB_ClearEventStatus:00000028 $d
    {standard input}:5357   .text.XMC_SCU_HIB_TriggerEvent:00000000 $t
    {standard input}:5362   .text.XMC_SCU_HIB_TriggerEvent:00000000 XMC_SCU_HIB_TriggerEvent
    {standard input}:5409   .text.XMC_SCU_HIB_TriggerEvent:00000028 $d
    {standard input}:5415   .text.XMC_SCU_HIB_EnableEvent:00000000 $t
    {standard input}:5420   .text.XMC_SCU_HIB_EnableEvent:00000000 XMC_SCU_HIB_EnableEvent
    {standard input}:5470   .text.XMC_SCU_HIB_EnableEvent:00000030 $d
    {standard input}:5476   .text.XMC_SCU_HIB_DisableEvent:00000000 $t
    {standard input}:5481   .text.XMC_SCU_HIB_DisableEvent:00000000 XMC_SCU_HIB_DisableEvent
    {standard input}:5532   .text.XMC_SCU_HIB_DisableEvent:00000030 $d
    {standard input}:5538   .text.XMC_SCU_HIB_EnterHibernateState:00000000 $t
    {standard input}:5543   .text.XMC_SCU_HIB_EnterHibernateState:00000000 XMC_SCU_HIB_EnterHibernateState
    {standard input}:5585   .text.XMC_SCU_HIB_EnterHibernateState:00000028 $d
    {standard input}:5591   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 $t
    {standard input}:5596   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 XMC_SCU_HIB_EnterHibernateStateEx
    {standard input}:5635   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 $t
    {standard input}:5640   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 XMC_SCU_HIB_SetWakeupTriggerInput
    {standard input}:5703   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000044 $d
    {standard input}:5709   .text.XMC_SCU_HIB_SetPinMode:00000000 $t
    {standard input}:5714   .text.XMC_SCU_HIB_SetPinMode:00000000 XMC_SCU_HIB_SetPinMode
    {standard input}:5781   .text.XMC_SCU_HIB_SetPinMode:0000004c $d
    {standard input}:5787   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 $t
    {standard input}:5792   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 XMC_SCU_HIB_SetPinOutputLevel
    {standard input}:5855   .text.XMC_SCU_HIB_SetPinOutputLevel:0000004c $d
    {standard input}:5861   .text.XMC_SCU_HIB_SetInput0:00000000 $t
    {standard input}:5866   .text.XMC_SCU_HIB_SetInput0:00000000 XMC_SCU_HIB_SetInput0
    {standard input}:5929   .text.XMC_SCU_HIB_SetInput0:00000044 $d
    {standard input}:5935   .text.XMC_SCU_HIB_SetSR0Input:00000000 $t
    {standard input}:5940   .text.XMC_SCU_HIB_SetSR0Input:00000000 XMC_SCU_HIB_SetSR0Input
    {standard input}:5992   .text.XMC_SCU_HIB_SetSR0Input:00000034 $d
    {standard input}:5998   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 $t
    {standard input}:6040   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000020 $d
    {standard input}:6045   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 $t
    {standard input}:6121   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:0000006c $d
    {standard input}:6126   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 $t
    {standard input}:6131   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillator
    {standard input}:6173   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000028 $d
    {standard input}:6179   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6184   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6226   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000028 $d
    {standard input}:6232   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6237   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6280   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:0000002c $d
    {standard input}:6286   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:6291   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
    {standard input}:6323   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:6328   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 $t
    {standard input}:6383   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000044 $d
    {standard input}:6390   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 $t
    {standard input}:6432   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000024 $d
    {standard input}:6437   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 $t
    {standard input}:6442   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillator
    {standard input}:6475   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000018 $d
    {standard input}:6480   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6485   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:6518   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:6523   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6528   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:6561   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:6566   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:6571   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
    {standard input}:6603   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:6608   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 $t
    {standard input}:6647   .text.XMC_SCU_CLOCK_EnableSystemPll:0000001c $d
    {standard input}:6652   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 $t
    {standard input}:6691   .text.XMC_SCU_CLOCK_DisableSystemPll:0000001c $d
    {standard input}:6696   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 $t
    {standard input}:7000   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 XMC_SCU_CLOCK_StepSystemPllFrequency
    {standard input}:6941   .text.XMC_SCU_CLOCK_StartSystemPll:00000180 $d
    {standard input}:6952   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 $t
    {standard input}:6957   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 XMC_SCU_CLOCK_StopSystemPll
    {standard input}:6990   .text.XMC_SCU_CLOCK_StopSystemPll:00000018 $d
    {standard input}:6995   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 $t
    {standard input}:7054   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000038 $d
    {standard input}:7059   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 $t
    {standard input}:7064   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 XMC_SCU_CLOCK_IsSystemPllLocked
    {standard input}:7101   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000020 $d
    {standard input}:7106   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 $t
    {standard input}:7111   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 XMC_SCU_INTERRUPT_SetEventHandler
    {standard input}:7190   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000054 $d
    {standard input}:7195   .text.XMC_SCU_IRQHandler:00000000 $t
    {standard input}:7200   .text.XMC_SCU_IRQHandler:00000000 XMC_SCU_IRQHandler
    {standard input}:7278   .text.XMC_SCU_IRQHandler:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
SystemCoreClockUpdate
OSCHP_GetFrequency
