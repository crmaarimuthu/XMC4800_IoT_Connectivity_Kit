   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "dma_ch_conf.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DMA_CH_SetSourceAddress,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_DMA_CH_SetSourceAddress:
  25              	.LFB140:
  26              	 .file 1 "C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc/xmc_dma.h"
   1:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
   2:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   3:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @date 2018-09-18
   4:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
   5:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @cond
   6:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *****************************************************************************
   7:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
   9:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * All rights reserved.
  11:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  12:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  14:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * do so, all subject to the following:
  20:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  21:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * a source language processor.
  27:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  28:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  36:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * at XMCSupport@infineon.com.
  39:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *****************************************************************************
  40:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  41:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Change History
  42:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * --------------
  43:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  44:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  45:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  46:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  47:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  48:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  49:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  50:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  51:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  52:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  53:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  54:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  55:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 2016-10-28:
  56:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Fix documentation on maximum block size
  57:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  58:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 2017-09-28:
  59:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Improved documentation and added XMC_DMA_CH_EnableFifo() and XMC_DMA_CH_DisableFifo()
  60:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  61:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 2018-09-18:
  62:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Added XMC_DMA_CH_GetTransferredData()
  63:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  64:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @endcond
  65:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
  66:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
  67:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  68:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  69:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
  70:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  71:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  72:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  73:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
  74:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  75:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
  76:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  77:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
  78:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  79:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
  80:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
  81:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  82:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  83:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
  84:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
  85:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
  86:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  87:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  88:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  89:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  90:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  91:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  92:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  93:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  94:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  95:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  96:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
  97:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  98:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  99:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
 100:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 101:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 102:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 103:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * MACROS
 104:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 105:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 106:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
 107:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
 108:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
 109:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 110:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 111:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
 112:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 113:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 114:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 115:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 116:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 117:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ENUMS
 118:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 119:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 120:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 121:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 122:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 123:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 124:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 125:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 126:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 127:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 128:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 129:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 130:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 131:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 132:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 133:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 134:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 135:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 136:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 137:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 138:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 139:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 140:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 141:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 142:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 143:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 144:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 145:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 146:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 147:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 148:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 149:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 150:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 151:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 152:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 153:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 154:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 155:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 156:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 157:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 158:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 159:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 160:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 161:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 162:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 163:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 164:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 165:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 166:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 167:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 168:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 169:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 170:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 171:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 172:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 173:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 174:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 175:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 176:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 177:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 178:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 179:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 180:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 181:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 182:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 183:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 184:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 185:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 186:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 187:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 188:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 189:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 190:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 191:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 192:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 193:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 194:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 195:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 196:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 197:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 198:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 199:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 200:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 201:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 202:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 203:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 204:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 205:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 206:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 207:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 208:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 209:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 210:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 211:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 212:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 213:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 214:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 215:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 216:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 217:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 218:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 219:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 220:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 221:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 222:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 223:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 224:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 225:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 226:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 227:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 228:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 229:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 230:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 231:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA events
 232:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 233:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 234:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 235:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 236:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 237:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 238:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 239:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 240:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 241:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 242:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 243:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Transaction types
 244:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 245:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 246:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 247:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 248:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 249:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 250:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 251:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 252:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 253:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 254:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 255:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 256:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 257:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 258:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 259:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 260:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 261:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 262:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 263:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 264:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 265:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 266:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 267:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 268:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 269:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 270:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 271:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 272:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 273:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 274:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 275:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct GPDMA_CH
 276:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 277:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 278:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 279:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 280:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 281:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 282:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 283:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 284:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 285:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 286:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 287:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 288:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 289:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 290:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 291:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 292:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 293:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 294:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 295:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 296:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 297:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 298:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 299:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 300:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 301:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 302:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 303:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 304:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 305:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 306:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 307:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 308:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA
 309:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 310:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 311:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 312:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 313:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 314:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 315:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 316:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 317:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 318:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 319:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 320:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 321:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 322:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 323:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 324:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 325:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 326:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 327:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 328:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 329:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 330:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 331:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 332:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 333:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 334:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 335:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 336:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 337:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 338:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 339:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 340:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 341:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 342:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #pragma push
 343:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #pragma anon_unions
 344:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 345:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #pragma warning 586
 346:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 347:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 348:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 349:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 350:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 351:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 352:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 353:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 354:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 355:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 356:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 357:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   union
 358:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   {
 359:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 360:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     {
 361:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 362:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 363:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 364:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 365:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 366:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 367:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 368:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 369:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 370:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 371:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 372:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 373:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 374:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 375:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 376:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     };
 377:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 378:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   };
 379:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 380:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 381:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 382:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 383:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 384:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 385:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 386:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 387:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 388:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 389:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 390:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 391:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   union
 392:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   {
 393:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 394:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 395:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     {
 396:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 397:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 398:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 399:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 400:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 401:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 402:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 403:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 404:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 405:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;
 406:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 407:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;
 408:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     };
 409:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   };
 410:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 411:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 412:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 413:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 414:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 415:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   union
 416:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   {
 417:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 418:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 419:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     {
 420:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 421:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 422:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     };
 423:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   };
 424:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 425:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   union
 426:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   {
 427:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 428:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 429:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     {
 430:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 431:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 432:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****     };
 433:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   };
 434:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 435:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [max. 
 436:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type (:: XMC_DMA_CH_TRANSFER_TYPE
 437:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority (::XMC_DMA_CH_PRIORITY_t)
 438:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface (:: XMC_DMA_C
 439:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request. See xmc_dma_map.h *
 440:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface (:: XMC_
 441:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request. See xmc_dma_ma
 442:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 443:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 444:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 445:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 446:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #pragma pop
 447:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 448:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #pragma warning restore
 449:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 450:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 451:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 452:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 453:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 454:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 455:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 456:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 457:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 458:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 459:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 460:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 461:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** extern "C" {
 462:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 463:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 464:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 465:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 466:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 467:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 468:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 469:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 470:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 471:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 472:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 473:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral.
 474:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 475:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 476:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 477:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 478:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 479:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 480:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 481:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 482:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 483:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 484:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 485:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 486:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 487:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 488:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 489:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 490:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 491:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 492:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 493:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 494:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 495:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 496:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 497:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 498:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 499:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 500:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 501:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 502:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 503:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 504:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 505:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 506:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 507:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 508:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 509:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 510:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 511:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 512:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 513:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 514:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 515:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 516:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * is enabled.
 517:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 518:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 519:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 520:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 521:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 522:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 523:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 524:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 525:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 526:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 527:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 528:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 529:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 530:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 531:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 532:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 533:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 534:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 535:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 536:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 537:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 538:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 539:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 540:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 541:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 542:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
 543:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 544:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 545:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 546:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 547:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 548:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 549:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 550:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 551:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 552:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 553:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 554:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 555:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 556:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 557:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
 558:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 559:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 560:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 561:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 562:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 563:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 564:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 565:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 566:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 567:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 568:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 569:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 570:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 571:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 572:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 573:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 574:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 575:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 576:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 577:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 578:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 579:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 580:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 581:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 582:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 583:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 584:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 585:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 586:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 587:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ignored.
 588:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 589:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 590:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 591:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 592:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 593:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 594:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 595:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 596:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 597:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 598:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 599:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 600:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 601:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 602:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 603:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 604:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 605:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 606:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 607:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 608:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 609:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 610:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 611:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 612:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 613:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 614:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 615:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 616:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 617:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 618:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 619:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 620:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 621:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 622:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 623:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 624:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 625:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 626:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 627:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 628:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 629:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 630:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param line Which DLR (DMA line router) line should the function use?
 631:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param peripheral Which hardware peripheral is the GPDMA communicating with?
 632:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 633:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 634:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 635:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable request line <br>
 636:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 637:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 638:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function enables a DLR (DMA line router) line and selects a service request
 639:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * source, resulting in the trigger of a DMA transfer. <br>
 640:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 641:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 642:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The DLR is used for a DMA transfer typically involving a peripheral; For example,
 643:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * the ADC peripheral may use the DLR in hardware handshaking mode to transfer
 644:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ADC conversion values to a destination memory block.
 645:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 646:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral);
 647:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 648:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 649:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 650:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param line Which DLR (DMA line router) line should the function use?
 651:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 652:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 653:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 654:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable request line <br>
 655:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 656:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 657:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function disables a DLR (DMA line router) line by clearing appropriate bits
 658:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * in the LNEN register. <br>
 659:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 660:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line);
 661:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 662:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 663:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 664:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param line Which DLR (DMA line router) line should the function use?
 665:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 666:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 667:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 668:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Clear request line <br>
 669:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 670:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 671:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function clears a DLR (DMA line router) request line. <br>
 672:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 673:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line);
 674:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 675:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 676:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 677:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param line The line for which the overrun status is requested
 678:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool "true" if overrun occured, "false" otherwise
 679:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 680:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 681:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Get overrun status of a DLR line <br>
 682:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 683:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 684:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The DLR module's OVERSTAT register keeps track of DMA service request overruns.
 685:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Should an overrun occur, the bit corresponding to the used DLR line is set. The
 686:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * function simply reads this status and returns "true" if an overrun is detected
 687:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * It returns "false" if an overrun isn't registered.
 688:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 689:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, const uint8_t line);
 690:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 691:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 692:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 693:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param line The line for which the overrun status must be cleared
 694:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 695:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 696:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 697:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Clear overrun status of a DLR line <br>
 698:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 699:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 700:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function clears the overrun status of a line by setting the corresponding
 701:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * line bit in the DLR's OVERCLR register.
 702:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 703:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line);
 704:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 705:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 706:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 707:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel The GPDMA channel (number) which needs to be initialized
 708:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param config A constant pointer to ::XMC_DMA_CH_CONFIG_t, pointing to a const
 709:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *               channel configuration
 710:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return XMC_DMA_CH_STATUS_t Initialization status
 711:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 712:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 713:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize a GPDMA channel with provided channel configuration <br>
 714:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 715:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 716:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function sets up the following channel configuration parameters for a GPDMA
 717:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * channel (specified by the parameter channel): <br>
 718:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 1) Source and destination addresses (and linked list address if requested) <br>
 719:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 2) Source and destination handshaking interface (hardware or software?)    <br>
 720:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 3) Scatter/gather configuration                                            <br>
 721:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 4) Source and destination peripheral request (DMA is the flow controller)  <br>
 722:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 5) Transfer flow and type                                                  <br>
 723:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 724:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 725:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns one of the following values: <br>
 726:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 1) In case the DMA channel is not enabled: ::XMC_DMA_CH_STATUS_BUSY        <br>
 727:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 2) If the GPDMA module itself is not enabled: ::XMC_DMA_CH_STATUS_ERROR    <br>
 728:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * 3) If the configuration was successful: ::XMC_DMA_CH_STATUS_OK             <br>
 729:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 730:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 731:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Once the initialization is successful, calling ::XMC_DMA_CH_Enable() will trigger
 732:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * a GPDMA transfer.
 733:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 734:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 735:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 736:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 737:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 738:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel Which DMA channel should be enabled?
 739:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 740:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 741:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 742:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable a GPDMA channel <br>
 743:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 744:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 745:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function sets the GPDMA's CHENREG register to enable a DMA channel. Please
 746:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ensure that the GPDMA module itself is enabled before calling this function.
 747:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * See ::XMC_DMA_Enable() for details.
 748:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 749:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE void XMC_DMA_CH_Enable(XMC_DMA_t *const dma, const uint8_t channel)
 750:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 751:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   dma->CHENREG = (uint32_t)(0x101UL << channel);
 752:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 753:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 754:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 755:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 756:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel Which DMA channel should be disabled?
 757:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 758:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 759:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 760:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable a GPDMA channel <br>
 761:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 762:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 763:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function resets the GPDMA's CHENREG register to disable a DMA channel.
 764:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 765:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel);
 766:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 767:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 768:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 769:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel Which DMA channel should be disabled?
 770:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 771:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 772:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 773:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if a GPDMA channel is enabled <br>
 774:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 775:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 776:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function reads the GPDMA's CHENREG register to check if a DMA channel is
 777:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * enabled or not. The function returns "true" is the requested channel is enabled,
 778:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * "false" otherwise.
 779:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 780:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel);
 781:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 782:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 783:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 784:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel Which DMA channel should suspend transfer?
 785:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 786:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 787:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 788:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Suspend a GPDMA channel transfer <br>
 789:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 790:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 791:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function sets the CH_SUSP bit of the GPDMA's GFGL register to initiate a
 792:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer suspend. The function may be called after enabling the DMA channel.
 793:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Please see ::XMC_DMA_CH_Enable() for more information.
 794:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 795:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Related API: </b><br>
 796:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ::XMC_DMA_CH_Resume() <br>
 797:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 798:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel);
 799:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 800:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 801:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 802:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel Which DMA channel should resume transfer?
 803:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 804:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 805:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 806:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * Resume a GPDMA channel <br>
 807:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 808:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 809:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function clears the CH_SUSP bit of the GPDMA's GFGL register to resume a
 810:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer. The function may be called after enabling the DMA channel. Please
 811:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * see ::XMC_DMA_CH_Enable() for more information.
 812:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 813:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Related API: </b><br>
 814:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ::XMC_DMA_CH_Suspend() <br>
 815:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 816:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel);
 817:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 818:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 819:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 820:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel A DMA channel
 821:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param addr source address
 822:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 823:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 824:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 825:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * This function sets the source address of the specified channel <br>
 826:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 827:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 828:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function may be called after enabling the DMA channel. Please
 829:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * see ::XMC_DMA_CH_Enable() for more information.
 830:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 831:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Related API: </b><br>
 832:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ::XMC_DMA_CH_SetDestinationAddress() <br>
 833:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 834:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE void XMC_DMA_CH_SetSourceAddress(XMC_DMA_t *const dma, const uint8_t channel, uint3
 835:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
  27              	 .loc 1 835 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 F860     	 str r0,[r7,#12]
  43 0008 0B46     	 mov r3,r1
  44 000a 7A60     	 str r2,[r7,#4]
  45 000c FB72     	 strb r3,[r7,#11]
 836:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   dma->CH[channel].SAR = addr;
  46              	 .loc 1 836 0
  47 000e FB7A     	 ldrb r3,[r7,#11]
  48 0010 FA68     	 ldr r2,[r7,#12]
  49 0012 5821     	 movs r1,#88
  50 0014 01FB03F3 	 mul r3,r1,r3
  51 0018 1344     	 add r3,r3,r2
  52 001a 7A68     	 ldr r2,[r7,#4]
  53 001c 1A60     	 str r2,[r3]
 837:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
  54              	 .loc 1 837 0
  55 001e 1437     	 adds r7,r7,#20
  56              	.LCFI3:
  57              	 .cfi_def_cfa_offset 4
  58 0020 BD46     	 mov sp,r7
  59              	.LCFI4:
  60              	 .cfi_def_cfa_register 13
  61              	 
  62 0022 5DF8047B 	 ldr r7,[sp],#4
  63              	.LCFI5:
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0026 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE140:
  70              	 .section .text.XMC_DMA_CH_SetDestinationAddress,"ax",%progbits
  71              	 .align 2
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_DMA_CH_SetDestinationAddress:
  76              	.LFB141:
 838:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 839:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 840:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 841:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel A DMA channel
 842:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param addr destination address
 843:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 844:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 845:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 846:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * This function sets the destination address of the specified channel <br>
 847:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 848:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 849:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function may be called after enabling the DMA channel. Please
 850:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * see ::XMC_DMA_CH_Enable() for more information.
 851:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 852:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Related API: </b><br>
 853:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * ::XMC_DMA_CH_SetSourceAddress() <br>
 854:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 855:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE void XMC_DMA_CH_SetDestinationAddress(XMC_DMA_t *const dma, const uint8_t channel, 
 856:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
  77              	 .loc 1 856 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI6:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 85B0     	 sub sp,sp,#20
  87              	.LCFI7:
  88              	 .cfi_def_cfa_offset 24
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI8:
  91              	 .cfi_def_cfa_register 7
  92 0006 F860     	 str r0,[r7,#12]
  93 0008 0B46     	 mov r3,r1
  94 000a 7A60     	 str r2,[r7,#4]
  95 000c FB72     	 strb r3,[r7,#11]
 857:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   dma->CH[channel].DAR = addr;
  96              	 .loc 1 857 0
  97 000e FB7A     	 ldrb r3,[r7,#11]
  98 0010 FA68     	 ldr r2,[r7,#12]
  99 0012 5821     	 movs r1,#88
 100 0014 01FB03F3 	 mul r3,r1,r3
 101 0018 1344     	 add r3,r3,r2
 102 001a 0833     	 adds r3,r3,#8
 103 001c 7A68     	 ldr r2,[r7,#4]
 104 001e 1A60     	 str r2,[r3]
 858:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 105              	 .loc 1 858 0
 106 0020 1437     	 adds r7,r7,#20
 107              	.LCFI9:
 108              	 .cfi_def_cfa_offset 4
 109 0022 BD46     	 mov sp,r7
 110              	.LCFI10:
 111              	 .cfi_def_cfa_register 13
 112              	 
 113 0024 5DF8047B 	 ldr r7,[sp],#4
 114              	.LCFI11:
 115              	 .cfi_restore 7
 116              	 .cfi_def_cfa_offset 0
 117 0028 7047     	 bx lr
 118              	 .cfi_endproc
 119              	.LFE141:
 121 002a 00BF     	 .section .text.XMC_DMA_CH_SetBlockSize,"ax",%progbits
 122              	 .align 2
 123              	 .thumb
 124              	 .thumb_func
 126              	XMC_DMA_CH_SetBlockSize:
 127              	.LFB142:
 859:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** 
 860:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** /**
 861:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 862:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param channel A DMA channel
 863:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @param block_size Transfer size [1-2048]
 864:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 865:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 866:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 867:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * This function sets the block size of a transfer<br>
 868:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 869:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 870:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * The function may be called after enabling the DMA channel. Please
 871:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  * see ::XMC_DMA_CH_Enable() for more information.
 872:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  *
 873:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****  */
 874:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE void XMC_DMA_CH_SetBlockSize(XMC_DMA_t *const dma, const uint8_t channel, uint32_t 
 875:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** {
 128              	 .loc 1 875 0
 129              	 .cfi_startproc
 130              	 
 131              	 
 132              	 
 133 0000 80B4     	 push {r7}
 134              	.LCFI12:
 135              	 .cfi_def_cfa_offset 4
 136              	 .cfi_offset 7,-4
 137 0002 85B0     	 sub sp,sp,#20
 138              	.LCFI13:
 139              	 .cfi_def_cfa_offset 24
 140 0004 00AF     	 add r7,sp,#0
 141              	.LCFI14:
 142              	 .cfi_def_cfa_register 7
 143 0006 F860     	 str r0,[r7,#12]
 144 0008 0B46     	 mov r3,r1
 145 000a 7A60     	 str r2,[r7,#4]
 146 000c FB72     	 strb r3,[r7,#11]
 876:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h ****   dma->CH[channel].CTLH = block_size;
 147              	 .loc 1 876 0
 148 000e FB7A     	 ldrb r3,[r7,#11]
 149 0010 FA68     	 ldr r2,[r7,#12]
 150 0012 5821     	 movs r1,#88
 151 0014 01FB03F3 	 mul r3,r1,r3
 152 0018 1344     	 add r3,r3,r2
 153 001a 1833     	 adds r3,r3,#24
 154 001c 7A68     	 ldr r2,[r7,#4]
 155 001e 5A60     	 str r2,[r3,#4]
 877:C:/work_mari/XMC4800/common-tasks/DMA/Libraries/XMCLib/inc\xmc_dma.h **** }
 156              	 .loc 1 877 0
 157 0020 1437     	 adds r7,r7,#20
 158              	.LCFI15:
 159              	 .cfi_def_cfa_offset 4
 160 0022 BD46     	 mov sp,r7
 161              	.LCFI16:
 162              	 .cfi_def_cfa_register 13
 163              	 
 164 0024 5DF8047B 	 ldr r7,[sp],#4
 165              	.LCFI17:
 166              	 .cfi_restore 7
 167              	 .cfi_def_cfa_offset 0
 168 0028 7047     	 bx lr
 169              	 .cfi_endproc
 170              	.LFE142:
 172 002a 00BF     	 .section .text.DMA_CH_0_reload,"ax",%progbits
 173              	 .align 2
 174              	 .global DMA_CH_0_reload
 175              	 .thumb
 176              	 .thumb_func
 178              	DMA_CH_0_reload:
 179              	.LFB161:
 180              	 .file 2 "../Dave/Generated/DMA_CH/dma_ch_conf.c"
   1:../Dave/Generated/DMA_CH/dma_ch_conf.c **** /**************************************************************************************************
   2:../Dave/Generated/DMA_CH/dma_ch_conf.c **** * DAVE APP Name : DMA_CH       APP Version: 4.1.10
   3:../Dave/Generated/DMA_CH/dma_ch_conf.c **** *
   4:../Dave/Generated/DMA_CH/dma_ch_conf.c **** * NOTE:
   5:../Dave/Generated/DMA_CH/dma_ch_conf.c **** * This file is generated by DAVE. Any manual modification done to this file will be lost when the c
   6:../Dave/Generated/DMA_CH/dma_ch_conf.c **** ***************************************************************************************************
   7:../Dave/Generated/DMA_CH/dma_ch_conf.c **** 
   8:../Dave/Generated/DMA_CH/dma_ch_conf.c **** /**
   9:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * @cond
  10:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  **************************************************************************************************
  11:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  12:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * All rights reserved.
  13:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  14:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  15:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * following conditions are met:
  16:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  17:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  18:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *   disclaimer.
  19:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  20:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  21:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  22:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  23:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  24:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *   products derived from this software without specific prior written permission.
  25:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  26:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  27:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  28:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  29:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  30:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  31:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  32:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  34:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  35:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * with Infineon Technologies AG (dave@infineon.com).
  36:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  **************************************************************************************************
  37:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  38:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * Change History
  39:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * --------------
  40:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  41:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * 2015-02-20:
  42:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *     - Initial version <br>
  43:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  44:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * 2015-04-15:
  45:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *     - Handle src/dst address updates with new APIs in DMA LLD <br>
  46:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *     - Documentation updates <br>
  47:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *     - The major, minor and patch numbers are now auto-magically updated using Groovy <br>
  48:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  49:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * 2015-06-20:
  50:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *     - Changes in the way src and dst addresses are handled <br>
  51:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *     - APP_INSTANCE_reload() API updated to add XMC_DMA_CH_SetBlockSize() call <br>
  52:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *
  53:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * 2015-07-15:
  54:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *     - DMA_CH (Request #70158): Fix source and destination address handling <br>
  55:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * 2015-11-12:
  56:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  *     - Removed the event callback registration and enable event from the DMA_CH_n_reload() for fa
  57:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * @endcond
  58:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  */
  59:../Dave/Generated/DMA_CH/dma_ch_conf.c **** 
  60:../Dave/Generated/DMA_CH/dma_ch_conf.c **** /**************************************************************************************************
  61:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * HEADER FILES
  62:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  **************************************************************************************************
  63:../Dave/Generated/DMA_CH/dma_ch_conf.c **** 
  64:../Dave/Generated/DMA_CH/dma_ch_conf.c **** #include "dma_ch.h"
  65:../Dave/Generated/DMA_CH/dma_ch_conf.c **** 
  66:../Dave/Generated/DMA_CH/dma_ch_conf.c **** /**************************************************************************************************
  67:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  * DATA STRUCTURES
  68:../Dave/Generated/DMA_CH/dma_ch_conf.c ****  **************************************************************************************************
  69:../Dave/Generated/DMA_CH/dma_ch_conf.c **** 
  70:../Dave/Generated/DMA_CH/dma_ch_conf.c **** extern uint32_t* src_ptr; /* Source address symbol */
  71:../Dave/Generated/DMA_CH/dma_ch_conf.c **** 
  72:../Dave/Generated/DMA_CH/dma_ch_conf.c **** extern uint32_t* dst_ptr; /* Destination address symbol */
  73:../Dave/Generated/DMA_CH/dma_ch_conf.c **** 
  74:../Dave/Generated/DMA_CH/dma_ch_conf.c **** void DMA_CH_0_reload(DMA_CH_t *obj)
  75:../Dave/Generated/DMA_CH/dma_ch_conf.c **** {
 181              	 .loc 2 75 0
 182              	 .cfi_startproc
 183              	 
 184              	 
 185 0000 80B5     	 push {r7,lr}
 186              	.LCFI18:
 187              	 .cfi_def_cfa_offset 8
 188              	 .cfi_offset 7,-8
 189              	 .cfi_offset 14,-4
 190 0002 82B0     	 sub sp,sp,#8
 191              	.LCFI19:
 192              	 .cfi_def_cfa_offset 16
 193 0004 00AF     	 add r7,sp,#0
 194              	.LCFI20:
 195              	 .cfi_def_cfa_register 7
 196 0006 7860     	 str r0,[r7,#4]
  76:../Dave/Generated/DMA_CH/dma_ch_conf.c ****   XMC_DMA_CH_SetBlockSize(obj->dma_global->dma, obj->ch_num, 1024);
 197              	 .loc 2 76 0
 198 0008 7B68     	 ldr r3,[r7,#4]
 199 000a 1B68     	 ldr r3,[r3]
 200 000c 1A68     	 ldr r2,[r3]
 201 000e 7B68     	 ldr r3,[r7,#4]
 202 0010 1B7B     	 ldrb r3,[r3,#12]
 203 0012 1046     	 mov r0,r2
 204 0014 1946     	 mov r1,r3
 205 0016 4FF48062 	 mov r2,#1024
 206 001a FFF7FEFF 	 bl XMC_DMA_CH_SetBlockSize
  77:../Dave/Generated/DMA_CH/dma_ch_conf.c ****   XMC_DMA_CH_SetSourceAddress(obj->dma_global->dma, obj->ch_num, (uint32_t)src_ptr);
 207              	 .loc 2 77 0
 208 001e 7B68     	 ldr r3,[r7,#4]
 209 0020 1B68     	 ldr r3,[r3]
 210 0022 1968     	 ldr r1,[r3]
 211 0024 7B68     	 ldr r3,[r7,#4]
 212 0026 1A7B     	 ldrb r2,[r3,#12]
 213 0028 0A4B     	 ldr r3,.L5
 214 002a 1B68     	 ldr r3,[r3]
 215 002c 0846     	 mov r0,r1
 216 002e 1146     	 mov r1,r2
 217 0030 1A46     	 mov r2,r3
 218 0032 FFF7FEFF 	 bl XMC_DMA_CH_SetSourceAddress
  78:../Dave/Generated/DMA_CH/dma_ch_conf.c ****   XMC_DMA_CH_SetDestinationAddress(obj->dma_global->dma, obj->ch_num, (uint32_t)dst_ptr);
 219              	 .loc 2 78 0
 220 0036 7B68     	 ldr r3,[r7,#4]
 221 0038 1B68     	 ldr r3,[r3]
 222 003a 1968     	 ldr r1,[r3]
 223 003c 7B68     	 ldr r3,[r7,#4]
 224 003e 1A7B     	 ldrb r2,[r3,#12]
 225 0040 054B     	 ldr r3,.L5+4
 226 0042 1B68     	 ldr r3,[r3]
 227 0044 0846     	 mov r0,r1
 228 0046 1146     	 mov r1,r2
 229 0048 1A46     	 mov r2,r3
 230 004a FFF7FEFF 	 bl XMC_DMA_CH_SetDestinationAddress
  79:../Dave/Generated/DMA_CH/dma_ch_conf.c **** }
 231              	 .loc 2 79 0
 232 004e 0837     	 adds r7,r7,#8
 233              	.LCFI21:
 234              	 .cfi_def_cfa_offset 8
 235 0050 BD46     	 mov sp,r7
 236              	.LCFI22:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 0052 80BD     	 pop {r7,pc}
 240              	.L6:
 241              	 .align 2
 242              	.L5:
 243 0054 00000000 	 .word src_ptr
 244 0058 00000000 	 .word dst_ptr
 245              	 .cfi_endproc
 246              	.LFE161:
 248              	 .global DMA_CH_0_CONFIG
 249              	 .section .data.DMA_CH_0_CONFIG,"aw",%progbits
 250              	 .align 2
 253              	DMA_CH_0_CONFIG:
 254 0000 24       	 .byte 36
 255 0001 90       	 .byte 144
 256 0002 00       	 .byte 0
 257 0003 00       	 .space 1
 258 0004 00000000 	 .space 20
 258      00000000 
 258      00000000 
 258      00000000 
 258      00000000 
 259 0018 0004     	 .short 1024
 260 001a 00       	 .byte 0
 261 001b 00       	 .byte 0
 262 001c 0008     	 .short 2048
 263 001e 0000     	 .space 2
 264 0020 0004     	 .short 1024
 265 0022 0000     	 .space 2
 266 0024 00000000 	 .word 0
 267 0028 00000000 	 .word 0
 268              	 .global DMA_CH_0
 269              	 .section .data.DMA_CH_0,"aw",%progbits
 270              	 .align 2
 273              	DMA_CH_0:
 274 0000 00000000 	 .word GLOBAL_DMA_0
 275 0004 00000000 	 .word DMA_CH_0_CONFIG
 276 0008 00000000 	 .word DMA_CH_0_reload
 277 000c 02       	 .byte 2
 278 000d 000000   	 .space 3
 279              	 .text
 280              	.Letext0:
 281              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 282              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 283              	 .file 5 "C:/work_mari/XMC4800/common-tasks/DMA/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 284              	 .file 6 "C:/work_mari/XMC4800/common-tasks/DMA/Dave/Generated/GLOBAL_DMA/global_dma.h"
 285              	 .file 7 "../Dave/Generated/DMA_CH/dma_ch.h"
 286              	 .file 8 "C:/work_mari/XMC4800/common-tasks/DMA/Libraries/CMSIS/Include/cmsis_gcc.h"
 287              	 .file 9 "C:/work_mari/XMC4800/common-tasks/DMA/Libraries/CMSIS/Include/core_cm4.h"
 288              	 .file 10 "C:/work_mari/XMC4800/common-tasks/DMA/Dave/Generated/GLOBAL_DMA/global_dma_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 dma_ch_conf.c
    {standard input}:20     .text.XMC_DMA_CH_SetSourceAddress:00000000 $t
    {standard input}:24     .text.XMC_DMA_CH_SetSourceAddress:00000000 XMC_DMA_CH_SetSourceAddress
    {standard input}:71     .text.XMC_DMA_CH_SetDestinationAddress:00000000 $t
    {standard input}:75     .text.XMC_DMA_CH_SetDestinationAddress:00000000 XMC_DMA_CH_SetDestinationAddress
    {standard input}:122    .text.XMC_DMA_CH_SetBlockSize:00000000 $t
    {standard input}:126    .text.XMC_DMA_CH_SetBlockSize:00000000 XMC_DMA_CH_SetBlockSize
    {standard input}:173    .text.DMA_CH_0_reload:00000000 $t
    {standard input}:178    .text.DMA_CH_0_reload:00000000 DMA_CH_0_reload
    {standard input}:243    .text.DMA_CH_0_reload:00000054 $d
    {standard input}:253    .data.DMA_CH_0_CONFIG:00000000 DMA_CH_0_CONFIG
    {standard input}:250    .data.DMA_CH_0_CONFIG:00000000 $d
    {standard input}:273    .data.DMA_CH_0:00000000 DMA_CH_0
    {standard input}:270    .data.DMA_CH_0:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
src_ptr
dst_ptr
GLOBAL_DMA_0
