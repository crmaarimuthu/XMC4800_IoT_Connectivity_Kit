   1              	# 1 "../Startup/startup_XMC4800.S"
   1              	/**************************************************************************************************
   0              	
   0              	
   0              	
   2              	 * @file     startup_XMC4800.S
   3              	 * @brief    CMSIS Core Device Startup File for Infineon XMC4800 Device Series
   4              	 * @version  V1.2
   5              	 * @date     15 Mai 2020
   6              	 *
   7              	 * @cond
   8              	 **************************************************************************************************
   9              	 * Copyright (c) 2015-2020, Infineon Technologies AG
  10              	 * All rights reserved.                        
  11              	 *                                             
  12              	 * Boost Software License - Version 1.0 - August 17th, 2003
  13              	 * 
  14              	 * Permission is hereby granted, free of charge, to any person or organization
  15              	 * obtaining a copy of the software and accompanying documentation covered by
  16              	 * this license (the "Software") to use, reproduce, display, distribute,
  17              	 * execute, and transmit the Software, and to prepare derivative works of the
  18              	 * Software, and to permit third-parties to whom the Software is furnished to
  19              	 * do so, all subject to the following:
  20              	 * 
  21              	 * The copyright notices in the Software and this entire statement, including
  22              	 * the above license grant, this restriction and the following disclaimer,
  23              	 * must be included in all copies of the Software, in whole or in part, and
  24              	 * all derivative works of the Software, unless such copies or derivative
  25              	 * works are solely in the form of machine-executable object code generated by
  26              	 * a source language processor.
  27              	 * 
  28              	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29              	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30              	 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31              	 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32              	 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33              	 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34              	 * DEALINGS IN THE SOFTWARE.
  35              	 *                                                                              
  36              	 * To improve the quality of the software, users are encouraged to share 
  37              	 * modifications, enhancements or bug fixes with Infineon Technologies AG 
  38              	 * at XMCSupport@infineon.com.
  39              	 **************************************************************************************************
  40              	 *
  41              	 **************************** Change history ********************************
  42              	 * V1.0,Sep, 03, 2015 JFT:Initial version
  43              	 * V1.1,Jan, 05, 2016 JFT:Fix .reset section attributes
  44              	 * V1.2,Mai, 15, 2020 JFT:Added option (ENABLE_OWN_HANDLER) to generate a individual interrupt hand
  45              	 *
  46              	 * @endcond 
  47              	 */
  48              	
  49              	/* ===========START : MACRO DEFINITION MACRO DEFINITION ================== */
  50              	 
  51              	.macro Entry Handler
  52              	    .long \Handler
  53              	.endm
  54              	
  55              	.macro Insert_ExceptionHandler Handler_Func 
  56              	    .weak \Handler_Func
  57              	#if defined(ENABLE_OWN_HANDLER)
  58              	    .thumb_func
  60              	\Handler_Func:
  61              	    b .
  63              	#else
  64              	    .thumb_set \Handler_Func, Default_Handler
  65              	#endif 
  66              	.endm
  67              	
  68              	/* =============END : MACRO DEFINITION MACRO DEFINITION ================== */
  69              	
  70              	/* ================== START OF VECTOR TABLE DEFINITION ====================== */
  71              	/* Vector Table - This gets programed into VTOR register by onchip BootROM */
  72              	    .syntax unified
  73              	
  74              	    .section .reset, "a", %progbits
  75              	    
  76              		.align 2
  77              	    .globl  __Vectors
  79              	__Vectors:
  80 0000 00000000 	    .long   __initial_sp                /* Top of Stack                 */
  81 0004 00000000 	    .long   Reset_Handler               /* Reset Handler                */
  82              	
  83 0008 00000000 	    Entry   NMI_Handler                 /* NMI Handler                  */
  84 000c 00000000 	    Entry   HardFault_Handler           /* Hard Fault Handler           */
  85 0010 00000000 	    Entry   MemManage_Handler           /* MPU Fault Handler            */
  86 0014 00000000 	    Entry   BusFault_Handler            /* Bus Fault Handler            */
  87 0018 00000000 	    Entry   UsageFault_Handler          /* Usage Fault Handler          */
  88 001c 00000000 	    .long   0                           /* Reserved                     */
  89 0020 00000000 	    .long   0                           /* Reserved                     */
  90 0024 00000000 	    .long   0                           /* Reserved                     */
  91 0028 00000000 	    .long   0                           /* Reserved                     */
  92 002c 00000000 	    Entry   SVC_Handler                 /* SVCall Handler               */
  93 0030 00000000 	    Entry   DebugMon_Handler            /* Debug Monitor Handler        */
  94 0034 00000000 	    .long   0                           /* Reserved                     */
  95 0038 00000000 	    Entry   PendSV_Handler              /* PendSV Handler               */
  96 003c 00000000 	    Entry   SysTick_Handler             /* SysTick Handler              */
  97              	
  98              	    /* Interrupt Handlers for Service Requests (SR) from XMC4800 Peripherals */
  99 0040 00000000 	    Entry   SCU_0_IRQHandler            /* Handler name for SR SCU_0     */
 100 0044 00000000 	    Entry   ERU0_0_IRQHandler           /* Handler name for SR ERU0_0    */
 101 0048 00000000 	    Entry   ERU0_1_IRQHandler           /* Handler name for SR ERU0_1    */
 102 004c 00000000 	    Entry   ERU0_2_IRQHandler           /* Handler name for SR ERU0_2    */
 103 0050 00000000 	    Entry   ERU0_3_IRQHandler           /* Handler name for SR ERU0_3    */ 
 104 0054 00000000 	    Entry   ERU1_0_IRQHandler           /* Handler name for SR ERU1_0    */
 105 0058 00000000 	    Entry   ERU1_1_IRQHandler           /* Handler name for SR ERU1_1    */
 106 005c 00000000 	    Entry   ERU1_2_IRQHandler           /* Handler name for SR ERU1_2    */
 107 0060 00000000 	    Entry   ERU1_3_IRQHandler           /* Handler name for SR ERU1_3    */
 108 0064 00000000 	    .long   0                           /* Not Available                 */
 109 0068 00000000 	    .long   0                           /* Not Available                 */
 110 006c 00000000 	    .long   0                           /* Not Available                 */
 111 0070 00000000 	    Entry   PMU0_0_IRQHandler           /* Handler name for SR PMU0_0    */
 112 0074 00000000 	    .long   0                           /* Not Available                 */
 113 0078 00000000 	    Entry   VADC0_C0_0_IRQHandler       /* Handler name for SR VADC0_C0_0  */
 114 007c 00000000 	    Entry   VADC0_C0_1_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 115 0080 00000000 	    Entry   VADC0_C0_2_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 116 0084 00000000 	    Entry   VADC0_C0_3_IRQHandler       /* Handler name for SR VADC0_C0_3  */
 117 0088 00000000 	    Entry   VADC0_G0_0_IRQHandler       /* Handler name for SR VADC0_G0_0  */
 118 008c 00000000 	    Entry   VADC0_G0_1_IRQHandler       /* Handler name for SR VADC0_G0_1  */
 119 0090 00000000 	    Entry   VADC0_G0_2_IRQHandler       /* Handler name for SR VADC0_G0_2  */
 120 0094 00000000 	    Entry   VADC0_G0_3_IRQHandler       /* Handler name for SR VADC0_G0_3  */
 121 0098 00000000 	    Entry   VADC0_G1_0_IRQHandler       /* Handler name for SR VADC0_G1_0  */
 122 009c 00000000 	    Entry   VADC0_G1_1_IRQHandler       /* Handler name for SR VADC0_G1_1  */
 123 00a0 00000000 	    Entry   VADC0_G1_2_IRQHandler       /* Handler name for SR VADC0_G1_2  */
 124 00a4 00000000 	    Entry   VADC0_G1_3_IRQHandler       /* Handler name for SR VADC0_G1_3  */
 125 00a8 00000000 	    Entry   VADC0_G2_0_IRQHandler       /* Handler name for SR VADC0_G2_0  */
 126 00ac 00000000 	    Entry   VADC0_G2_1_IRQHandler       /* Handler name for SR VADC0_G2_1  */
 127 00b0 00000000 	    Entry   VADC0_G2_2_IRQHandler       /* Handler name for SR VADC0_G2_2  */
 128 00b4 00000000 	    Entry   VADC0_G2_3_IRQHandler       /* Handler name for SR VADC0_G2_3  */
 129 00b8 00000000 	    Entry   VADC0_G3_0_IRQHandler       /* Handler name for SR VADC0_G3_0  */
 130 00bc 00000000 	    Entry   VADC0_G3_1_IRQHandler       /* Handler name for SR VADC0_G3_1  */
 131 00c0 00000000 	    Entry   VADC0_G3_2_IRQHandler       /* Handler name for SR VADC0_G3_2  */
 132 00c4 00000000 	    Entry   VADC0_G3_3_IRQHandler       /* Handler name for SR VADC0_G3_3  */
 133 00c8 00000000 	    Entry   DSD0_0_IRQHandler           /* Handler name for SR DSD0_0    */
 134 00cc 00000000 	    Entry   DSD0_1_IRQHandler           /* Handler name for SR DSD0_1    */
 135 00d0 00000000 	    Entry   DSD0_2_IRQHandler           /* Handler name for SR DSD0_2    */
 136 00d4 00000000 	    Entry   DSD0_3_IRQHandler           /* Handler name for SR DSD0_3    */
 137 00d8 00000000 	    Entry   DSD0_4_IRQHandler           /* Handler name for SR DSD0_4    */
 138 00dc 00000000 	    Entry   DSD0_5_IRQHandler           /* Handler name for SR DSD0_5    */
 139 00e0 00000000 	    Entry   DSD0_6_IRQHandler           /* Handler name for SR DSD0_6    */
 140 00e4 00000000 	    Entry   DSD0_7_IRQHandler           /* Handler name for SR DSD0_7    */
 141 00e8 00000000 	    Entry   DAC0_0_IRQHandler           /* Handler name for SR DAC0_0    */
 142 00ec 00000000 	    Entry   DAC0_1_IRQHandler           /* Handler name for SR DAC0_0    */
 143 00f0 00000000 	    Entry   CCU40_0_IRQHandler          /* Handler name for SR CCU40_0   */
 144 00f4 00000000 	    Entry   CCU40_1_IRQHandler          /* Handler name for SR CCU40_1   */
 145 00f8 00000000 	    Entry   CCU40_2_IRQHandler          /* Handler name for SR CCU40_2   */
 146 00fc 00000000 	    Entry   CCU40_3_IRQHandler          /* Handler name for SR CCU40_3   */
 147 0100 00000000 	    Entry   CCU41_0_IRQHandler          /* Handler name for SR CCU41_0   */
 148 0104 00000000 	    Entry   CCU41_1_IRQHandler          /* Handler name for SR CCU41_1   */
 149 0108 00000000 	    Entry   CCU41_2_IRQHandler          /* Handler name for SR CCU41_2   */
 150 010c 00000000 	    Entry   CCU41_3_IRQHandler          /* Handler name for SR CCU41_3   */
 151 0110 00000000 	    Entry   CCU42_0_IRQHandler          /* Handler name for SR CCU42_0   */
 152 0114 00000000 	    Entry   CCU42_1_IRQHandler          /* Handler name for SR CCU42_1   */
 153 0118 00000000 	    Entry   CCU42_2_IRQHandler          /* Handler name for SR CCU42_2   */
 154 011c 00000000 	    Entry   CCU42_3_IRQHandler          /* Handler name for SR CCU42_3   */
 155 0120 00000000 	    Entry   CCU43_0_IRQHandler          /* Handler name for SR CCU43_0   */
 156 0124 00000000 	    Entry   CCU43_1_IRQHandler          /* Handler name for SR CCU43_1   */
 157 0128 00000000 	    Entry   CCU43_2_IRQHandler          /* Handler name for SR CCU43_2   */
 158 012c 00000000 	    Entry   CCU43_3_IRQHandler          /* Handler name for SR CCU43_3   */
 159 0130 00000000 	    Entry   CCU80_0_IRQHandler          /* Handler name for SR CCU80_0   */
 160 0134 00000000 	    Entry   CCU80_1_IRQHandler          /* Handler name for SR CCU80_1   */
 161 0138 00000000 	    Entry   CCU80_2_IRQHandler          /* Handler name for SR CCU80_2   */
 162 013c 00000000 	    Entry   CCU80_3_IRQHandler          /* Handler name for SR CCU80_3   */
 163 0140 00000000 	    Entry   CCU81_0_IRQHandler          /* Handler name for SR CCU81_0   */
 164 0144 00000000 	    Entry   CCU81_1_IRQHandler          /* Handler name for SR CCU81_1   */
 165 0148 00000000 	    Entry   CCU81_2_IRQHandler          /* Handler name for SR CCU81_2   */
 166 014c 00000000 	    Entry   CCU81_3_IRQHandler          /* Handler name for SR CCU81_3   */
 167 0150 00000000 	    Entry   POSIF0_0_IRQHandler         /* Handler name for SR POSIF0_0  */
 168 0154 00000000 	    Entry   POSIF0_1_IRQHandler         /* Handler name for SR POSIF0_1  */
 169 0158 00000000 	    Entry   POSIF1_0_IRQHandler         /* Handler name for SR POSIF1_0  */
 170 015c 00000000 	    Entry   POSIF1_1_IRQHandler         /* Handler name for SR POSIF1_1  */
 171 0160 00000000 	    .long   0                           /* Not Available                 */
 172 0164 00000000 	    .long   0                           /* Not Available                 */
 173 0168 00000000 	    .long   0                           /* Not Available                 */
 174 016c 00000000 	    .long   0                           /* Not Available                 */
 175 0170 00000000 	    Entry   CAN0_0_IRQHandler           /* Handler name for SR CAN0_0    */
 176 0174 00000000 	    Entry   CAN0_1_IRQHandler           /* Handler name for SR CAN0_1    */
 177 0178 00000000 	    Entry   CAN0_2_IRQHandler           /* Handler name for SR CAN0_2    */
 178 017c 00000000 	    Entry   CAN0_3_IRQHandler           /* Handler name for SR CAN0_3    */
 179 0180 00000000 	    Entry   CAN0_4_IRQHandler           /* Handler name for SR CAN0_4    */
 180 0184 00000000 	    Entry   CAN0_5_IRQHandler           /* Handler name for SR CAN0_5    */
 181 0188 00000000 	    Entry   CAN0_6_IRQHandler           /* Handler name for SR CAN0_6    */
 182 018c 00000000 	    Entry   CAN0_7_IRQHandler           /* Handler name for SR CAN0_7    */
 183 0190 00000000 	    Entry   USIC0_0_IRQHandler          /* Handler name for SR USIC0_0   */
 184 0194 00000000 	    Entry   USIC0_1_IRQHandler          /* Handler name for SR USIC0_1   */
 185 0198 00000000 	    Entry   USIC0_2_IRQHandler          /* Handler name for SR USIC0_2   */
 186 019c 00000000 	    Entry   USIC0_3_IRQHandler          /* Handler name for SR USIC0_3   */
 187 01a0 00000000 	    Entry   USIC0_4_IRQHandler          /* Handler name for SR USIC0_4   */
 188 01a4 00000000 	    Entry   USIC0_5_IRQHandler          /* Handler name for SR USIC0_5   */
 189 01a8 00000000 	    Entry   USIC1_0_IRQHandler          /* Handler name for SR USIC1_0   */
 190 01ac 00000000 	    Entry   USIC1_1_IRQHandler          /* Handler name for SR USIC1_1   */
 191 01b0 00000000 	    Entry   USIC1_2_IRQHandler          /* Handler name for SR USIC1_2   */
 192 01b4 00000000 	    Entry   USIC1_3_IRQHandler          /* Handler name for SR USIC1_3   */
 193 01b8 00000000 	    Entry   USIC1_4_IRQHandler          /* Handler name for SR USIC1_4   */
 194 01bc 00000000 	    Entry   USIC1_5_IRQHandler          /* Handler name for SR USIC1_5   */
 195 01c0 00000000 	    Entry   USIC2_0_IRQHandler          /* Handler name for SR USIC2_0   */
 196 01c4 00000000 	    Entry   USIC2_1_IRQHandler          /* Handler name for SR USIC2_1   */
 197 01c8 00000000 	    Entry   USIC2_2_IRQHandler          /* Handler name for SR USIC2_2   */
 198 01cc 00000000 	    Entry   USIC2_3_IRQHandler          /* Handler name for SR USIC2_3   */
 199 01d0 00000000 	    Entry   USIC2_4_IRQHandler          /* Handler name for SR USIC2_4   */
 200 01d4 00000000 	    Entry   USIC2_5_IRQHandler          /* Handler name for SR USIC2_5   */
 201 01d8 00000000 	    Entry   LEDTS0_0_IRQHandler         /* Handler name for SR LEDTS0_0  */
 202 01dc 00000000 	    .long   0                           /* Not Available                 */
 203 01e0 00000000 	    Entry   FCE0_0_IRQHandler           /* Handler name for SR FCE0_0    */
 204 01e4 00000000 	    Entry   GPDMA0_0_IRQHandler         /* Handler name for SR GPDMA0_0  */
 205 01e8 00000000 	    Entry   SDMMC0_0_IRQHandler         /* Handler name for SR SDMMC0_0  */
 206 01ec 00000000 	    Entry   USB0_0_IRQHandler           /* Handler name for SR USB0_0    */
 207 01f0 00000000 	    Entry   ETH0_0_IRQHandler           /* Handler name for SR ETH0_0    */
 208 01f4 00000000 		Entry   ECAT0_0_IRQHandler          /* Handler name for SR ECAT0_0   */
 209 01f8 00000000 	    Entry   GPDMA1_0_IRQHandler         /* Handler name for SR GPDMA1_0  */
 210 01fc 00000000 	    .long   0                           /* Not Available                 */
 211              	
 213              	/* ================== END OF VECTOR TABLE DEFINITION ======================= */
 214              	
 215              	/* ================== START OF VECTOR ROUTINES ============================= */
 216              	
 217              		.align	1
 218              	    .thumb
 219              	
 220              	/* Reset Handler */
 221              	    .thumb_func
 222              	    .globl  Reset_Handler
 224              	Reset_Handler:
 225 0200 DFF874D0 	    ldr sp,=__initial_sp
 226              	
 227              	#ifndef __SKIP_SYSTEM_INIT
 228 0204 1D48     	    ldr  r0, =SystemInit
 229 0206 8047     	    blx  r0
 230              	#endif
 231              	
 232              	/* Initialize data
 233              	 *
 234              	 *  Between symbol address __copy_table_start__ and __copy_table_end__,
 235              	 *  there are array of triplets, each of which specify:
 236              	 *    offset 0: LMA of start of a section to copy from
 237              	 *    offset 4: VMA of start of a section to copy to
 238              	 *    offset 8: size of the section to copy. Must be multiply of 4
 239              	 *
 240              	 *  All addresses must be aligned to 4 bytes boundary.
 241              	 */
 242 0208 1D4C     		ldr	r4, =__copy_table_start__
 243 020a 1E4D     		ldr	r5, =__copy_table_end__
 244              	
 245              	.L_loop0:
 246 020c AC42     		cmp	r4, r5
 247 020e 09DA     		bge	.L_loop0_done
 248 0210 2168     		ldr	r1, [r4]
 249 0212 6268     		ldr	r2, [r4, #4]
 250 0214 A368     		ldr	r3, [r4, #8]
 251              	
 252              	.L_loop0_0:
 253 0216 043B     		subs	r3, #4
 254 0218 A2BF     		ittt	ge
 255 021a C858     		ldrge	r0, [r1, r3]
 256 021c D050     		strge	r0, [r2, r3]
 257 021e FAE7     		bge	.L_loop0_0
 258              	
 259 0220 0C34     		adds	r4, #12
 260 0222 F3E7     		b	.L_loop0
 261              	
 262              	.L_loop0_done:
 263              	
 264              	/* Zero initialized data 
 265              	 *  Between symbol address __zero_table_start__ and __zero_table_end__,
 266              	 *  there are array of tuples specifying:
 267              	 *    offset 0: Start of a BSS section
 268              	 *    offset 4: Size of this BSS section. Must be multiply of 4
 269              	 *
 270              	 *  Define __SKIP_BSS_CLEAR to disable zeroing uninitialzed data in startup.
 271              	 */    
 272              	#ifndef __SKIP_BSS_CLEAR
 273 0224 184B     		ldr	r3, =__zero_table_start__
 274 0226 194C     		ldr	r4, =__zero_table_end__
 275              	
 276              	.L_loop2:
 277 0228 A342     		cmp	r3, r4
 278 022a 08DA     		bge	.L_loop2_done
 279 022c 1968     		ldr	r1, [r3]
 280 022e 5A68     		ldr	r2, [r3, #4]
 281 0230 0020     		movs	r0, 0
 282              	
 283              	.L_loop2_0:
 284 0232 043A     		subs	r2, #4
 285 0234 A4BF     		itt	ge
 286 0236 8850     		strge	r0, [r1, r2]
 287 0238 FBE7     		bge	.L_loop2_0
 288              	
 289 023a 0833     		adds	r3, #8
 290 023c F4E7     		b	.L_loop2
 291              	.L_loop2_done:    
 292              	#endif /* __SKIP_BSS_CLEAR */
 293              	   
 294              	#ifndef __SKIP_LIBC_INIT_ARRAY
 295 023e 1448     	    ldr  r0, =__libc_init_array
 296 0240 8047     	    blx  r0
 297              	#endif
 298              	
 299 0242 1448     	    ldr  r0, =main
 300 0244 8047     	    blx  r0
 301              	
 302 0246 0000     	.align 2
 303              	__copy_table_start__:
 304 0248 00000000 	    .long __data_load, __data_start, __data_size
 304      00000000 
 304      00000000 
 305 0254 00000000 	    .long __ram_code_load, __ram_code_start, __ram_code_size
 305      00000000 
 305      00000000 
 306              	__copy_table_end__:
 307              	
 308              	__zero_table_start__:
 309 0260 00000000 	    .long __bss_start, __bss_size
 309      00000000 
 310 0268 00000000 	    .long USB_RAM_start, USB_RAM_size
 310      00000000 
 311 0270 00000000 	    .long ETH_RAM_start, ETH_RAM_size
 311      00000000 
 312              	__zero_table_end__:
 313              	    
 314 0278 00000000 		.pool
 314      00000000 
 314      48020000 
 314      60020000 
 314      60020000 
 316              	
 317              	/* ======================================================================== */
 318              	/* ========== START OF EXCEPTION HANDLER DEFINITION ======================== */
 319              	
 320              	/* Default exception Handlers - Users may override this default functionality by
 321              	   defining handlers of the same name in their C code */
 322              	
 323              		.align	1
 324              	    .thumb_func
 325              	    .weak Default_Handler
 327              	Default_Handler:
 328 0298 FEE7     	    b .
 330              	
 331              	     Insert_ExceptionHandler NMI_Handler
 332              	     Insert_ExceptionHandler HardFault_Handler
 333              	     Insert_ExceptionHandler MemManage_Handler
 334              	     Insert_ExceptionHandler BusFault_Handler
 335              	     Insert_ExceptionHandler UsageFault_Handler
 336              	     Insert_ExceptionHandler SVC_Handler
 337              	     Insert_ExceptionHandler DebugMon_Handler
 338              	     Insert_ExceptionHandler PendSV_Handler
 339              	     Insert_ExceptionHandler SysTick_Handler
 340              	
 341              	     Insert_ExceptionHandler SCU_0_IRQHandler
 342              	     Insert_ExceptionHandler ERU0_0_IRQHandler
 343              	     Insert_ExceptionHandler ERU0_1_IRQHandler
 344              	     Insert_ExceptionHandler ERU0_2_IRQHandler
 345              	     Insert_ExceptionHandler ERU0_3_IRQHandler
 346              	     Insert_ExceptionHandler ERU1_0_IRQHandler
 347              	     Insert_ExceptionHandler ERU1_1_IRQHandler
 348              	     Insert_ExceptionHandler ERU1_2_IRQHandler
 349              	     Insert_ExceptionHandler ERU1_3_IRQHandler
 350              	     Insert_ExceptionHandler PMU0_0_IRQHandler
 351              	     Insert_ExceptionHandler VADC0_C0_0_IRQHandler
 352              	     Insert_ExceptionHandler VADC0_C0_1_IRQHandler
 353              	     Insert_ExceptionHandler VADC0_C0_2_IRQHandler
 354              	     Insert_ExceptionHandler VADC0_C0_3_IRQHandler
 355              	     Insert_ExceptionHandler VADC0_G0_0_IRQHandler
 356              	     Insert_ExceptionHandler VADC0_G0_1_IRQHandler
 357              	     Insert_ExceptionHandler VADC0_G0_2_IRQHandler
 358              	     Insert_ExceptionHandler VADC0_G0_3_IRQHandler
 359              	     Insert_ExceptionHandler VADC0_G1_0_IRQHandler
 360              	     Insert_ExceptionHandler VADC0_G1_1_IRQHandler
 361              	     Insert_ExceptionHandler VADC0_G1_2_IRQHandler
 362              	     Insert_ExceptionHandler VADC0_G1_3_IRQHandler
 363              	     Insert_ExceptionHandler VADC0_G2_0_IRQHandler
 364              	     Insert_ExceptionHandler VADC0_G2_1_IRQHandler
 365              	     Insert_ExceptionHandler VADC0_G2_2_IRQHandler
 366              	     Insert_ExceptionHandler VADC0_G2_3_IRQHandler
 367              	     Insert_ExceptionHandler VADC0_G3_0_IRQHandler
 368              	     Insert_ExceptionHandler VADC0_G3_1_IRQHandler
 369              	     Insert_ExceptionHandler VADC0_G3_2_IRQHandler
 370              	     Insert_ExceptionHandler VADC0_G3_3_IRQHandler
 371              	     Insert_ExceptionHandler DSD0_0_IRQHandler
 372              	     Insert_ExceptionHandler DSD0_1_IRQHandler
 373              	     Insert_ExceptionHandler DSD0_2_IRQHandler
 374              	     Insert_ExceptionHandler DSD0_3_IRQHandler
 375              	     Insert_ExceptionHandler DSD0_4_IRQHandler
 376              	     Insert_ExceptionHandler DSD0_5_IRQHandler
 377              	     Insert_ExceptionHandler DSD0_6_IRQHandler
 378              	     Insert_ExceptionHandler DSD0_7_IRQHandler
 379              	     Insert_ExceptionHandler DAC0_0_IRQHandler
 380              	     Insert_ExceptionHandler DAC0_1_IRQHandler
 381              	     Insert_ExceptionHandler CCU40_0_IRQHandler
 382              	     Insert_ExceptionHandler CCU40_1_IRQHandler
 383              	     Insert_ExceptionHandler CCU40_2_IRQHandler
 384              	     Insert_ExceptionHandler CCU40_3_IRQHandler
 385              	     Insert_ExceptionHandler CCU41_0_IRQHandler
 386              	     Insert_ExceptionHandler CCU41_1_IRQHandler
 387              	     Insert_ExceptionHandler CCU41_2_IRQHandler
 388              	     Insert_ExceptionHandler CCU41_3_IRQHandler
 389              	     Insert_ExceptionHandler CCU42_0_IRQHandler
 390              	     Insert_ExceptionHandler CCU42_1_IRQHandler
 391              	     Insert_ExceptionHandler CCU42_2_IRQHandler
 392              	     Insert_ExceptionHandler CCU42_3_IRQHandler
 393              	     Insert_ExceptionHandler CCU43_0_IRQHandler
 394              	     Insert_ExceptionHandler CCU43_1_IRQHandler
 395              	     Insert_ExceptionHandler CCU43_2_IRQHandler
 396              	     Insert_ExceptionHandler CCU43_3_IRQHandler
 397              	     Insert_ExceptionHandler CCU80_0_IRQHandler
 398              	     Insert_ExceptionHandler CCU80_1_IRQHandler
 399              	     Insert_ExceptionHandler CCU80_2_IRQHandler
 400              	     Insert_ExceptionHandler CCU80_3_IRQHandler
 401              	     Insert_ExceptionHandler CCU81_0_IRQHandler
 402              	     Insert_ExceptionHandler CCU81_1_IRQHandler
 403              	     Insert_ExceptionHandler CCU81_2_IRQHandler
 404              	     Insert_ExceptionHandler CCU81_3_IRQHandler
 405              	     Insert_ExceptionHandler POSIF0_0_IRQHandler
 406              	     Insert_ExceptionHandler POSIF0_1_IRQHandler
 407              	     Insert_ExceptionHandler POSIF1_0_IRQHandler
 408              	     Insert_ExceptionHandler POSIF1_1_IRQHandler
 409              	     Insert_ExceptionHandler CAN0_0_IRQHandler
 410              	     Insert_ExceptionHandler CAN0_1_IRQHandler
 411              	     Insert_ExceptionHandler CAN0_2_IRQHandler
 412              	     Insert_ExceptionHandler CAN0_3_IRQHandler
 413              	     Insert_ExceptionHandler CAN0_4_IRQHandler
 414              	     Insert_ExceptionHandler CAN0_5_IRQHandler
 415              	     Insert_ExceptionHandler CAN0_6_IRQHandler
 416              	     Insert_ExceptionHandler CAN0_7_IRQHandler
 417              	     Insert_ExceptionHandler USIC0_0_IRQHandler
 418              	     Insert_ExceptionHandler USIC0_1_IRQHandler
 419              	     Insert_ExceptionHandler USIC0_2_IRQHandler
 420              	     Insert_ExceptionHandler USIC0_3_IRQHandler
 421              	     Insert_ExceptionHandler USIC0_4_IRQHandler
 422              	     Insert_ExceptionHandler USIC0_5_IRQHandler
 423              	     Insert_ExceptionHandler USIC1_0_IRQHandler
 424              	     Insert_ExceptionHandler USIC1_1_IRQHandler
 425              	     Insert_ExceptionHandler USIC1_2_IRQHandler
 426              	     Insert_ExceptionHandler USIC1_3_IRQHandler
 427              	     Insert_ExceptionHandler USIC1_4_IRQHandler
 428              	     Insert_ExceptionHandler USIC1_5_IRQHandler
 429              	     Insert_ExceptionHandler USIC2_0_IRQHandler
 430              	     Insert_ExceptionHandler USIC2_1_IRQHandler
 431              	     Insert_ExceptionHandler USIC2_2_IRQHandler
 432              	     Insert_ExceptionHandler USIC2_3_IRQHandler
 433              	     Insert_ExceptionHandler USIC2_4_IRQHandler
 434              	     Insert_ExceptionHandler USIC2_5_IRQHandler
 435              	     Insert_ExceptionHandler LEDTS0_0_IRQHandler
 436              	     Insert_ExceptionHandler FCE0_0_IRQHandler
 437              	     Insert_ExceptionHandler GPDMA0_0_IRQHandler
 438              	     Insert_ExceptionHandler SDMMC0_0_IRQHandler
 439              	     Insert_ExceptionHandler USB0_0_IRQHandler
 440              	     Insert_ExceptionHandler ETH0_0_IRQHandler
 441              	     Insert_ExceptionHandler ECAT0_0_IRQHandler	 
 442              	     Insert_ExceptionHandler GPDMA1_0_IRQHandler
 443              	     
 444              	/* ============= END OF INTERRUPT HANDLER DEFINITION ====================== */
 445              	
 446 029a 0000     	    .end
DEFINED SYMBOLS
../Startup/startup_XMC4800.S:76     .reset:00000000 $d
../Startup/startup_XMC4800.S:79     .reset:00000000 __Vectors
../Startup/startup_XMC4800.S:224    .reset:00000200 Reset_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 NMI_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 HardFault_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 MemManage_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 BusFault_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 UsageFault_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 SVC_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 DebugMon_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 PendSV_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 SysTick_Handler
../Startup/startup_XMC4800.S:327    .reset:00000298 SCU_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ERU0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ERU0_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ERU0_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ERU0_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ERU1_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ERU1_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ERU1_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ERU1_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 PMU0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_C0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_C0_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_C0_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_C0_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G0_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G0_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G0_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G1_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G1_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G1_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G1_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G2_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G2_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G2_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G2_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G3_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G3_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G3_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 VADC0_G3_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DSD0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DSD0_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DSD0_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DSD0_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DSD0_4_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DSD0_5_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DSD0_6_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DSD0_7_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DAC0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 DAC0_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU40_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU40_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU40_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU40_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU41_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU41_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU41_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU41_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU42_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU42_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU42_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU42_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU43_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU43_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU43_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU43_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU80_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU80_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU80_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU80_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU81_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU81_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU81_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CCU81_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 POSIF0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 POSIF0_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 POSIF1_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 POSIF1_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CAN0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CAN0_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CAN0_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CAN0_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CAN0_4_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CAN0_5_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CAN0_6_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 CAN0_7_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC0_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC0_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC0_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC0_4_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC0_5_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC1_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC1_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC1_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC1_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC1_4_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC1_5_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC2_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC2_1_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC2_2_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC2_3_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC2_4_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USIC2_5_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 LEDTS0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 FCE0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 GPDMA0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 SDMMC0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 USB0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ETH0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 ECAT0_0_IRQHandler
../Startup/startup_XMC4800.S:327    .reset:00000298 GPDMA1_0_IRQHandler
../Startup/startup_XMC4800.S:225    .reset:00000200 $t
../Startup/startup_XMC4800.S:303    .reset:00000248 __copy_table_start__
../Startup/startup_XMC4800.S:306    .reset:00000260 __copy_table_end__
../Startup/startup_XMC4800.S:308    .reset:00000260 __zero_table_start__
../Startup/startup_XMC4800.S:312    .reset:00000278 __zero_table_end__
../Startup/startup_XMC4800.S:302    .reset:00000246 $d
../Startup/startup_XMC4800.S:327    .reset:00000298 Default_Handler
../Startup/startup_XMC4800.S:328    .reset:00000298 $t
                   .debug_aranges:0000000c $d
../Startup/startup_XMC4800.S:446    .reset:0000029a $d

UNDEFINED SYMBOLS
__initial_sp
SystemInit
__libc_init_array
main
__data_load
__data_start
__data_size
__ram_code_load
__ram_code_start
__ram_code_size
__bss_start
__bss_size
USB_RAM_start
USB_RAM_size
ETH_RAM_start
ETH_RAM_size
