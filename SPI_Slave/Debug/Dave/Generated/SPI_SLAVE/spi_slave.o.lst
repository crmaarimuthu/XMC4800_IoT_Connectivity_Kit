   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "spi_slave.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_SetInputSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_SetInputSource:
  25              	.LFB186:
  26              	 .file 1 "C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 844 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
  45 000c 1346     	 mov r3,r2
  46 000e BB70     	 strb r3,[r7,#2]
 845:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
  47              	 .loc 1 845 0
  48 0010 F878     	 ldrb r0,[r7,#3]
  49 0012 FB78     	 ldrb r3,[r7,#3]
  50 0014 7A68     	 ldr r2,[r7,#4]
  51 0016 0633     	 adds r3,r3,#6
  52 0018 9B00     	 lsls r3,r3,#2
  53 001a 1344     	 add r3,r3,r2
  54 001c 5B68     	 ldr r3,[r3,#4]
  55 001e 23F00702 	 bic r2,r3,#7
 846:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
  56              	 .loc 1 846 0
  57 0022 BB78     	 ldrb r3,[r7,#2]
 845:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
  58              	 .loc 1 845 0
  59 0024 1A43     	 orrs r2,r2,r3
  60 0026 7968     	 ldr r1,[r7,#4]
  61 0028 831D     	 adds r3,r0,#6
  62 002a 9B00     	 lsls r3,r3,#2
  63 002c 0B44     	 add r3,r3,r1
  64 002e 5A60     	 str r2,[r3,#4]
 847:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
  65              	 .loc 1 847 0
  66 0030 0C37     	 adds r7,r7,#12
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 4
  69 0032 BD46     	 mov sp,r7
  70              	.LCFI4:
  71              	 .cfi_def_cfa_register 13
  72              	 
  73 0034 5DF8047B 	 ldr r7,[sp],#4
  74              	.LCFI5:
  75              	 .cfi_restore 7
  76              	 .cfi_def_cfa_offset 0
  77 0038 7047     	 bx lr
  78              	 .cfi_endproc
  79              	.LFE186:
  81 003a 00BF     	 .section .text.XMC_USIC_CH_SetTransmitBufferStatus,"ax",%progbits
  82              	 .align 2
  83              	 .thumb
  84              	 .thumb_func
  86              	XMC_USIC_CH_SetTransmitBufferStatus:
  87              	.LFB220:
 848:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1074:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1075:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1091:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1092:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1093:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1098:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1099:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1100:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1101:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1102:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1103:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1104:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1106:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1107:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1108:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1109:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1110:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1111:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1112:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1113:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1114:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1115:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1116:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1117:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1118:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1119:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1120:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1121:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1122:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1123:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1124:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1125:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1129:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1131:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1132:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t transmit_control_information)
1133:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1134:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1135:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1136:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1137:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1138:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1139:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1140:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1141:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1142:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1143:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1147:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1148:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1149:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1150:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1151:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1152:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1153:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1154:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1155:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1156:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1157:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1158:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1159:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1160:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1161:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1162:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1163:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1164:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1165:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1166:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1167:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1168:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1169:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1170:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1171:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1172:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1173:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1174:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1175:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1176:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1177:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1178:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1179:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1180:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1181:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1182:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value
1183:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1184:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1187:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1188:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1189:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1190:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1191:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1192:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1193:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1194:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1195:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1196:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1197:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1198:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1199:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1200:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1201:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1202:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1203:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1204:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1205:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1206:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1207:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1208:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1209:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1210:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1211:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1216:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1217:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1218:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1219:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1220:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1221:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1222:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1223:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1224:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly.
1225:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1226:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1228:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1230:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1231:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1232:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1233:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1236:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1237:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1238:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1239:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1240:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1241:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1245:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1246:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1247:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1248:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1250:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1251:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1252:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1253:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1254:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1255:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1256:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1257:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1258:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1259:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1260:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1261:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1262:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1263:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1264:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1266:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1267:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1268:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1269:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1270:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1271:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1272:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
1273:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1274:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1275:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1276:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1277:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1278:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1279:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1280:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1281:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1282:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1283:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1284:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1285:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1286:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1290:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1291:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1292:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1293:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1294:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1295:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1296:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1297:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1298:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1299:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1300:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1301:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1302:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1303:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1304:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1305:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1306:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1309:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1310:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1311:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1312:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1313:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1314:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1316:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1317:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1318:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1319:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
1320:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1321:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1323:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1324:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1327:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1328:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1329:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1330:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1331:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1332:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1333:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1334:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte.
1335:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1336:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1337:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1338:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1339:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1340:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1341:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1342:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1343:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1344:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1345:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1346:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1347:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1348:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1349:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1350:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1351:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1352:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1353:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1354:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1359:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1360:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1361:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1362:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1363:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1364:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1365:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)
1366:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1367:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1368:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1369:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1370:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1372:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1373:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1374:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1375:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1376:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1380:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1381:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1384:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1386:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)
1387:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1388:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1389:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1392:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1393:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1394:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1395:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1396:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1397:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1398:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the
1399:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1400:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1401:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1402:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1405:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1406:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1407:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1408:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1409:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1410:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1411:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1412:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1413:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1414:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1415:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1416:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1417:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1418:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1419:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1420:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1421:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of word length. \n\n
1422:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of word length is enabled, word length is configured based on the
1423:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is con
1424:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1425:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1426:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1428:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1429:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1430:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableWordLengthControl(XMC_USIC_CH_t *const channel)
1431:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1432:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1433:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1434:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1435:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1436:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_WLEMD_Msk;
1437:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1438:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1439:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1440:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1441:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1442:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1443:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1444:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1445:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1446:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1447:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1448:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1449:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1451:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1452:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1453:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1454:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1455:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1456:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1457:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1458:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1459:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1460:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1461:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1462:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1463:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of word length. \n\n
1464:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of word length is disabled, word length has to configured explicitly.
1465:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Word length remains fixed until it is changed again.
1466:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1467:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1468:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetWordLength() \n\n\n
1469:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1470:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableWordLengthControl(XMC_USIC_CH_t *const channel)
1471:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1472:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_WLEMD_Msk;
1473:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1474:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1475:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1476:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1477:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1478:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1482:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1483:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1484:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1485:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1486:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1487:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1488:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1489:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1490:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1491:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1492:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1493:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1494:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1495:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1496:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1497:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1498:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1499:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1500:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1501:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1502:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1503:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1504:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1505:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1506:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1507:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1508:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1509:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1510:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1511:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1512:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1513:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1514:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1515:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1516:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1517:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1518:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1519:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be
1520:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled.
1521:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1522:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1524:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1526:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1528:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1534:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1535:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1536:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1537:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1538:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1539:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1540:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1541:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1542:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1543:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1544:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)
1545:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
  88              	 .loc 1 1545 0
  89              	 .cfi_startproc
  90              	 
  91              	 
  92              	 
  93 0000 80B4     	 push {r7}
  94              	.LCFI6:
  95              	 .cfi_def_cfa_offset 4
  96              	 .cfi_offset 7,-4
  97 0002 83B0     	 sub sp,sp,#12
  98              	.LCFI7:
  99              	 .cfi_def_cfa_offset 16
 100 0004 00AF     	 add r7,sp,#0
 101              	.LCFI8:
 102              	 .cfi_def_cfa_register 7
 103 0006 7860     	 str r0,[r7,#4]
 104 0008 0B46     	 mov r3,r1
 105 000a FB70     	 strb r3,[r7,#3]
1546:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
 106              	 .loc 1 1546 0
 107 000c FA78     	 ldrb r2,[r7,#3]
 108 000e 7B68     	 ldr r3,[r7,#4]
 109 0010 9A66     	 str r2,[r3,#104]
1547:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 110              	 .loc 1 1547 0
 111 0012 0C37     	 adds r7,r7,#12
 112              	.LCFI9:
 113              	 .cfi_def_cfa_offset 4
 114 0014 BD46     	 mov sp,r7
 115              	.LCFI10:
 116              	 .cfi_def_cfa_register 13
 117              	 
 118 0016 5DF8047B 	 ldr r7,[sp],#4
 119              	.LCFI11:
 120              	 .cfi_restore 7
 121              	 .cfi_def_cfa_offset 0
 122 001a 7047     	 bx lr
 123              	 .cfi_endproc
 124              	.LFE220:
 126              	 .section .text.XMC_USIC_CH_TXFIFO_Flush,"ax",%progbits
 127              	 .align 2
 128              	 .thumb
 129              	 .thumb_func
 131              	XMC_USIC_CH_TXFIFO_Flush:
 132              	.LFB230:
1548:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1553:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1554:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1557:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1560:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_InvalidateReadData(XMC_USIC_CH_t *const channel)
1562:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = USIC_CH_FMR_CRDV0_Msk | USIC_CH_FMR_CRDV1_Msk;
1564:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1567:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1568:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1569:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1570:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1571:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1572:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1573:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1574:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1575:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1576:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the
1577:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1578:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1579:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1580:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1581:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1582:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1583:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)
1584:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1586:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1587:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1588:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1589:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1590:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1591:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1592:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1593:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1594:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1595:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1596:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1597:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1598:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1599:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1603:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1604:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1605:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1606:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1607:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1608:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1609:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1610:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1611:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1612:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1613:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1614:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1615:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1616:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1617:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1618:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1619:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1620:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1621:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1622:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1623:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1624:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1625:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() }
1627:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1628:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1629:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1630:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the
1631:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1632:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1633:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1635:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1637:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1638:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
1639:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1640:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1645:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
1646:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1647:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1648:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1649:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
1650:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1651:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1652:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1653:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1654:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
1655:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
1656:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR = (channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) | ((limit << USIC_CH_TBCTR
1658:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1661:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1666:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1667:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1668:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1669:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1670:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1671:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
1672:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1673:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1675:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1676:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1677:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1678:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1679:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1680:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1681:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1682:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1683:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1684:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1685:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1686:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1687:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1688:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1689:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1690:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1691:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1692:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1693:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1694:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
1695:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent().
1696:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1697:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1698:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1699:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1701:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1702:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1703:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1704:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1705:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1706:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1710:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1711:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1712:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1713:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1714:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1715:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1716:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1717:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1718:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1719:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1720:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1721:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1722:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1723:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1724:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1725:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1727:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1728:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1729:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1730:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1731:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1732:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
1733:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1734:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1735:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1736:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1737:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1738:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1739:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1740:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1741:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1742:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1744:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1745:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1746:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1747:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1748:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1749:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1750:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1751:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1752:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1753:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1754:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1759:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1760:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param loc Input location. \n
1761:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1762:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1763:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1764:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit data can be loaded to TBUF by software by writing to the transmit buffer input
1765:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written
1766:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * to one of these input locations is stored in the transmit buffer TBUF. Additionally, the
1767:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * address of the written location is evaluated and can be used for additional control
1768:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * purposes. This 5-bit wide information (named Transmit Control Information TCI) can be
1769:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * used for different purposes in different protocols.
1770:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableWordLengthControl() \n
1773:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1774:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataEx(XMC_USIC_CH_t *const channel, const uint16_t data
1776:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1777:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[loc] = data;
1778:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1779:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1780:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1781:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1782:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1783:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1784:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1785:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1786:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1787:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1788:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1789:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1790:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1791:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1792:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1793:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_PutDataEx() \n
1796:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1797:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1798:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1799:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1800:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1801:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1802:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1803:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1804:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1805:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1806:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1807:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1808:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1809:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1810:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1811:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1812:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1813:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1814:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1815:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1816:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1817:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1818:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1819:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1821:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1822:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1823:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1824:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1825:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1826:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1827:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1828:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1833:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1834:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1835:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1836:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1837:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1839:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1840:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1841:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1842:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 133              	 .loc 1 1842 0
 134              	 .cfi_startproc
 135              	 
 136              	 
 137              	 
 138 0000 80B4     	 push {r7}
 139              	.LCFI12:
 140              	 .cfi_def_cfa_offset 4
 141              	 .cfi_offset 7,-4
 142 0002 83B0     	 sub sp,sp,#12
 143              	.LCFI13:
 144              	 .cfi_def_cfa_offset 16
 145 0004 00AF     	 add r7,sp,#0
 146              	.LCFI14:
 147              	 .cfi_def_cfa_register 7
 148 0006 7860     	 str r0,[r7,#4]
1843:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
 149              	 .loc 1 1843 0
 150 0008 7B68     	 ldr r3,[r7,#4]
 151 000a 4FF40042 	 mov r2,#32768
 152 000e C3F81821 	 str r2,[r3,#280]
1844:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 153              	 .loc 1 1844 0
 154 0012 0C37     	 adds r7,r7,#12
 155              	.LCFI15:
 156              	 .cfi_def_cfa_offset 4
 157 0014 BD46     	 mov sp,r7
 158              	.LCFI16:
 159              	 .cfi_def_cfa_register 13
 160              	 
 161 0016 5DF8047B 	 ldr r7,[sp],#4
 162              	.LCFI17:
 163              	 .cfi_restore 7
 164              	 .cfi_def_cfa_offset 0
 165 001a 7047     	 bx lr
 166              	 .cfi_endproc
 167              	.LFE230:
 169              	 .section .text.XMC_USIC_CH_TXFIFO_IsFull,"ax",%progbits
 170              	 .align 2
 171              	 .thumb
 172              	 .thumb_func
 174              	XMC_USIC_CH_TXFIFO_IsFull:
 175              	.LFB231:
1845:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1846:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1847:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1848:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1849:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1850:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1851:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1852:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1853:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1854:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1855:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1856:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1857:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1859:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1861:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 176              	 .loc 1 1861 0
 177              	 .cfi_startproc
 178              	 
 179              	 
 180              	 
 181 0000 80B4     	 push {r7}
 182              	.LCFI18:
 183              	 .cfi_def_cfa_offset 4
 184              	 .cfi_offset 7,-4
 185 0002 83B0     	 sub sp,sp,#12
 186              	.LCFI19:
 187              	 .cfi_def_cfa_offset 16
 188 0004 00AF     	 add r7,sp,#0
 189              	.LCFI20:
 190              	 .cfi_def_cfa_register 7
 191 0006 7860     	 str r0,[r7,#4]
1862:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
 192              	 .loc 1 1862 0
 193 0008 7B68     	 ldr r3,[r7,#4]
 194 000a D3F81431 	 ldr r3,[r3,#276]
 195 000e 03F48053 	 and r3,r3,#4096
 196 0012 002B     	 cmp r3,#0
 197 0014 14BF     	 ite ne
 198 0016 0123     	 movne r3,#1
 199 0018 0023     	 moveq r3,#0
 200 001a DBB2     	 uxtb r3,r3
1863:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 201              	 .loc 1 1863 0
 202 001c 1846     	 mov r0,r3
 203 001e 0C37     	 adds r7,r7,#12
 204              	.LCFI21:
 205              	 .cfi_def_cfa_offset 4
 206 0020 BD46     	 mov sp,r7
 207              	.LCFI22:
 208              	 .cfi_def_cfa_register 13
 209              	 
 210 0022 5DF8047B 	 ldr r7,[sp],#4
 211              	.LCFI23:
 212              	 .cfi_restore 7
 213              	 .cfi_def_cfa_offset 0
 214 0026 7047     	 bx lr
 215              	 .cfi_endproc
 216              	.LFE231:
 218              	 .section .text.XMC_USIC_CH_TXFIFO_IsEmpty,"ax",%progbits
 219              	 .align 2
 220              	 .thumb
 221              	 .thumb_func
 223              	XMC_USIC_CH_TXFIFO_IsEmpty:
 224              	.LFB232:
1864:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1869:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1870:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1873:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1874:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO,
1875:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1876:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1877:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1878:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1879:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1880:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1881:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 225              	 .loc 1 1881 0
 226              	 .cfi_startproc
 227              	 
 228              	 
 229              	 
 230 0000 80B4     	 push {r7}
 231              	.LCFI24:
 232              	 .cfi_def_cfa_offset 4
 233              	 .cfi_offset 7,-4
 234 0002 83B0     	 sub sp,sp,#12
 235              	.LCFI25:
 236              	 .cfi_def_cfa_offset 16
 237 0004 00AF     	 add r7,sp,#0
 238              	.LCFI26:
 239              	 .cfi_def_cfa_register 7
 240 0006 7860     	 str r0,[r7,#4]
1882:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
 241              	 .loc 1 1882 0
 242 0008 7B68     	 ldr r3,[r7,#4]
 243 000a D3F81431 	 ldr r3,[r3,#276]
 244 000e 03F40063 	 and r3,r3,#2048
 245 0012 002B     	 cmp r3,#0
 246 0014 14BF     	 ite ne
 247 0016 0123     	 movne r3,#1
 248 0018 0023     	 moveq r3,#0
 249 001a DBB2     	 uxtb r3,r3
1883:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 250              	 .loc 1 1883 0
 251 001c 1846     	 mov r0,r3
 252 001e 0C37     	 adds r7,r7,#12
 253              	.LCFI27:
 254              	 .cfi_def_cfa_offset 4
 255 0020 BD46     	 mov sp,r7
 256              	.LCFI28:
 257              	 .cfi_def_cfa_register 13
 258              	 
 259 0022 5DF8047B 	 ldr r7,[sp],#4
 260              	.LCFI29:
 261              	 .cfi_restore 7
 262              	 .cfi_def_cfa_offset 0
 263 0026 7047     	 bx lr
 264              	 .cfi_endproc
 265              	.LFE232:
 267              	 .section .text.XMC_USIC_CH_RXFIFO_Flush,"ax",%progbits
 268              	 .align 2
 269              	 .thumb
 270              	 .thumb_func
 272              	XMC_USIC_CH_RXFIFO_Flush:
 273              	.LFB240:
1884:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1885:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1886:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1887:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1888:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n
1889:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1890:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1891:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1892:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1893:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1894:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1895:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1896:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1897:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1898:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1899:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1900:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1901:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1902:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1903:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1908:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1909:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1910:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1911:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1912:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1913:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1914:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1915:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1916:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1917:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1918:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1919:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1920:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1921:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1922:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1923:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1924:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_TBERI_Msk));
1925:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1926:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1927:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1928:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1929:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1930:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1931:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1932:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1933:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1934:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1935:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1936:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1937:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
1938:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1939:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
1940:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1941:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1942:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1943:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1944:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1945:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1946:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
1947:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
1948:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1949:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
1950:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1951:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1952:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1953:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1954:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1955:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1956:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1957:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1958:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1959:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1960:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1961:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1962:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1963:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1964:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1965:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1966:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1967:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1968:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1969:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1971:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1972:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** */
1973:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1974:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1975:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1976:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1977:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
1978:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
1979:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1980:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1981:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1982:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1983:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1984:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1985:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1986:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_RXFIFO_SetTriggerLimit() }
1988:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1989:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1990:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1991:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the
1992:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1993:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
1994:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1995:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1996:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
1997:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1998:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1999:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
2000:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2001:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
2002:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2003:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2004:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
2005:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
2006:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2007:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2008:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2009:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
2010:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2011:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2012:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() \n\n\n
2013:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
2014:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
2015:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
2016:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
2017:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR = (channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) | ((limit << USIC_CH_RBCTR
2018:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
2019:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2020:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
2021:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2022:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2023:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
2024:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2025:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2026:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2027:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
2028:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
2029:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
2030:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
2031:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2032:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
2033:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
2034:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2035:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2036:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
2037:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
2038:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
2039:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
2040:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
2041:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
2042:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2043:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2044:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
2045:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2046:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2047:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
2048:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
2049:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
2050:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2051:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2052:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2053:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
2054:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
2055:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent().
2056:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
2057:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
2058:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2059:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2060:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2061:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
2062:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
2063:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
2064:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
2065:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
2066:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2067:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
2068:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2069:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2070:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
2071:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
2072:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
2073:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
2074:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
2075:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2076:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2077:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2078:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
2079:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
2080:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
2081:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
2082:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
2083:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
2084:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
2085:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2086:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
2087:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2088:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2089:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2090:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
2091:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
2092:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
2093:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
2094:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2095:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
2096:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2097:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2098:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
2099:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
2100:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2101:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2102:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
2103:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
2104:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
2105:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
2106:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
2107:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2108:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2109:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
2110:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
2111:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
2112:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
2113:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
2114:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
2115:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2116:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
2117:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2118:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2119:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2120:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2121:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2122:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
2123:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
2124:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2125:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2126:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
2127:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
2128:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
2129:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 274              	 .loc 1 2129 0
 275              	 .cfi_startproc
 276              	 
 277              	 
 278              	 
 279 0000 80B4     	 push {r7}
 280              	.LCFI30:
 281              	 .cfi_def_cfa_offset 4
 282              	 .cfi_offset 7,-4
 283 0002 83B0     	 sub sp,sp,#12
 284              	.LCFI31:
 285              	 .cfi_def_cfa_offset 16
 286 0004 00AF     	 add r7,sp,#0
 287              	.LCFI32:
 288              	 .cfi_def_cfa_register 7
 289 0006 7860     	 str r0,[r7,#4]
2130:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
 290              	 .loc 1 2130 0
 291 0008 7B68     	 ldr r3,[r7,#4]
 292 000a 4FF48042 	 mov r2,#16384
 293 000e C3F81821 	 str r2,[r3,#280]
2131:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 294              	 .loc 1 2131 0
 295 0012 0C37     	 adds r7,r7,#12
 296              	.LCFI33:
 297              	 .cfi_def_cfa_offset 4
 298 0014 BD46     	 mov sp,r7
 299              	.LCFI34:
 300              	 .cfi_def_cfa_register 13
 301              	 
 302 0016 5DF8047B 	 ldr r7,[sp],#4
 303              	.LCFI35:
 304              	 .cfi_restore 7
 305              	 .cfi_def_cfa_offset 0
 306 001a 7047     	 bx lr
 307              	 .cfi_endproc
 308              	.LFE240:
 310              	 .section .text.XMC_USIC_CH_RXFIFO_IsEmpty,"ax",%progbits
 311              	 .align 2
 312              	 .thumb
 313              	 .thumb_func
 315              	XMC_USIC_CH_RXFIFO_IsEmpty:
 316              	.LFB242:
2132:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2133:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
2134:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2135:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2136:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
2137:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
2138:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2139:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2140:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
2141:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
2142:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
2143:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2144:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2145:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
2146:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
2147:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
2148:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
2149:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
2150:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
2151:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** 
2152:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** /**
2153:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2154:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2155:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
2156:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
2157:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2158:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2159:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
2160:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
2161:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
2162:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
2163:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  *
2164:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2165:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2166:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****  */
2167:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
2168:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** {
 317              	 .loc 1 2168 0
 318              	 .cfi_startproc
 319              	 
 320              	 
 321              	 
 322 0000 80B4     	 push {r7}
 323              	.LCFI36:
 324              	 .cfi_def_cfa_offset 4
 325              	 .cfi_offset 7,-4
 326 0002 83B0     	 sub sp,sp,#12
 327              	.LCFI37:
 328              	 .cfi_def_cfa_offset 16
 329 0004 00AF     	 add r7,sp,#0
 330              	.LCFI38:
 331              	 .cfi_def_cfa_register 7
 332 0006 7860     	 str r0,[r7,#4]
2169:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
 333              	 .loc 1 2169 0
 334 0008 7B68     	 ldr r3,[r7,#4]
 335 000a D3F81431 	 ldr r3,[r3,#276]
 336 000e 03F00803 	 and r3,r3,#8
 337 0012 002B     	 cmp r3,#0
 338 0014 14BF     	 ite ne
 339 0016 0123     	 movne r3,#1
 340 0018 0023     	 moveq r3,#0
 341 001a DBB2     	 uxtb r3,r3
2170:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_usic.h **** }
 342              	 .loc 1 2170 0
 343 001c 1846     	 mov r0,r3
 344 001e 0C37     	 adds r7,r7,#12
 345              	.LCFI39:
 346              	 .cfi_def_cfa_offset 4
 347 0020 BD46     	 mov sp,r7
 348              	.LCFI40:
 349              	 .cfi_def_cfa_register 13
 350              	 
 351 0022 5DF8047B 	 ldr r7,[sp],#4
 352              	.LCFI41:
 353              	 .cfi_restore 7
 354              	 .cfi_def_cfa_offset 0
 355 0026 7047     	 bx lr
 356              	 .cfi_endproc
 357              	.LFE242:
 359              	 .section .text.XMC_SPI_CH_Receive,"ax",%progbits
 360              	 .align 2
 361              	 .thumb
 362              	 .thumb_func
 364              	XMC_SPI_CH_Receive:
 365              	.LFB254:
 366              	 .file 2 "C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc/xmc_spi.h"
   1:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2020-12-05
   4:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
   7:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.
  11:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  12:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  14:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * do so, all subject to the following:
  20:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  21:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * a source language processor.
  27:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  28:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * at XMCSupport@infineon.com.
  39:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
  40:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  41:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  42:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  43:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  44:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  45:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  46:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  47:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  48:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  49:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and
  50:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  51:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  52:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  53:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  54:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  55:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  56:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  57:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  58:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  59:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  60:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  61:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  62:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  64:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  65:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  66:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  67:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  68:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  69:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  70:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  71:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  72:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  73:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  74:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  75:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  76:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  77:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-03-30:
  78:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Fix XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX macro value
  79:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  80:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-05-07:
  81:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added normal_divider_mode to XMC_SPI_CH_CONFIG_t configuration structure.
  82:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  83:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetBaudrateEx()
  84:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  85:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-09-04:
  86:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CLOCK_MODE_t enum
  87:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  88:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 2020-12-05:
  89:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  90:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  91:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond
  92:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
  93:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
  94:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
  95:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  96:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  97:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
  98:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  99:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
 100:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 101:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
 102:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 103:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 104:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
 105:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 106:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 107:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 108:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 109:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
 110:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
 111:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 112:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module.
 113:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
 114:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
 115:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
 116:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
 117:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
 118:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 119:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 120:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 121:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 122:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 123:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 124:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 125:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 126:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 127:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 128:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 129:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 130:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 131:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 132:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 133:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 134:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 135:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 136:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 137:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 138:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 139:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 140:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 141:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 142:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 143:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 144:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 145:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 146:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 147:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 148:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 149:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 150:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 151:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 152:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 153:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 154:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 155:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 156:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 157:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 158:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 159:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 160:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 161:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 162:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 163:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 164:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 165:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 166:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 167:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 168:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 169:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 170:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 171:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 172:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 173:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 174:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 175:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 176:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 177:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 178:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 179:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 180:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 181:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 182:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 183:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 184:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 185:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 186:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 187:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 188:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 189:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 190:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 191:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 192:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 193:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 194:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 195:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 196:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 197:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 198:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 199:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 200:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 201:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 202:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 203:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 204:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 205:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 206:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 207:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 208:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 209:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 210:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 211:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 212:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 213:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 214:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 215:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 216:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 217:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 218:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 219:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 220:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 221:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 222:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 223:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 224:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 225:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 226:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 227:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 228:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 229:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 230:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 231:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 232:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 233:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 234:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 235:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 236:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 237:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 238:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 239:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 240:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 241:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 242:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 243:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 244:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 245:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 246:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 247:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 248:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 249:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 250:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 251:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 252:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 253:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 254:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 255:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 256:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 257:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 258:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 259:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 260:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 261:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 262:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 263:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 264:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 265:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 266:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 267:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 268:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 269:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 270:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 271:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 272:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */
 273:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 274:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 275:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 276:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 277:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 278:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 279:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 280:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 281:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 282:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 283:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 284:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 285:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */
 286:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 5UL, /**< SPI standard half duplex mode */
 287:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL = 6UL,                /**< SPI half duplex mode with dual data lines */
 288:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD = 7UL                 /**< SPI half duplex mode with quad data lines */
 289:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 290:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 291:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 292:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 293:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 294:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 295:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 296:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 297:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 298:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 299:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 300:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 301:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 302:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 303:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 304:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 305:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 306:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 307:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 308:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI clock modes
 309:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 310:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 311:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=0 is a clock which idles at 0, and each cycle consists of a pulse of 1. That is, the leadin
 312:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=1 is a clock which idles at 1, and each cycle consists of a pulse of 0. That is, the leadin
 313:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /* CPHA=0, the "out" side changes the data on the trailing edge of the preceding clock cycle, while
 314:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****    The out side holds the data valid until the trailing edge of the current clock cycle. For the fi
 315:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /* For CPHA=1, the "out" side changes the data on the leading edge of the current clock cycle, whil
 316:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   The out side holds the data valid until the leading edge of the following clock cycle. For the la
 317:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CLOCK_MODE
 318:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 319:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
 320:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
 321:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
 322:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED
 323:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CLOCK_MODE_t;
 324:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 325:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 326:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 327:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** */
 328:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 329:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 330:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 331:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 332:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 333:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 334:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 335:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 336:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 337:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 338:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 339:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 340:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 341:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 342:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 343:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 344:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 345:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 346:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 347:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 348:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 349:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 350:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 351:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 352:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 353:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 354:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 355:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							                /**< Module baud rate for communication */
 356:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   bool normal_divider_mode;                       /**< Selects normal divider mode for baudrate gen
 357:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 358:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 359:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 360:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 361:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 362:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 363:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 364:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 365:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 366:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 367:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 368:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 369:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 370:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 371:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 372:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 373:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 374:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 375:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 376:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 377:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 378:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 379:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 380:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 381:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 382:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 383:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 384:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 385:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 386:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 387:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 388:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 389:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 390:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 391:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 392:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 393:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 394:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 395:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 396:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 397:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 398:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 399:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 400:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 401:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config, bool 
 402:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 403:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 404:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 405:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 406:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 407:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 408:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 409:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 410:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 411:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 412:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 413:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 414:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 415:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 416:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 417:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 418:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 419:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 420:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 421:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 422:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 423:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 424:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 425:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 426:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 427:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 428:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 429:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 430:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 431:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 432:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const
 433:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 434:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_InitEx(channel, config, true);
 435:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 436:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 437:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 438:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 439:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 440:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 441:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 442:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 443:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 444:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 445:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 446:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 447:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 448:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 449:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 450:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 451:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 452:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 453:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 454:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 455:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 456:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 457:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 458:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 459:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 460:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 461:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 462:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 463:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 464:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 465:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 466:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 467:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 468:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 469:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 470:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 471:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 472:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 473:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 474:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 475:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 476:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 477:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 478:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 479:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 480:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 481:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 482:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 483:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 484:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 485:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 486:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 487:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 488:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 489:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 490:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 491:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 492:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 493:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 494:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 495:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 496:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 497:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 498:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 499:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 500:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 501:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 502:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 503:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 504:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 505:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 506:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 507:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 508:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 509:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 510:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 511:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 512:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 513:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 514:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 515:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 516:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 517:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 518:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 519:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 520:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 521:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 522:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 523:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 524:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 525:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 526:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 527:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 528:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 529:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 530:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 531:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 532:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 533:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 534:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 535:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 536:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 537:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 538:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 539:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 540:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 541:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 542:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 543:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 544:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 545:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 546:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 547:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 548:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 549:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 550:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 551:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 552:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 553:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 554:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 555:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 556:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                  (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 557:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 558:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 559:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 560:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 561:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 562:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 563:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 564:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 565:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 566:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 567:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 568:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 569:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 570:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 571:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 572:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 573:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 574:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 575:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 576:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 577:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 578:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 579:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 580:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 581:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 582:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 583:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 584:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 585:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 586:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 587:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 588:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 589:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 590:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 591:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 592:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 593:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 594:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 595:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 596:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 367              	 .loc 2 596 0
 368              	 .cfi_startproc
 369              	 
 370              	 
 371 0000 80B5     	 push {r7,lr}
 372              	.LCFI42:
 373              	 .cfi_def_cfa_offset 8
 374              	 .cfi_offset 7,-8
 375              	 .cfi_offset 14,-4
 376 0002 82B0     	 sub sp,sp,#8
 377              	.LCFI43:
 378              	 .cfi_def_cfa_offset 16
 379 0004 00AF     	 add r7,sp,#0
 380              	.LCFI44:
 381              	 .cfi_def_cfa_register 7
 382 0006 7860     	 str r0,[r7,#4]
 383 0008 0B46     	 mov r3,r1
 384 000a FB70     	 strb r3,[r7,#3]
 597:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 598:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 385              	 .loc 2 598 0
 386 000c FB78     	 ldrb r3,[r7,#3]
 387 000e 23F00403 	 bic r3,r3,#4
 388 0012 DBB2     	 uxtb r3,r3
 389 0014 7868     	 ldr r0,[r7,#4]
 390 0016 4FF6FF71 	 movw r1,#65535
 391 001a 1A46     	 mov r2,r3
 392 001c FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 599:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 393              	 .loc 2 599 0
 394 0020 0837     	 adds r7,r7,#8
 395              	.LCFI45:
 396              	 .cfi_def_cfa_offset 8
 397 0022 BD46     	 mov sp,r7
 398              	.LCFI46:
 399              	 .cfi_def_cfa_register 13
 400              	 
 401 0024 80BD     	 pop {r7,pc}
 402              	 .cfi_endproc
 403              	.LFE254:
 405 0026 00BF     	 .section .text.XMC_SPI_CH_GetStatusFlag,"ax",%progbits
 406              	 .align 2
 407              	 .thumb
 408              	 .thumb_func
 410              	XMC_SPI_CH_GetStatusFlag:
 411              	.LFB257:
 600:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 601:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 602:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 603:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 604:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 605:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 606:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 607:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 608:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 609:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 610:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 611:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 612:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 613:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 614:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 615:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 616:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 617:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 618:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 619:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 620:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 621:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 622:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 623:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 624:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 625:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 626:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 627:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 628:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 629:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 630:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 631:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 632:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 633:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 634:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 635:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 636:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 637:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 638:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 639:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 640:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 641:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. This is not set during XMC_SPI_CH_Init().
 642:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Invoke XMC_SPI_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 643:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 644:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 645:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderLsbFirst()
 646:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 647:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 648:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 649:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 650:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 651:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 652:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 653:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 654:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be enabled.
 655:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 656:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 657:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 658:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 659:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 660:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 661:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the SPI protocol specific events, by configuring PCR register.\n\n
 662:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Events can be enabled as needed using XMC_SPI_CH_EnableEvent().
 663:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent() can be used to disable the events.
 664:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 665:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 666:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent()
 667:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 668:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 669:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 670:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 671:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 672:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be disabled.
 673:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 674:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 675:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 676:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 677:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 678:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 679:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the SPI protocol specific events, by configuring PCR register.\n\n
 680:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * After disabling the events, XMC_SPI_CH_EnableEvent() has to be invoked to re-enable the events.
 681:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 682:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 683:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEvent()
 684:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 685:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 686:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 687:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 688:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 689:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 690:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint32_t Status of SPI protocol events.
 691:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 692:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 693:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Returns the status of the events, by reading PSR register.\n\n
 694:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This indicates the status of the all the events, for SPI communication.
 695:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 696:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 697:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_ClearStatusFlag()
 698:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 699:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE uint32_t XMC_SPI_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 700:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 412              	 .loc 2 700 0
 413              	 .cfi_startproc
 414              	 
 415              	 
 416              	 
 417 0000 80B4     	 push {r7}
 418              	.LCFI47:
 419              	 .cfi_def_cfa_offset 4
 420              	 .cfi_offset 7,-4
 421 0002 83B0     	 sub sp,sp,#12
 422              	.LCFI48:
 423              	 .cfi_def_cfa_offset 16
 424 0004 00AF     	 add r7,sp,#0
 425              	.LCFI49:
 426              	 .cfi_def_cfa_register 7
 427 0006 7860     	 str r0,[r7,#4]
 701:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   return channel->PSR_SSCMode;
 428              	 .loc 2 701 0
 429 0008 7B68     	 ldr r3,[r7,#4]
 430 000a 9B6C     	 ldr r3,[r3,#72]
 702:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 431              	 .loc 2 702 0
 432 000c 1846     	 mov r0,r3
 433 000e 0C37     	 adds r7,r7,#12
 434              	.LCFI50:
 435              	 .cfi_def_cfa_offset 4
 436 0010 BD46     	 mov sp,r7
 437              	.LCFI51:
 438              	 .cfi_def_cfa_register 13
 439              	 
 440 0012 5DF8047B 	 ldr r7,[sp],#4
 441              	.LCFI52:
 442              	 .cfi_restore 7
 443              	 .cfi_def_cfa_offset 0
 444 0016 7047     	 bx lr
 445              	 .cfi_endproc
 446              	.LFE257:
 448              	 .section .text.XMC_SPI_CH_ClearStatusFlag,"ax",%progbits
 449              	 .align 2
 450              	 .thumb
 451              	 .thumb_func
 453              	XMC_SPI_CH_ClearStatusFlag:
 454              	.LFB258:
 703:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 704:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 705:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 706:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param flag Protocol event status to be cleared for detection of next occurence.
 707:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_STATUS_FLAG_t for valid values. <b>OR</b> combinations of these 
 708:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 709:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 710:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 711:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 712:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Clears the events specified, by setting PSCR register.\n\n
 713:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * During communication the events occurred have to be cleared to detect their next occurence.\n
 714:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
 715:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *       event has to be cleared after transmission of each data word. Otherwise next event cannot 
 716:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 717:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 718:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetStatusFlag()
 719:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 720:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 721:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 455              	 .loc 2 721 0
 456              	 .cfi_startproc
 457              	 
 458              	 
 459              	 
 460 0000 80B4     	 push {r7}
 461              	.LCFI53:
 462              	 .cfi_def_cfa_offset 4
 463              	 .cfi_offset 7,-4
 464 0002 83B0     	 sub sp,sp,#12
 465              	.LCFI54:
 466              	 .cfi_def_cfa_offset 16
 467 0004 00AF     	 add r7,sp,#0
 468              	.LCFI55:
 469              	 .cfi_def_cfa_register 7
 470 0006 7860     	 str r0,[r7,#4]
 471 0008 3960     	 str r1,[r7]
 722:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PSCR |= flag;
 472              	 .loc 2 722 0
 473 000a 7B68     	 ldr r3,[r7,#4]
 474 000c DA6C     	 ldr r2,[r3,#76]
 475 000e 3B68     	 ldr r3,[r7]
 476 0010 1A43     	 orrs r2,r2,r3
 477 0012 7B68     	 ldr r3,[r7,#4]
 478 0014 DA64     	 str r2,[r3,#76]
 723:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 479              	 .loc 2 723 0
 480 0016 0C37     	 adds r7,r7,#12
 481              	.LCFI56:
 482              	 .cfi_def_cfa_offset 4
 483 0018 BD46     	 mov sp,r7
 484              	.LCFI57:
 485              	 .cfi_def_cfa_register 13
 486              	 
 487 001a 5DF8047B 	 ldr r7,[sp],#4
 488              	.LCFI58:
 489              	 .cfi_restore 7
 490              	 .cfi_def_cfa_offset 0
 491 001e 7047     	 bx lr
 492              	 .cfi_endproc
 493              	.LFE258:
 495              	 .section .text.XMC_SPI_CH_SetInputSource,"ax",%progbits
 496              	 .align 2
 497              	 .thumb
 498              	 .thumb_func
 500              	XMC_SPI_CH_SetInputSource:
 501              	.LFB276:
 724:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 725:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 726:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 727:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 728:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 729:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 730:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 731:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the generation of Master clock by setting PCR.MCLK bit.\n\n
 732:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This clock can be used as a clock reference for external devices. This is not enabled during ini
 733:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(). Invoke XMC_SPI_CH_EnableMasterClock() to enable as needed in the program, or 
 734:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableMasterClock().
 735:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 736:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableMasterClock()
 738:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 739:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableMasterClock(XMC_USIC_CH_t *const channel)
 740:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 741:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_MCLK_Msk;
 742:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 743:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 744:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 745:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 746:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 747:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 748:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 749:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 750:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the generation of Master clock by clearing PCR.MCLK bit.\n\n
 751:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This clock can be enabled by invoking XMC_SPI_CH_EnableMasterClock() as needed in the program.
 752:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 753:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 754:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableMasterClock()
 755:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 756:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableMasterClock(XMC_USIC_CH_t *const channel)
 757:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 758:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_MCLK_Msk;
 759:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 760:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef USIC_CH_PCR_SSCMode_SLPHSEL_Msk
 761:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 762:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 763:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 764:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 765:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 766:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 767:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Data bits are shifted out with the leading edge of the shift clock signal and latched in with th
 768:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 769:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 770:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DataLatchedInLeadingEdge()
 771:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 772:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DataLatchedInTrailingEdge(XMC_USIC_CH_t *const channel)
 773:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 774:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_SLPHSEL_Msk;
 775:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 776:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 777:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 778:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 779:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 780:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 781:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 782:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 783:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * The first data bit is shifted out when the data shift unit receives a low to high transition fro
 784:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * stage. Subsequent bits are shifted out with the trailing edge of the shift clock signal. Data bi
 785:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * always latched in with the leading edge.
 786:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 787:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 788:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DataLatchedInTrailingEdge()
 789:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 790:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DataLatchedInLeadingEdge(XMC_USIC_CH_t *const channel)
 791:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 792:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= USIC_CH_PCR_SSCMode_SLPHSEL_Msk;
 793:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 794:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 795:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 796:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 797:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 798:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 799:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 800:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 801:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the delay after each word, by setting PCR.TIWEN bit.\n\n
 802:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * The inter word delay starts at the end of last SCLK cycle of data word. During this time no cloc
 803:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * generated and MSLS signal stays active. If inter word delay is not enabled, last data bit of a d
 804:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * followed by the first data bit of the next data word. This is not enabled in XMC_SPI_CH_Init(). 
 805:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay() has to be invoked as needed in the program. And can be disable
 806:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableInterwordDelay().
 807:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 808:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 809:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableInterwordDelay()
 810:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 811:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableInterwordDelay(XMC_USIC_CH_t *const channel)
 812:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 813:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_TIWEN_Msk;
 814:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 815:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 816:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 817:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 818:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 819:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 820:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 821:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 822:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the delay after after each word, by clearing PCR.TIWEN bit.\n\n
 823:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * So the last data bit of a data word is directly followed by the first data bit of the next data 
 824:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * be enabled by invoking XMC_SPI_CH_EnableInterwordDelay().
 825:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 826:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 827:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay()
 828:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 829:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableInterwordDelay(XMC_USIC_CH_t *const channel)
 830:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 831:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_TIWEN_Msk;
 832:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 833:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 834:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 835:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 836:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param tinterword_delay_ns delay in terms of nano seconds.
 837:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 838:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 839:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 840:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 841:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the inter word delay by setting PCR.PCTQ1, PCR.DCTQ1 bit fields.\n\n
 842:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * The inter word delay is dependent on the peripheral clock. The maximum possible value is calcula
 843:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * below formula\n
 844:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *            Maximum inter word delay = ((1 + PCTQ1_max)(1 + DCTQ1_max)) / peripheral clock\n
 845:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *                                       where PCTQ1_max = 3 and DCTQ1_max = 31\n
 846:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * After configuring the inter word delay, this has to be enabled by invoking XMC_SPI_CH_EnableInte
 847:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 848:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 849:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay(),XMC_SPI_CH_SetInterwordDelaySCLK()
 850:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 851:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_SetInterwordDelay(XMC_USIC_CH_t *const channel, uint32_t tinterword_delay_ns);
 852:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 853:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 854:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 855:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param sclk_period  in terms of clk cycles.
 856:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 857:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 858:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 859:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 860:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the inter word delay by setting PCR.DCTQ1 bit fields.\n\n
 861:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This delay is dependent on the peripheral clock. The maximum possible value supported by this AP
 862:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * is 32 clock cycles.
 863:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * After configuring the inter word delay, this has to be enabled by invoking XMC_SPI_CH_EnableInte
 864:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 865:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 866:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay(),XMC_SPI_CH_EnableInterwordDelay()
 867:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 868:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetInterwordDelaySCLK(XMC_USIC_CH_t *const channel, uint32_t sclk_p
 869:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 870:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode = (uint32_t)((channel->PCR_SSCMode) & (~(USIC_CH_PCR_SSCMode_DCTQ1_Msk |
 871:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                     USIC_CH_PCR_SSCMode_PCTQ1_Msk |
 872:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                     USIC_CH_PCR_SSCMode_CTQSEL1_Msk))) |
 873:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                          (((sclk_period - 1U) <<  USIC_CH_PCR_SSCMode_DCTQ1_Pos) |
 874:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                           (0x02U <<  USIC_CH_PCR_SSCMode_CTQSEL1_Pos));
 875:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 876:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 877:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 878:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 879:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param sclk_period delay in terms of sclk clock cycles.
 880:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 881:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 882:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 883:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 884:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the leading/trailing delay by setting BRG.DCTQ bit field.\n\n
 885:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This delay is dependent on the peripheral clock. The maximum possible value supported by this AP
 886:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * is 30 clock cycles.
 887:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 888:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 889:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetSlaveSelectDelay(XMC_USIC_CH_t *const channel, uint32_t sclk_per
 890:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 891:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 892:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 893:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                    USIC_CH_BRG_PCTQ_Msk)) |
 894:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                  (((sclk_period - 1U) << USIC_CH_BRG_DCTQ_Pos) | (0x01U << USIC_CH_BRG_PCTQ_Pos));
 895:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 896:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 897:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 898:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 899:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 900:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 901:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 902:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 903:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 904:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure to keep MSLS(Slave select signal) active even after finishing the current data frame,
 905:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * by setting PCR.FEM bit.\n\n
 906:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically used during the transmission of multi-data word frames, where there is possibi
 907:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * delivering the data. Frame end mode is enabled in XMC_SPI_CH_Init() during initialization. To di
 908:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableFEM() can be invoked as needed in the program.
 909:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 910:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 911:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableFEM()
 912:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 913:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableFEM(XMC_USIC_CH_t *const channel)
 914:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 915:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_FEM_Msk;
 916:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 917:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 918:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 919:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 920:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 921:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 922:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 923:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 924:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure to disable the MSLS(Slave select signal) if the current data frame is considered as fi
 925:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * by setting PCR.FEM bit.\n\n
 926:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 927:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * When the last bit of a data word has been sent out and the transmit buffer TBUF does not contain
 928:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * considered as frame is ended and MSLS(Slave select signal) is disabled.
 929:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 930:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 931:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableFEM()
 932:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 933:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableFEM(XMC_USIC_CH_t *const channel)
 934:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 935:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_FEM_Msk;
 936:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 937:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 938:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 939:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 940:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param passive_level polarity and delay of the selected shift clock.\n
 941:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *                      Refer @ref XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t for valid inputs.
 942:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param clock_output shift clock source.\n
 943:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *                     Refer @ref XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t for valid inputs.
 944:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 945:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 946:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 947:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 948:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the shift clock source with the selected polarity and delay by setting BRG.SCLKOSEL a
 949:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * In Master mode operation, shift clock is generated by the internal baud rate generator. This SCL
 950:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * for external slave devices by SCLKOUT signal.\n
 951:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * In Slave mode, the signal is received from the external master. So the DX1(input) stage has to b
 952:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * The shift clock output(SCLKOUT) signal polarity can be set relative to SCLK, with the delay of h
 953:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * period. These settings are applicable only in master mode.
 954:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 955:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
 956:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****     const XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t passive_level,
 957:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****     const XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t clock_output)
 958:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 959:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_ConfigureShiftClockOutput(channel, (XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t)passi
 960:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****                                         (XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t)clock_output);
 961:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 962:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 963:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 964:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 965:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  word_length Number of bits to be configured for a data word. \n
 966:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *         \b Range: 1 to 16.
 967:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 968:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 969:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 970:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
 971:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the data word length.\n\n
 972:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
 973:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 974:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 975:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetFrameLength()
 976:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
 977:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_leng
 978:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 979:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetWordLength(channel, word_length);
 980:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 981:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
 982:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
 983:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 984:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  frame_length Number of bits in a frame. \n
 985:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *                \b Range: 1 to 64. If the value 64 is configured, then the frame does not
 986:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *                automatically end. User should explicitly end the frame.
 987:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 988:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 989:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 990:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
 991:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Define the data frame length.\n\n
 992:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the number of bits to be serially transmitted in a frame.
 993:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * The frame length should be multiples of word length. If the value is set to 64, the frame does n
 994:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * automatically end. Use XMC_SPI_CH_DisableSlaveSelect() to end the frame after all the data
 995:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * is transmitted.
 996:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
 997:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 998:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl(), XMC_SPI_CH_DisableSlaveSele
 999:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
1000:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_le
1001:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
1002:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetFrameLength(channel, frame_length);
1003:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
1004:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
1005:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
1006:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1007:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1008:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1009:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1010:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1011:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure the handling of start of frame through software, by setting TCSR.SOF bit.\n\n
1012:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This can be used if the software handles the TBUF data without FIFO. If SOF is set, a valid cont
1013:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * considered as first word of a new frame by finishing the currently running frame. For software h
1014:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * it is recommended to configure TCSR.WLEMD as 0. This is not configured during initialization. XM
1015:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * can be called as needed in the program and can be disabled by XMC_SPI_CH_DisableSOF().
1016:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1017:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
1018:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSOF()
1019:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
1020:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableSOF(XMC_USIC_CH_t *const channel)
1021:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
1022:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_SOF_Msk;
1023:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
1024:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
1025:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
1026:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1027:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1028:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1029:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1030:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1031:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the control of the handling start of frame through hardware, by clearing TCSR.SOF bit.\n\n
1032:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Typically this can be disabled, where the transmission control is done by the hardware.
1033:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1034:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
1035:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSOF()
1036:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
1037:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableSOF(XMC_USIC_CH_t *const channel)
1038:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
1039:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_SOF_Msk;
1040:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
1041:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
1042:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
1043:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1044:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1045:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1046:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1047:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1048:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure the handling of end of frame through software, by setting TCSR.EOF bit.\n\n
1049:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * This can be used if the software handles the TBUF data without FIFO. If EOF is set, a valid cont
1050:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * considered as last word of a frame. After transfer of the last word, MSLS signal becomes inactiv
1051:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * handling of EOF bit, it is recommended to configure TCSR.WLEMD as 0. \n
1052:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \b Note: The API should be called before putting the last data word of the frame to TBUF.
1053:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1054:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
1055:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEOF()
1056:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
1057:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableEOF(XMC_USIC_CH_t *const channel)
1058:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
1059:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_EOF_Msk;
1060:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
1061:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
1062:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
1063:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1064:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1065:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1066:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1067:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1068:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure the handling of end of frame through hardware, by clearing TCSR.EOF bit.\n\n
1069:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Typically this can be disabled, where the transmission control is done by the hardware.
1070:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1071:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
1072:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEOF()
1073:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
1074:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableEOF(XMC_USIC_CH_t *const channel)
1075:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
1076:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_EOF_Msk;
1077:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
1078:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** 
1079:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** /**
1080:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1081:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  input SPI channel input stage.\n
1082:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer @ref XMC_SPI_CH_INPUT_t for valid values
1083:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  source Input source select for the input stage.
1084:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *                Range : [0 to 7]
1085:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1086:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1087:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  *
1088:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1089:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Selects the data source for SPI input stage, by configuring DXCR.DSEL bits.\n\n
1090:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
1091:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * input stages like DX0CR, DX1CR etc. This is not done during initialization. This has to be confi
1092:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  * the SPI communication.
1093:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****  */
1094:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetInputSource(XMC_USIC_CH_t *const channel,
1095:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****     const XMC_SPI_CH_INPUT_t input,
1096:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****     const uint8_t source)
1097:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** {
 502              	 .loc 2 1097 0
 503              	 .cfi_startproc
 504              	 
 505              	 
 506 0000 80B5     	 push {r7,lr}
 507              	.LCFI59:
 508              	 .cfi_def_cfa_offset 8
 509              	 .cfi_offset 7,-8
 510              	 .cfi_offset 14,-4
 511 0002 82B0     	 sub sp,sp,#8
 512              	.LCFI60:
 513              	 .cfi_def_cfa_offset 16
 514 0004 00AF     	 add r7,sp,#0
 515              	.LCFI61:
 516              	 .cfi_def_cfa_register 7
 517 0006 7860     	 str r0,[r7,#4]
 518 0008 0B46     	 mov r3,r1
 519 000a FB70     	 strb r3,[r7,#3]
 520 000c 1346     	 mov r3,r2
 521 000e BB70     	 strb r3,[r7,#2]
1098:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_DSEN_Msk)) | USIC_CH_DX0
 522              	 .loc 2 1098 0
 523 0010 F878     	 ldrb r0,[r7,#3]
 524 0012 FB78     	 ldrb r3,[r7,#3]
 525 0014 7A68     	 ldr r2,[r7,#4]
 526 0016 0633     	 adds r3,r3,#6
 527 0018 9B00     	 lsls r3,r3,#2
 528 001a 1344     	 add r3,r3,r2
 529 001c 5B68     	 ldr r3,[r3,#4]
 530 001e 23F05003 	 bic r3,r3,#80
 531 0022 43F01002 	 orr r2,r3,#16
 532 0026 7968     	 ldr r1,[r7,#4]
 533 0028 831D     	 adds r3,r0,#6
 534 002a 9B00     	 lsls r3,r3,#2
 535 002c 0B44     	 add r3,r3,r1
 536 002e 5A60     	 str r2,[r3,#4]
1099:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 537              	 .loc 2 1099 0
 538 0030 FA78     	 ldrb r2,[r7,#3]
 539 0032 BB78     	 ldrb r3,[r7,#2]
 540 0034 7868     	 ldr r0,[r7,#4]
 541 0036 1146     	 mov r1,r2
 542 0038 1A46     	 mov r2,r3
 543 003a FFF7FEFF 	 bl XMC_USIC_CH_SetInputSource
1100:C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc\xmc_spi.h **** }
 544              	 .loc 2 1100 0
 545 003e 0837     	 adds r7,r7,#8
 546              	.LCFI62:
 547              	 .cfi_def_cfa_offset 8
 548 0040 BD46     	 mov sp,r7
 549              	.LCFI63:
 550              	 .cfi_def_cfa_register 13
 551              	 
 552 0042 80BD     	 pop {r7,pc}
 553              	 .cfi_endproc
 554              	.LFE276:
 556              	 .section .text.SPI_SLAVE_GetAppVersion,"ax",%progbits
 557              	 .align 2
 558              	 .global SPI_SLAVE_GetAppVersion
 559              	 .thumb
 560              	 .thumb_func
 562              	SPI_SLAVE_GetAppVersion:
 563              	.LFB306:
 564              	 .file 3 "../Dave/Generated/SPI_SLAVE/spi_slave.c"
   1:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /**
   2:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @file spi_slave.c
   3:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @date 2015-12-17
   4:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
   5:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * NOTE:
   6:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
   8:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @cond
   9:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  **************************************************************************************************
  10:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * SPI_SLAVE v4.0.10 - Configures a USIC channel to implement SPI slave functionality.
  11:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  12:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * All rights reserved.
  14:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  15:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * following conditions are met:
  17:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  18:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *   disclaimer.
  20:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  21:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  24:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  27:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  35:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  **************************************************************************************************
  38:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  39:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Change History
  40:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * --------------
  41:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  42:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * 2015-08-06:
  43:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *     - Initial version for DAVEv4
  44:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  45:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @endcond
  46:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
  47:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
  48:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
  49:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /**************************************************************************************************
  50:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * HEADER FILES
  51:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  **************************************************************************************************
  52:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #include "spi_slave.h"
  53:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #include "string.h"
  54:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
  55:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /**************************************************************************************************
  56:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * MACROS
  57:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  **************************************************************************************************
  58:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
  59:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Represents the bit mask of port pin alternate function
  60:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
  61:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #define SPI_SLAVE_PORT_ALTERNATE_FN_MSK (0x0fUL << PORT0_IOCR0_PC0_Pos)
  62:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /**************************************************************************************************
  63:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * LOCAL DATA
  64:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  **************************************************************************************************
  65:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
  66:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /**************************************************************************************************
  67:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * LOCAL ROUTINES
  68:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  **************************************************************************************************
  69:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_INTERRUPT_USED
  70:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*Function used for handling transmit interrupt.*/
  71:../Dave/Generated/SPI_SLAVE/spi_slave.c **** void SPI_SLAVE_lTransmitHandler(const SPI_SLAVE_t * const handle);
  72:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
  73:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_INTERRUPT_USED
  74:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*Function used for handling data reception interrupts.*/
  75:../Dave/Generated/SPI_SLAVE/spi_slave.c **** void SPI_SLAVE_lReceiveHandler(const SPI_SLAVE_t * const handle);
  76:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*Function used for reconfiguring rx FIFO while receiving data.*/
  77:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static void SPI_SLAVE_lReconfigureRxFIFO(const SPI_SLAVE_t * const handle, uint32_t count);
  78:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
  79:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_DIRECT_USED
  80:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*Function for transmitting data using polling.*/
  81:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static SPI_SLAVE_STATUS_t SPI_SLAVE_lTransmitPolling (const SPI_SLAVE_t *const handle, uint8_t* dat
  82:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
  83:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DIRECT_USED
  84:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*Function for receiving data using polling.*/
  85:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static SPI_SLAVE_STATUS_t SPI_SLAVE_lReceivePolling (const SPI_SLAVE_t *const handle, uint8_t* data
  86:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
  87:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DIRECT_USED
  88:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static void SPI_SLAVE_lTransferPolling(const SPI_SLAVE_t *const handle,
  89:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint8_t* tx_dataptr,
  90:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint8_t* rx_dataptr,
  91:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint32_t count);
  92:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
  93:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_PROTOCOL_EVENT_USED
  94:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*Function used for handling protocol related interrupt.*/
  95:../Dave/Generated/SPI_SLAVE/spi_slave.c **** void SPI_SLAVE_lProtocolHandler(const SPI_SLAVE_t * const handle);
  96:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
  97:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static SPI_SLAVE_STATUS_t SPI_SLAVE_lValidateModeChange(const SPI_SLAVE_t * const handle, XMC_SPI_C
  98:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
  99:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 100:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 101:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /**************************************************************************************************
 102:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * API IMPLEMENTATION
 103:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  **************************************************************************************************
 104:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 105:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 106:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief API to retrieve the version of the SPI_SLAVE APP.
 107:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 108:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return DAVE_APP_VERSION_t Structure containing major version, minor version
 109:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *         and patch version.
 110:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 111:../Dave/Generated/SPI_SLAVE/spi_slave.c **** DAVE_APP_VERSION_t SPI_SLAVE_GetAppVersion()
 112:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 565              	 .loc 3 112 0
 566              	 .cfi_startproc
 567              	 
 568              	 
 569              	 
 570 0000 80B4     	 push {r7}
 571              	.LCFI64:
 572              	 .cfi_def_cfa_offset 4
 573              	 .cfi_offset 7,-4
 574 0002 83B0     	 sub sp,sp,#12
 575              	.LCFI65:
 576              	 .cfi_def_cfa_offset 16
 577 0004 00AF     	 add r7,sp,#0
 578              	.LCFI66:
 579              	 .cfi_def_cfa_register 7
 113:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   DAVE_APP_VERSION_t version;
 114:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 115:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   version.major = SPI_SLAVE_MAJOR_VERSION;
 580              	 .loc 3 115 0
 581 0006 0423     	 movs r3,#4
 582 0008 3B70     	 strb r3,[r7]
 116:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   version.minor = SPI_SLAVE_MINOR_VERSION;
 583              	 .loc 3 116 0
 584 000a 0023     	 movs r3,#0
 585 000c 7B70     	 strb r3,[r7,#1]
 117:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   version.patch = SPI_SLAVE_PATCH_VERSION;
 586              	 .loc 3 117 0
 587 000e 0A23     	 movs r3,#10
 588 0010 BB70     	 strb r3,[r7,#2]
 118:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 119:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return version;
 589              	 .loc 3 119 0
 590 0012 3B1D     	 adds r3,r7,#4
 591 0014 3A46     	 mov r2,r7
 592 0016 1268     	 ldr r2,[r2]
 593 0018 1146     	 mov r1,r2
 594 001a 1980     	 strh r1,[r3]
 595 001c 0233     	 adds r3,r3,#2
 596 001e 120C     	 lsrs r2,r2,#16
 597 0020 1A70     	 strb r2,[r3]
 598 0022 0023     	 movs r3,#0
 599 0024 3A79     	 ldrb r2,[r7,#4]
 600 0026 62F30703 	 bfi r3,r2,#0,#8
 601 002a 7A79     	 ldrb r2,[r7,#5]
 602 002c 62F30F23 	 bfi r3,r2,#8,#8
 603 0030 BA79     	 ldrb r2,[r7,#6]
 604 0032 62F31743 	 bfi r3,r2,#16,#8
 120:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 605              	 .loc 3 120 0
 606 0036 1846     	 mov r0,r3
 607 0038 0C37     	 adds r7,r7,#12
 608              	.LCFI67:
 609              	 .cfi_def_cfa_offset 4
 610 003a BD46     	 mov sp,r7
 611              	.LCFI68:
 612              	 .cfi_def_cfa_register 13
 613              	 
 614 003c 5DF8047B 	 ldr r7,[sp],#4
 615              	.LCFI69:
 616              	 .cfi_restore 7
 617              	 .cfi_def_cfa_offset 0
 618 0040 7047     	 bx lr
 619              	 .cfi_endproc
 620              	.LFE306:
 622 0042 00BF     	 .section .text.SPI_SLAVE_Init,"ax",%progbits
 623              	 .align 2
 624              	 .global SPI_SLAVE_Init
 625              	 .thumb
 626              	 .thumb_func
 628              	SPI_SLAVE_Init:
 629              	.LFB307:
 121:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 122:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 123:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Function to initialize the USIC Channel with GUI configured values.
 124:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 125:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  handle SPI_SLAVE APP handle pointer of type SPI_SLAVE_t*
 126:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 127:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t
 128:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_SUCCESS: for successful SPI_SLAVE initialization.<BR>
 129:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_FAILURE  : If SPI_SLAVE initialization fails.<BR>
 130:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 131:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 132:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_Init(const SPI_SLAVE_t *const handle)
 133:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 630              	 .loc 3 133 0
 631              	 .cfi_startproc
 632              	 
 633              	 
 634 0000 80B5     	 push {r7,lr}
 635              	.LCFI70:
 636              	 .cfi_def_cfa_offset 8
 637              	 .cfi_offset 7,-8
 638              	 .cfi_offset 14,-4
 639 0002 84B0     	 sub sp,sp,#16
 640              	.LCFI71:
 641              	 .cfi_def_cfa_offset 24
 642 0004 00AF     	 add r7,sp,#0
 643              	.LCFI72:
 644              	 .cfi_def_cfa_register 7
 645 0006 7860     	 str r0,[r7,#4]
 134:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t status = SPI_SLAVE_STATUS_SUCCESS;
 646              	 .loc 3 134 0
 647 0008 0023     	 movs r3,#0
 648 000a FB73     	 strb r3,[r7,#15]
 135:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_Init : SPI_SLAVE APP handle invalid", (((handle != NULL)&&
 136:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       (handle->config != NULL)) &&((handle->config->fptr_spi_slave_config != NULL)&&
 137:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       (handle->runtime != NULL))));
 138:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Initialize the multiplexers required for SPI_SLAVE configuration*/
 139:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   status = handle->config->fptr_spi_slave_config();
 649              	 .loc 3 139 0
 650 000c 7B68     	 ldr r3,[r7,#4]
 651 000e 5B68     	 ldr r3,[r3,#4]
 652 0010 DB68     	 ldr r3,[r3,#12]
 653 0012 9847     	 blx r3
 654 0014 0346     	 mov r3,r0
 655 0016 FB73     	 strb r3,[r7,#15]
 140:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 141:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return status;
 656              	 .loc 3 141 0
 657 0018 FB7B     	 ldrb r3,[r7,#15]
 142:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 658              	 .loc 3 142 0
 659 001a 1846     	 mov r0,r3
 660 001c 1037     	 adds r7,r7,#16
 661              	.LCFI73:
 662              	 .cfi_def_cfa_offset 8
 663 001e BD46     	 mov sp,r7
 664              	.LCFI74:
 665              	 .cfi_def_cfa_register 13
 666              	 
 667 0020 80BD     	 pop {r7,pc}
 668              	 .cfi_endproc
 669              	.LFE307:
 671 0022 00BF     	 .section .text.SPI_SLAVE_Transmit,"ax",%progbits
 672              	 .align 2
 673              	 .global SPI_SLAVE_Transmit
 674              	 .thumb
 675              	 .thumb_func
 677              	SPI_SLAVE_Transmit:
 678              	.LFB308:
 143:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 144:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 145:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Common function to transmit data.
 146:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 147:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  handle SPI_SLAVE APP handle pointer of type SPI_SLAVE_t*
 148:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  data_ptr Pointer to data of type uint8_t
 149:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  count Number of uint8_t type bytes to be transmitted
 150:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 151:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t
 152:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_SUCCESS: If the data is put to transmit.<BR>
 153:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_BUSY  : If the channel is busy.<BR>
 154:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_BUFFER_INVALID: Either if buffer is NULL or count is 0.<BR>
 155:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_MODE_MISMATCH: If the configured mode is invalid.<BR>
 156:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 157:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 158:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_Transmit(const SPI_SLAVE_t *const handle, uint8_t* data_ptr, uint32_t 
 159:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 679              	 .loc 3 159 0
 680              	 .cfi_startproc
 681              	 
 682              	 
 683 0000 80B5     	 push {r7,lr}
 684              	.LCFI75:
 685              	 .cfi_def_cfa_offset 8
 686              	 .cfi_offset 7,-8
 687              	 .cfi_offset 14,-4
 688 0002 86B0     	 sub sp,sp,#24
 689              	.LCFI76:
 690              	 .cfi_def_cfa_offset 32
 691 0004 00AF     	 add r7,sp,#0
 692              	.LCFI77:
 693              	 .cfi_def_cfa_register 7
 694 0006 F860     	 str r0,[r7,#12]
 695 0008 B960     	 str r1,[r7,#8]
 696 000a 7A60     	 str r2,[r7,#4]
 160:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_MODE_MISMATCH;
 697              	 .loc 3 160 0
 698 000c 0423     	 movs r3,#4
 699 000e FB75     	 strb r3,[r7,#23]
 161:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 162:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   switch(handle->config->transmit_mode)
 700              	 .loc 3 162 0
 701 0010 FB68     	 ldr r3,[r7,#12]
 702 0012 5B68     	 ldr r3,[r3,#4]
 703 0014 1B7E     	 ldrb r3,[r3,#24]
 704 0016 022B     	 cmp r3,#2
 705 0018 00D0     	 beq .L22
 163:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 164:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_INTERRUPT_USED
 165:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_INTERRUPT:
 166:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_StartTransmitIRQ(handle, data_ptr, count);
 167:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 168:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 169:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_DMA_USED
 170:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_DMA:
 171:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_StartTransmitDMA(handle, data_ptr, count);
 172:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 173:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 174:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_DIRECT_USED
 175:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_DIRECT:
 176:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_STATUS_BUFFER_INVALID;
 177:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if ((data_ptr != NULL) && (count > 0U))
 178:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 179:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ret_stat = SPI_SLAVE_STATUS_BUSY;
 180:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (handle->runtime->tx_busy == false)
 181:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 182:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_lTransmitPolling(handle, data_ptr, count);
 183:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 184:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 185:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 186:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 187:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   default:
 188:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 706              	 .loc 3 188 0
 707 001a 1BE0     	 b .L24
 708              	.L22:
 176:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if ((data_ptr != NULL) && (count > 0U))
 709              	 .loc 3 176 0
 710 001c 0323     	 movs r3,#3
 711 001e FB75     	 strb r3,[r7,#23]
 177:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 712              	 .loc 3 177 0
 713 0020 BB68     	 ldr r3,[r7,#8]
 714 0022 002B     	 cmp r3,#0
 715 0024 15D0     	 beq .L23
 177:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 716              	 .loc 3 177 0 is_stmt 0 discriminator 1
 717 0026 7B68     	 ldr r3,[r7,#4]
 718 0028 002B     	 cmp r3,#0
 719 002a 12D0     	 beq .L23
 179:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (handle->runtime->tx_busy == false)
 720              	 .loc 3 179 0 is_stmt 1
 721 002c 0223     	 movs r3,#2
 722 002e FB75     	 strb r3,[r7,#23]
 180:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 723              	 .loc 3 180 0
 724 0030 FB68     	 ldr r3,[r7,#12]
 725 0032 9B68     	 ldr r3,[r3,#8]
 726 0034 9B7E     	 ldrb r3,[r3,#26]
 727 0036 DBB2     	 uxtb r3,r3
 728 0038 83F00103 	 eor r3,r3,#1
 729 003c DBB2     	 uxtb r3,r3
 730 003e 002B     	 cmp r3,#0
 731 0040 07D0     	 beq .L23
 182:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 732              	 .loc 3 182 0
 733 0042 F868     	 ldr r0,[r7,#12]
 734 0044 B968     	 ldr r1,[r7,#8]
 735 0046 7A68     	 ldr r2,[r7,#4]
 736 0048 FFF7FEFF 	 bl SPI_SLAVE_lTransmitPolling
 737 004c 0346     	 mov r3,r0
 738 004e FB75     	 strb r3,[r7,#23]
 185:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 739              	 .loc 3 185 0
 740 0050 FFE7     	 b .L26
 741              	.L23:
 742              	.L26:
 743 0052 00BF     	 nop
 744              	.L24:
 189:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 190:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
 745              	 .loc 3 190 0
 746 0054 FB7D     	 ldrb r3,[r7,#23]
 191:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 747              	 .loc 3 191 0
 748 0056 1846     	 mov r0,r3
 749 0058 1837     	 adds r7,r7,#24
 750              	.LCFI78:
 751              	 .cfi_def_cfa_offset 8
 752 005a BD46     	 mov sp,r7
 753              	.LCFI79:
 754              	 .cfi_def_cfa_register 13
 755              	 
 756 005c 80BD     	 pop {r7,pc}
 757              	 .cfi_endproc
 758              	.LFE308:
 760 005e 00BF     	 .section .text.SPI_SLAVE_Receive,"ax",%progbits
 761              	 .align 2
 762              	 .global SPI_SLAVE_Receive
 763              	 .thumb
 764              	 .thumb_func
 766              	SPI_SLAVE_Receive:
 767              	.LFB309:
 192:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 193:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 194:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Common function to receive data.
 195:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 196:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  handle SPI_SLAVE APP handle pointer of type SPI_SLAVE_t*
 197:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  data_ptr Pointer to data of type uint8_t
 198:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  count Number of uint8_t type bytes to be received
 199:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 200:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t
 201:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_SUCCESS: If the data is put to transmit.<BR>
 202:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_BUSY  : If the channel is busy.<BR>
 203:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_BUFFER_INVALID: Either if buffer is NULL or count is 0.<BR>
 204:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_MODE_MISMATCH: If the configured mode is invalid.<BR>
 205:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 206:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 207:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_Receive(const SPI_SLAVE_t *const handle, uint8_t* data_ptr, uint32_t c
 208:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 768              	 .loc 3 208 0
 769              	 .cfi_startproc
 770              	 
 771              	 
 772 0000 80B5     	 push {r7,lr}
 773              	.LCFI80:
 774              	 .cfi_def_cfa_offset 8
 775              	 .cfi_offset 7,-8
 776              	 .cfi_offset 14,-4
 777 0002 86B0     	 sub sp,sp,#24
 778              	.LCFI81:
 779              	 .cfi_def_cfa_offset 32
 780 0004 00AF     	 add r7,sp,#0
 781              	.LCFI82:
 782              	 .cfi_def_cfa_register 7
 783 0006 F860     	 str r0,[r7,#12]
 784 0008 B960     	 str r1,[r7,#8]
 785 000a 7A60     	 str r2,[r7,#4]
 209:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_MODE_MISMATCH;
 786              	 .loc 3 209 0
 787 000c 0423     	 movs r3,#4
 788 000e FB75     	 strb r3,[r7,#23]
 210:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 211:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   switch(handle->config->receive_mode)
 789              	 .loc 3 211 0
 790 0010 FB68     	 ldr r3,[r7,#12]
 791 0012 5B68     	 ldr r3,[r3,#4]
 792 0014 5B7E     	 ldrb r3,[r3,#25]
 793 0016 022B     	 cmp r3,#2
 794 0018 00D0     	 beq .L29
 212:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 213:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_INTERRUPT_USED
 214:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_INTERRUPT:
 215:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_StartReceiveIRQ(handle, data_ptr, count);
 216:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 217:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 218:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DMA_USED
 219:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_DMA:
 220:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_StartReceiveDMA(handle, data_ptr, count);
 221:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 222:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 223:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DIRECT_USED
 224:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_DIRECT:
 225:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_STATUS_BUFFER_INVALID;
 226:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if ((data_ptr != NULL) && (count > 0U))
 227:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 228:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ret_stat = SPI_SLAVE_STATUS_BUSY;
 229:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (handle->runtime->rx_busy == false)
 230:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 231:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_lReceivePolling(handle, data_ptr, count);
 232:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 233:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 234:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 235:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 236:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   default:
 237:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 795              	 .loc 3 237 0
 796 001a 1BE0     	 b .L31
 797              	.L29:
 225:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if ((data_ptr != NULL) && (count > 0U))
 798              	 .loc 3 225 0
 799 001c 0323     	 movs r3,#3
 800 001e FB75     	 strb r3,[r7,#23]
 226:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 801              	 .loc 3 226 0
 802 0020 BB68     	 ldr r3,[r7,#8]
 803 0022 002B     	 cmp r3,#0
 804 0024 15D0     	 beq .L30
 226:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 805              	 .loc 3 226 0 is_stmt 0 discriminator 1
 806 0026 7B68     	 ldr r3,[r7,#4]
 807 0028 002B     	 cmp r3,#0
 808 002a 12D0     	 beq .L30
 228:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (handle->runtime->rx_busy == false)
 809              	 .loc 3 228 0 is_stmt 1
 810 002c 0223     	 movs r3,#2
 811 002e FB75     	 strb r3,[r7,#23]
 229:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 812              	 .loc 3 229 0
 813 0030 FB68     	 ldr r3,[r7,#12]
 814 0032 9B68     	 ldr r3,[r3,#8]
 815 0034 DB7E     	 ldrb r3,[r3,#27]
 816 0036 DBB2     	 uxtb r3,r3
 817 0038 83F00103 	 eor r3,r3,#1
 818 003c DBB2     	 uxtb r3,r3
 819 003e 002B     	 cmp r3,#0
 820 0040 07D0     	 beq .L30
 231:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 821              	 .loc 3 231 0
 822 0042 F868     	 ldr r0,[r7,#12]
 823 0044 B968     	 ldr r1,[r7,#8]
 824 0046 7A68     	 ldr r2,[r7,#4]
 825 0048 FFF7FEFF 	 bl SPI_SLAVE_lReceivePolling
 826 004c 0346     	 mov r3,r0
 827 004e FB75     	 strb r3,[r7,#23]
 234:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 828              	 .loc 3 234 0
 829 0050 FFE7     	 b .L33
 830              	.L30:
 831              	.L33:
 832 0052 00BF     	 nop
 833              	.L31:
 238:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 239:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
 834              	 .loc 3 239 0
 835 0054 FB7D     	 ldrb r3,[r7,#23]
 240:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 836              	 .loc 3 240 0
 837 0056 1846     	 mov r0,r3
 838 0058 1837     	 adds r7,r7,#24
 839              	.LCFI83:
 840              	 .cfi_def_cfa_offset 8
 841 005a BD46     	 mov sp,r7
 842              	.LCFI84:
 843              	 .cfi_def_cfa_register 13
 844              	 
 845 005c 80BD     	 pop {r7,pc}
 846              	 .cfi_endproc
 847              	.LFE309:
 849 005e 00BF     	 .section .text.SPI_SLAVE_SetMode,"ax",%progbits
 850              	 .align 2
 851              	 .global SPI_SLAVE_SetMode
 852              	 .thumb
 853              	 .thumb_func
 855              	SPI_SLAVE_SetMode:
 856              	.LFB310:
 241:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 242:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #if (defined SPI_SLAVE_TX_INTERRUPT_USED || defined SPI_SLAVE_TX_DMA_USED)
 243:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 244:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Common function to abort ongoing transmission.
 245:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 246:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  handle SPI_SLAVE APP handle pointer of type SPI_SLAVE_t*
 247:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 248:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t
 249:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_SUCCESS: If the transmission is aborted.<BR>
 250:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_FAILURE: If the channel is not transmitting.<BR>
 251:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_MODE_MISMATCH: If the configured mode is Direct.<BR>
 252:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 253:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 254:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_AbortTransmit(const SPI_SLAVE_t *const handle)
 255:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 256:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_SUCCESS;
 257:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_DMA_USED
 258:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   const SPI_SLAVE_DMA_CONFIG_t * ptr_dma_config = handle->config->transmit_dma_config;
 259:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_DMA_t * ptr_gpdma = handle->config->global_dma->dma;
 260:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 261:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 262:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_AbortTransmit: SPI_SLAVE APP handle invalid", ((handle != NULL)&&
 263:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (handle->runtime != NULL)));
 264:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 265:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Reset the user buffer pointer to null*/
 266:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   handle->runtime->tx_busy = false;
 267:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   handle->runtime->tx_data = NULL;
 268:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 269:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   switch(handle->config->transmit_mode)
 270:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 271:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_INTERRUPT_USED
 272:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_INTERRUPT:
 273:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Disable the transmit interrupts*/
 274:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 275:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 276:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Disable the transmit FIFO event*/
 277:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 278:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 279:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 280:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
 281:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 282:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Disable the standard transmit event*/
 283:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_DisableEvent(handle->channel, (uint32_t)XMC_SPI_CH_EVENT_TRANSMIT_BUFFER);
 284:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 285:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Invalidate TBUF*/
 286:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_USIC_CH_SetTransmitBufferStatus(handle->channel, XMC_USIC_CH_TBUF_STATUS_SET_IDLE);
 287:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 288:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 289:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_DMA_USED
 290:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_DMA:
 291:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Disable the standard transmit event*/
 292:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (XMC_DMA_CH_IsEnabled(ptr_gpdma, ptr_dma_config->dma_channel))
 293:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 294:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_DMA_CH_Disable(ptr_gpdma, ptr_dma_config->dma_channel);
 295:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while(XMC_DMA_CH_IsEnabled(ptr_gpdma, ptr_dma_config->dma_channel)==true)
 296:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 297:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 298:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_DisableEvent(handle->channel, (uint32_t)XMC_SPI_CH_EVENT_RECEIVE_START);
 299:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 300:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Invalidate TBUF*/
 301:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_USIC_CH_SetTransmitBufferStatus(handle->channel, XMC_USIC_CH_TBUF_STATUS_SET_IDLE);
 302:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 303:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 304:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   default:
 305:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_STATUS_MODE_MISMATCH;
 306:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 307:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 308:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
 309:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 310:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 311:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 312:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #if (defined SPI_SLAVE_RX_INTERRUPT_USED || defined SPI_SLAVE_RX_DMA_USED)
 313:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 314:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Common function to abort ongoing reception.
 315:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 316:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  handle SPI_SLAVE APP handle pointer of type SPI_SLAVE_t*
 317:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 318:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t
 319:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_SUCCESS: If the reception is aborted.<BR>
 320:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_FAILURE  : If the channel is not busy.<BR>
 321:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *          SPI_SLAVE_STATUS_MODE_MISMATCH: If the configured mode is Direct.<BR>
 322:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 323:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 324:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_AbortReceive(const SPI_SLAVE_t *const handle)
 325:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 326:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_SUCCESS;
 327:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DMA_USED
 328:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   const SPI_SLAVE_DMA_CONFIG_t * ptr_dma_config = handle->config->receive_dma_config;
 329:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_DMA_t * ptr_gpdma = handle->config->global_dma->dma;
 330:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 331:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_AbortReceive: SPI_SLAVE APP handle invalid", ((handle != NULL)&&
 332:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (handle->runtime != NULL)));
 333:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 334:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Reset the user buffer pointer to null*/
 335:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   handle->runtime->rx_busy = false;
 336:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   handle->runtime->rx_data = NULL;
 337:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   switch(handle->config->receive_mode)
 338:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 339:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_INTERRUPT_USED
 340:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_INTERRUPT:
 341:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Disable the receive interrupts*/
 342:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 343:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 344:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,
 345:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             ((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 346:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 347:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 348:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
 349:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 350:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_DisableEvent(handle->channel,
 351:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             ((uint32_t)XMC_SPI_CH_EVENT_STANDARD_RECEIVE |
 352:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (uint32_t)XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE));
 353:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 354:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 355:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 356:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DMA_USED
 357:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   case SPI_SLAVE_TRANSFER_MODE_DMA:
 358:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Disable the receive interrupts*/
 359:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (XMC_DMA_CH_IsEnabled(ptr_gpdma, ptr_dma_config->dma_channel))
 360:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 361:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_DMA_CH_Disable(ptr_gpdma, ptr_dma_config->dma_channel);
 362:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while(XMC_DMA_CH_IsEnabled(ptr_gpdma, ptr_dma_config->dma_channel)==true)
 363:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 364:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 365:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_DisableEvent(handle->channel,
 366:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             ((uint32_t)XMC_SPI_CH_EVENT_STANDARD_RECEIVE |
 367:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (uint32_t)XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE));
 368:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 369:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 370:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 371:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   default:
 372:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_STATUS_MODE_MISMATCH;
 373:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     break;
 374:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 375:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
 376:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 377:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 378:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 379:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_SetMode(const SPI_SLAVE_t * const handle, XMC_SPI_CH_MODE_t mode)
 380:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 857              	 .loc 3 380 0
 858              	 .cfi_startproc
 859              	 
 860              	 
 861 0000 80B5     	 push {r7,lr}
 862              	.LCFI85:
 863              	 .cfi_def_cfa_offset 8
 864              	 .cfi_offset 7,-8
 865              	 .cfi_offset 14,-4
 866 0002 86B0     	 sub sp,sp,#24
 867              	.LCFI86:
 868              	 .cfi_def_cfa_offset 32
 869 0004 00AF     	 add r7,sp,#0
 870              	.LCFI87:
 871              	 .cfi_def_cfa_register 7
 872 0006 7860     	 str r0,[r7,#4]
 873 0008 0B46     	 mov r3,r1
 874 000a FB70     	 strb r3,[r7,#3]
 381:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t status = SPI_SLAVE_STATUS_SUCCESS;
 875              	 .loc 3 381 0
 876 000c 0023     	 movs r3,#0
 877 000e FB75     	 strb r3,[r7,#23]
 382:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   const SPI_SLAVE_PIN_CONFIG_t * ptr_miso_config = handle->config->mosi1_pin_config;
 878              	 .loc 3 382 0
 879 0010 7B68     	 ldr r3,[r7,#4]
 880 0012 5B68     	 ldr r3,[r3,#4]
 881 0014 5B68     	 ldr r3,[r3,#4]
 882 0016 3B61     	 str r3,[r7,#16]
 383:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   const SPI_SLAVE_PIN_CONFIG_t * ptr_mosi_config = handle->config->mosi0_pin_config;
 883              	 .loc 3 383 0
 884 0018 7B68     	 ldr r3,[r7,#4]
 885 001a 5B68     	 ldr r3,[r3,#4]
 886 001c 9B68     	 ldr r3,[r3,#8]
 887 001e FB60     	 str r3,[r7,#12]
 384:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 385:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if(mode != handle->runtime->spi_current_mode)
 888              	 .loc 3 385 0
 889 0020 7B68     	 ldr r3,[r7,#4]
 890 0022 9B68     	 ldr r3,[r3,#8]
 891 0024 1B7E     	 ldrb r3,[r3,#24]
 892 0026 FA78     	 ldrb r2,[r7,#3]
 893 0028 9A42     	 cmp r2,r3
 894 002a 00F09A80 	 beq .L35
 386:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 387:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     status = SPI_SLAVE_STATUS_BUSY;
 895              	 .loc 3 387 0
 896 002e 0223     	 movs r3,#2
 897 0030 FB75     	 strb r3,[r7,#23]
 388:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if((!handle->runtime->tx_busy) && (!handle->runtime->rx_busy))
 898              	 .loc 3 388 0
 899 0032 7B68     	 ldr r3,[r7,#4]
 900 0034 9B68     	 ldr r3,[r3,#8]
 901 0036 9B7E     	 ldrb r3,[r3,#26]
 902 0038 DBB2     	 uxtb r3,r3
 903 003a 83F00103 	 eor r3,r3,#1
 904 003e DBB2     	 uxtb r3,r3
 905 0040 002B     	 cmp r3,#0
 906 0042 00F08E80 	 beq .L35
 907              	 .loc 3 388 0 is_stmt 0 discriminator 1
 908 0046 7B68     	 ldr r3,[r7,#4]
 909 0048 9B68     	 ldr r3,[r3,#8]
 910 004a DB7E     	 ldrb r3,[r3,#27]
 911 004c DBB2     	 uxtb r3,r3
 912 004e 83F00103 	 eor r3,r3,#1
 913 0052 DBB2     	 uxtb r3,r3
 914 0054 002B     	 cmp r3,#0
 915 0056 00F08480 	 beq .L35
 389:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 390:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       status = SPI_SLAVE_lValidateModeChange(handle, mode);
 916              	 .loc 3 390 0 is_stmt 1
 917 005a FB78     	 ldrb r3,[r7,#3]
 918 005c 7868     	 ldr r0,[r7,#4]
 919 005e 1946     	 mov r1,r3
 920 0060 FFF7FEFF 	 bl SPI_SLAVE_lValidateModeChange
 921 0064 0346     	 mov r3,r0
 922 0066 FB75     	 strb r3,[r7,#23]
 391:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if(status == SPI_SLAVE_STATUS_SUCCESS)
 923              	 .loc 3 391 0
 924 0068 FB7D     	 ldrb r3,[r7,#23]
 925 006a 002B     	 cmp r3,#0
 926 006c 79D1     	 bne .L35
 392:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 393:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         switch(mode)
 927              	 .loc 3 393 0
 928 006e FB78     	 ldrb r3,[r7,#3]
 929 0070 072B     	 cmp r3,#7
 930 0072 71D8     	 bhi .L43
 931 0074 01A2     	 adr r2,.L38
 932 0076 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 933 007a 00BF     	 .p2align 2
 934              	.L38:
 935 007c 9D000000 	 .word .L37+1
 936 0080 59010000 	 .word .L43+1
 937 0084 59010000 	 .word .L43+1
 938 0088 59010000 	 .word .L43+1
 939 008c 59010000 	 .word .L43+1
 940 0090 ED000000 	 .word .L39+1
 941 0094 2B010000 	 .word .L40+1
 942 0098 2B010000 	 .word .L40+1
 943              	 .p2align 1
 944              	.L37:
 394:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 395:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         case XMC_SPI_CH_MODE_STANDARD:
 396:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_GPIO_SetMode(ptr_mosi_config->port, ptr_mosi_config->pin, XMC_GPIO_MODE_INPUT_TRISTAT
 945              	 .loc 3 396 0
 946 009c FB68     	 ldr r3,[r7,#12]
 947 009e 1A68     	 ldr r2,[r3]
 948 00a0 FB68     	 ldr r3,[r7,#12]
 949 00a2 5B7A     	 ldrb r3,[r3,#9]
 950 00a4 1046     	 mov r0,r2
 951 00a6 1946     	 mov r1,r3
 952 00a8 0022     	 movs r2,#0
 953 00aa FFF7FEFF 	 bl XMC_GPIO_SetMode
 397:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_GPIO_SetHardwareControl(ptr_mosi_config->port, ptr_mosi_config->pin, XMC_GPIO_HWCTRL_
 954              	 .loc 3 397 0
 955 00ae FB68     	 ldr r3,[r7,#12]
 956 00b0 1A68     	 ldr r2,[r3]
 957 00b2 FB68     	 ldr r3,[r7,#12]
 958 00b4 5B7A     	 ldrb r3,[r3,#9]
 959 00b6 1046     	 mov r0,r2
 960 00b8 1946     	 mov r1,r3
 961 00ba 0022     	 movs r2,#0
 962 00bc FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 398:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_SPI_CH_SetInputSource(handle->channel, XMC_SPI_CH_INPUT_DIN0, (uint8_t)handle->config
 963              	 .loc 3 398 0
 964 00c0 7B68     	 ldr r3,[r7,#4]
 965 00c2 1A68     	 ldr r2,[r3]
 966 00c4 7B68     	 ldr r3,[r7,#4]
 967 00c6 5B68     	 ldr r3,[r3,#4]
 968 00c8 9B7F     	 ldrb r3,[r3,#30]
 969 00ca 1046     	 mov r0,r2
 970 00cc 0021     	 movs r1,#0
 971 00ce 1A46     	 mov r2,r3
 972 00d0 FFF7FEFF 	 bl XMC_SPI_CH_SetInputSource
 399:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_GPIO_Init(ptr_miso_config->port, ptr_miso_config->pin, ptr_miso_config->config);
 973              	 .loc 3 399 0
 974 00d4 3B69     	 ldr r3,[r7,#16]
 975 00d6 1968     	 ldr r1,[r3]
 976 00d8 3B69     	 ldr r3,[r7,#16]
 977 00da 5A7A     	 ldrb r2,[r3,#9]
 978 00dc 3B69     	 ldr r3,[r7,#16]
 979 00de 5B68     	 ldr r3,[r3,#4]
 980 00e0 0846     	 mov r0,r1
 981 00e2 1146     	 mov r1,r2
 982 00e4 1A46     	 mov r2,r3
 983 00e6 FFF7FEFF 	 bl XMC_GPIO_Init
 400:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           break;
 984              	 .loc 3 400 0
 985 00ea 36E0     	 b .L41
 986              	.L39:
 401:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         case XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX:
 402:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_GPIO_Init(ptr_mosi_config->port, ptr_mosi_config->pin, ptr_mosi_config->config);
 987              	 .loc 3 402 0
 988 00ec FB68     	 ldr r3,[r7,#12]
 989 00ee 1968     	 ldr r1,[r3]
 990 00f0 FB68     	 ldr r3,[r7,#12]
 991 00f2 5A7A     	 ldrb r2,[r3,#9]
 992 00f4 FB68     	 ldr r3,[r7,#12]
 993 00f6 5B68     	 ldr r3,[r3,#4]
 994 00f8 0846     	 mov r0,r1
 995 00fa 1146     	 mov r1,r2
 996 00fc 1A46     	 mov r2,r3
 997 00fe FFF7FEFF 	 bl XMC_GPIO_Init
 403:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_SPI_CH_SetInputSource(handle->channel, XMC_SPI_CH_INPUT_DIN0, (uint8_t)handle->config
 998              	 .loc 3 403 0
 999 0102 7B68     	 ldr r3,[r7,#4]
 1000 0104 1A68     	 ldr r2,[r3]
 1001 0106 7B68     	 ldr r3,[r7,#4]
 1002 0108 5B68     	 ldr r3,[r3,#4]
 1003 010a 9B7F     	 ldrb r3,[r3,#30]
 1004 010c 1046     	 mov r0,r2
 1005 010e 0021     	 movs r1,#0
 1006 0110 1A46     	 mov r2,r3
 1007 0112 FFF7FEFF 	 bl XMC_SPI_CH_SetInputSource
 404:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_GPIO_SetHardwareControl(ptr_mosi_config->port, ptr_mosi_config->pin, XMC_GPIO_HWCTRL_
 1008              	 .loc 3 404 0
 1009 0116 FB68     	 ldr r3,[r7,#12]
 1010 0118 1A68     	 ldr r2,[r3]
 1011 011a FB68     	 ldr r3,[r7,#12]
 1012 011c 5B7A     	 ldrb r3,[r3,#9]
 1013 011e 1046     	 mov r0,r2
 1014 0120 1946     	 mov r1,r3
 1015 0122 0022     	 movs r2,#0
 1016 0124 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 405:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           break;
 1017              	 .loc 3 405 0
 1018 0128 17E0     	 b .L41
 1019              	.L40:
 406:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         case XMC_SPI_CH_MODE_DUAL:
 407:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         case XMC_SPI_CH_MODE_QUAD:
 408:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_GPIO_SetHardwareControl(ptr_mosi_config->port, ptr_mosi_config->pin, ptr_mosi_config-
 1020              	 .loc 3 408 0
 1021 012a FB68     	 ldr r3,[r7,#12]
 1022 012c 1968     	 ldr r1,[r3]
 1023 012e FB68     	 ldr r3,[r7,#12]
 1024 0130 5A7A     	 ldrb r2,[r3,#9]
 1025 0132 FB68     	 ldr r3,[r7,#12]
 1026 0134 1B7A     	 ldrb r3,[r3,#8]
 1027 0136 0846     	 mov r0,r1
 1028 0138 1146     	 mov r1,r2
 1029 013a 1A46     	 mov r2,r3
 1030 013c FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 409:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_GPIO_SetHardwareControl(ptr_miso_config->port, ptr_miso_config->pin, ptr_miso_config-
 1031              	 .loc 3 409 0
 1032 0140 3B69     	 ldr r3,[r7,#16]
 1033 0142 1968     	 ldr r1,[r3]
 1034 0144 3B69     	 ldr r3,[r7,#16]
 1035 0146 5A7A     	 ldrb r2,[r3,#9]
 1036 0148 3B69     	 ldr r3,[r7,#16]
 1037 014a 1B7A     	 ldrb r3,[r3,#8]
 1038 014c 0846     	 mov r0,r1
 1039 014e 1146     	 mov r1,r2
 1040 0150 1A46     	 mov r2,r3
 1041 0152 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 410:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           break;
 1042              	 .loc 3 410 0
 1043 0156 00E0     	 b .L41
 1044              	.L43:
 411:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         default:
 412:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           break;
 1045              	 .loc 3 412 0
 1046 0158 00BF     	 nop
 1047              	.L41:
 413:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 414:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         handle->runtime->spi_current_mode = mode;
 1048              	 .loc 3 414 0
 1049 015a 7B68     	 ldr r3,[r7,#4]
 1050 015c 9B68     	 ldr r3,[r3,#8]
 1051 015e FA78     	 ldrb r2,[r7,#3]
 1052 0160 1A76     	 strb r2,[r3,#24]
 1053              	.L35:
 415:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 416:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 417:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 418:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return status;
 1054              	 .loc 3 418 0
 1055 0162 FB7D     	 ldrb r3,[r7,#23]
 419:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 1056              	 .loc 3 419 0
 1057 0164 1846     	 mov r0,r3
 1058 0166 1837     	 adds r7,r7,#24
 1059              	.LCFI88:
 1060              	 .cfi_def_cfa_offset 8
 1061 0168 BD46     	 mov sp,r7
 1062              	.LCFI89:
 1063              	 .cfi_def_cfa_register 13
 1064              	 
 1065 016a 80BD     	 pop {r7,pc}
 1066              	 .cfi_endproc
 1067              	.LFE310:
 1069              	 .section .text.SPI_SLAVE_lValidateModeChange,"ax",%progbits
 1070              	 .align 2
 1071              	 .thumb
 1072              	 .thumb_func
 1074              	SPI_SLAVE_lValidateModeChange:
 1075              	.LFB311:
 420:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 421:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*Function to check if the request for mode change is valid*/
 422:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static SPI_SLAVE_STATUS_t SPI_SLAVE_lValidateModeChange(const SPI_SLAVE_t * const handle, XMC_SPI_C
 423:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 1076              	 .loc 3 423 0
 1077              	 .cfi_startproc
 1078              	 
 1079              	 
 1080              	 
 1081 0000 80B4     	 push {r7}
 1082              	.LCFI90:
 1083              	 .cfi_def_cfa_offset 4
 1084              	 .cfi_offset 7,-4
 1085 0002 85B0     	 sub sp,sp,#20
 1086              	.LCFI91:
 1087              	 .cfi_def_cfa_offset 24
 1088 0004 00AF     	 add r7,sp,#0
 1089              	.LCFI92:
 1090              	 .cfi_def_cfa_register 7
 1091 0006 7860     	 str r0,[r7,#4]
 1092 0008 0B46     	 mov r3,r1
 1093 000a FB70     	 strb r3,[r7,#3]
 424:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t status = SPI_SLAVE_STATUS_SUCCESS;
 1094              	 .loc 3 424 0
 1095 000c 0023     	 movs r3,#0
 1096 000e FB73     	 strb r3,[r7,#15]
 425:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Mode cannot change from standard full duplex to half duplex or vice versa
 426:../Dave/Generated/SPI_SLAVE/spi_slave.c ****    * Mode cannot change from Dual to quad mode*/
 427:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if(((handle->config->spi_configured_mode == XMC_SPI_CH_MODE_STANDARD) ||
 1097              	 .loc 3 427 0
 1098 0010 7B68     	 ldr r3,[r7,#4]
 1099 0012 5B68     	 ldr r3,[r3,#4]
 1100 0014 1B7F     	 ldrb r3,[r3,#28]
 1101 0016 002B     	 cmp r3,#0
 1102 0018 0AD0     	 beq .L45
 428:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       (handle->config->spi_configured_mode == XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX)) ||
 1103              	 .loc 3 428 0 discriminator 1
 1104 001a 7B68     	 ldr r3,[r7,#4]
 1105 001c 5B68     	 ldr r3,[r3,#4]
 1106 001e 1B7F     	 ldrb r3,[r3,#28]
 427:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       (handle->config->spi_configured_mode == XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX)) ||
 1107              	 .loc 3 427 0 discriminator 1
 1108 0020 052B     	 cmp r3,#5
 1109 0022 05D0     	 beq .L45
 429:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       (handle->config->spi_configured_mode < mode))
 1110              	 .loc 3 429 0
 1111 0024 7B68     	 ldr r3,[r7,#4]
 1112 0026 5B68     	 ldr r3,[r3,#4]
 1113 0028 1B7F     	 ldrb r3,[r3,#28]
 428:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       (handle->config->spi_configured_mode == XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX)) ||
 1114              	 .loc 3 428 0
 1115 002a FA78     	 ldrb r2,[r7,#3]
 1116 002c 9A42     	 cmp r2,r3
 1117 002e 02D9     	 bls .L46
 1118              	.L45:
 430:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 431:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     status = SPI_SLAVE_STATUS_FAILURE;
 1119              	 .loc 3 431 0
 1120 0030 0123     	 movs r3,#1
 1121 0032 FB73     	 strb r3,[r7,#15]
 1122 0034 26E0     	 b .L47
 1123              	.L46:
 432:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 433:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   else
 434:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 435:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if(mode == XMC_SPI_CH_MODE_STANDARD)
 1124              	 .loc 3 435 0
 1125 0036 FB78     	 ldrb r3,[r7,#3]
 1126 0038 002B     	 cmp r3,#0
 1127 003a 10D1     	 bne .L48
 436:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 437:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Configure DX0 multiplexer needed in full duplex mode for reception*/
 438:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if((handle->config->dx0_source == SPI_SLAVE_INPUT_INVALID) ||
 1128              	 .loc 3 438 0
 1129 003c 7B68     	 ldr r3,[r7,#4]
 1130 003e 5B68     	 ldr r3,[r3,#4]
 1131 0040 9B7F     	 ldrb r3,[r3,#30]
 1132 0042 072B     	 cmp r3,#7
 1133 0044 08D0     	 beq .L49
 439:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (((uint32_t)handle->config->mosi1_pin_config->config->mode & SPI_SLAVE_PORT_ALTERNATE_FN_
 1134              	 .loc 3 439 0 discriminator 1
 1135 0046 7B68     	 ldr r3,[r7,#4]
 1136 0048 5B68     	 ldr r3,[r3,#4]
 1137 004a 5B68     	 ldr r3,[r3,#4]
 1138 004c 5B68     	 ldr r3,[r3,#4]
 1139 004e 1B78     	 ldrb r3,[r3]
 1140 0050 03F07803 	 and r3,r3,#120
 438:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (((uint32_t)handle->config->mosi1_pin_config->config->mode & SPI_SLAVE_PORT_ALTERNATE_FN_
 1141              	 .loc 3 438 0 discriminator 1
 1142 0054 002B     	 cmp r3,#0
 1143 0056 15D1     	 bne .L47
 1144              	.L49:
 440:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 441:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         status = SPI_SLAVE_STATUS_FAILURE;
 1145              	 .loc 3 441 0
 1146 0058 0123     	 movs r3,#1
 1147 005a FB73     	 strb r3,[r7,#15]
 1148 005c 12E0     	 b .L47
 1149              	.L48:
 442:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 443:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 444:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else if(mode == XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX)
 1150              	 .loc 3 444 0
 1151 005e FB78     	 ldrb r3,[r7,#3]
 1152 0060 052B     	 cmp r3,#5
 1153 0062 0FD1     	 bne .L47
 445:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 446:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Configure DX0 multiplexer needed in half duplex mode for reception*/
 447:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if((handle->config->dx0_source == SPI_SLAVE_INPUT_INVALID) ||
 1154              	 .loc 3 447 0
 1155 0064 7B68     	 ldr r3,[r7,#4]
 1156 0066 5B68     	 ldr r3,[r3,#4]
 1157 0068 9B7F     	 ldrb r3,[r3,#30]
 1158 006a 072B     	 cmp r3,#7
 1159 006c 08D0     	 beq .L51
 448:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (((uint32_t)handle->config->mosi0_pin_config->config->mode & (uint32_t)SPI_SLAVE_PORT_ALT
 1160              	 .loc 3 448 0 discriminator 1
 1161 006e 7B68     	 ldr r3,[r7,#4]
 1162 0070 5B68     	 ldr r3,[r3,#4]
 1163 0072 9B68     	 ldr r3,[r3,#8]
 1164 0074 5B68     	 ldr r3,[r3,#4]
 1165 0076 1B78     	 ldrb r3,[r3]
 1166 0078 03F07803 	 and r3,r3,#120
 447:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (((uint32_t)handle->config->mosi0_pin_config->config->mode & (uint32_t)SPI_SLAVE_PORT_ALT
 1167              	 .loc 3 447 0 discriminator 1
 1168 007c 002B     	 cmp r3,#0
 1169 007e 01D1     	 bne .L47
 1170              	.L51:
 449:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 450:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         status = SPI_SLAVE_STATUS_FAILURE;
 1171              	 .loc 3 450 0
 1172 0080 0123     	 movs r3,#1
 1173 0082 FB73     	 strb r3,[r7,#15]
 1174              	.L47:
 451:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 452:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 453:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
 454:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 455:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 456:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 457:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return status;
 1175              	 .loc 3 457 0
 1176 0084 FB7B     	 ldrb r3,[r7,#15]
 458:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 1177              	 .loc 3 458 0
 1178 0086 1846     	 mov r0,r3
 1179 0088 1437     	 adds r7,r7,#20
 1180              	.LCFI93:
 1181              	 .cfi_def_cfa_offset 4
 1182 008a BD46     	 mov sp,r7
 1183              	.LCFI94:
 1184              	 .cfi_def_cfa_register 13
 1185              	 
 1186 008c 5DF8047B 	 ldr r7,[sp],#4
 1187              	.LCFI95:
 1188              	 .cfi_restore 7
 1189              	 .cfi_def_cfa_offset 0
 1190 0090 7047     	 bx lr
 1191              	 .cfi_endproc
 1192              	.LFE311:
 1194 0092 00BF     	 .section .text.SPI_SLAVE_Transfer,"ax",%progbits
 1195              	 .align 2
 1196              	 .global SPI_SLAVE_Transfer
 1197              	 .thumb
 1198              	 .thumb_func
 1200              	SPI_SLAVE_Transfer:
 1201              	.LFB312:
 459:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 460:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_INTERRUPT_USED
 461:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 462:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Registers a request for transmitting data over SPI_SLAVE channel.
 463:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 464:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  SPI_SLAVE_t*  SPI_SLAVE APP handle pointer of type SPI_SLAVE_t
 465:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  uint8_t* Pointer to data
 466:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  uint32_t Total no of words to be transmitted.
 467:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 468:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t SPI_SLAVE_STATUS_SUCCESS if the request is accepted.
 469:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *                        SPI_SLAVE_STATUS_BUSY if a transmission is in progress.
 470:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Details of function:
 471:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * The data transmission is accomplished using transmit interrupt. User can configure
 472:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 473:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 0.
 474:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * So the transmit interrupt will be generated when all the data in FIFO is moved from FIFO.
 475:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 476:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 477:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * request is registered.
 478:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 479:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 480:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 481:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_StartTransmitIRQ(const SPI_SLAVE_t *const handle, uint8_t* data_ptr, u
 482:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 483:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_MODE_MISMATCH;
 484:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 485:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 486:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_StartTransmitIRQ: SPI_SLAVE APP handle invalid", ((handle != NULL)&&
 487:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (ptr_runtime != NULL)));
 488:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 489:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (handle->config->transmit_mode == SPI_SLAVE_TRANSFER_MODE_INTERRUPT)
 490:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 491:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_STATUS_BUSY;
 492:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (ptr_runtime->tx_busy == false)
 493:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 494:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*If there is no transmission in progress*/
 495:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if ((data_ptr != NULL) && (count > 0U))
 496:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 497:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Obtain the address of data, size of data*/
 498:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->tx_data = data_ptr;
 499:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->tx_data_count = count;
 500:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Initialize to first index and set the busy flag*/
 501:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->tx_data_index = 0U;
 502:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->tx_busy = true;
 503:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 504:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Enable the transmit buffer event*/
 505:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 506:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 507:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           /*Clear the transmit FIFO*/
 508:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 509:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           /*Enable transmit buffer interrupt*/
 510:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_USIC_CH_TXFIFO_EnableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_ST
 511:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 512:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         else
 513:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 514:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_SPI_CH_EnableEvent(handle->channel, (uint32_t)XMC_SPI_CH_EVENT_TRANSMIT_BUFFER);
 515:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 516:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Invalidate TBUF*/
 517:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_USIC_CH_SetTransmitBufferStatus(handle->channel, XMC_USIC_CH_TBUF_STATUS_SET_IDLE);
 518:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_STATUS_SUCCESS;
 519:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Trigger the transmit buffer interrupt*/
 520:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_USIC_CH_TriggerServiceRequest(handle->channel, (uint32_t)handle->config->tx_sr);
 521:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 522:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       else
 523:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 524:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_STATUS_BUFFER_INVALID;
 525:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 526:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 527:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 528:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
 529:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 530:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 531:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 532:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Transmit interrupt handler for the APP.
 533:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * This is a common interrupt handling function called for different instances of the APP.
 534:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 535:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *  * param[in]  handle SPI_SLAVE APP handle pointer of type SPI_SLAVE_t*
 536:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 537:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *  * return void
 538:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 539:../Dave/Generated/SPI_SLAVE/spi_slave.c **** void SPI_SLAVE_lTransmitHandler(const SPI_SLAVE_t * const handle)
 540:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 541:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 542:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t bytes_per_word = (uint32_t)ptr_runtime->data_size;
 543:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint16_t data_value;
 544:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 545:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 546:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 547:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 548:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 549:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*When Transmit FIFO is enabled*/
 550:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Fill the transmit FIFO */
 551:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while (XMC_USIC_CH_TXFIFO_IsFull(handle->channel) == false)
 552:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 553:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 554:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 555:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           memcpy((void *)&data_value, (void *)&ptr_runtime->tx_data[ptr_runtime->tx_data_index * by
 556:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                  bytes_per_word);
 557:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           /*Load the FIFO byte by byte till either FIFO is full or all data is loaded*/
 558:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_SPI_CH_Transmit(handle->channel,data_value, ptr_runtime->spi_current_mode);
 559:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           ptr_runtime->tx_data_index++;
 560:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 561:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         else
 562:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 563:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           break;
 564:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 565:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 566:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 567:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
 568:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 569:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*When Transmit FIFO is disabled*/
 570:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       memcpy((void *)&data_value, (void *)&ptr_runtime->tx_data[ptr_runtime->tx_data_index * bytes_
 571:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_Transmit(handle->channel,data_value, ptr_runtime->spi_current_mode);
 572:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ptr_runtime->tx_data_index++;
 573:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 574:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 575:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   else
 576:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 577:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (XMC_USIC_CH_TXFIFO_IsEmpty(handle->channel) == true)
 578:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 579:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 580:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 581:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Disable the transmit FIFO event*/
 582:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STA
 583:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 584:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       else
 585:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 586:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Disable the standard transmit event*/
 587:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_SPI_CH_DisableEvent(handle->channel, (uint32_t)XMC_SPI_CH_EVENT_TRANSMIT_BUFFER);
 588:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 589:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 590:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Wait for the transmit buffer to be free to ensure that all data is transmitted*/
 591:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 592:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 593:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 594:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 595:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*All data is transmitted*/
 596:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ptr_runtime->tx_busy = false;
 597:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ptr_runtime->tx_data = NULL;
 598:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 599:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (handle->config->tx_cbhandler != NULL)
 600:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 601:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Execute the callback function provided in the SPI_SLAVE APP UI*/
 602:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         handle->config->tx_cbhandler();
 603:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 604:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 605:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 606:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 607:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 608:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 609:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_INTERRUPT_USED
 610:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 611:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Registers a request to receive data over SPI_SLAVE channel.
 612:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 613:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  SPI_SLAVE_t* SPI_SLAVE APP handle pointer of type SPI_SLAVE_t
 614:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  uint8_t*  Pointer to data array
 615:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  uint32_t  Total no of bytes to be read.
 616:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 617:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t SPI_SLAVE_STATUS_SUCCESS if the request is accepted.
 618:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *                        SPI_SLAVE_STATUS_BUSY if a reception is in progress.
 619:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Details of function:
 620:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * This function registers the receive request by configuring the SPI_SLAVE
 621:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * receive FIFO/Standard buffer (depending on the user configuration). The data
 622:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * is received asynchronously. When the requested number of data bytes are received,
 623:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * optionally, the user configured callback function will be executed. If a callback
 624:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * function is not configured on the APP UI, the user has to poll for the status of
 625:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * rx_busy variable of the APP handle structure.
 626:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 627:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 628:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * request is registered.
 629:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 630:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 631:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 632:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_StartReceiveIRQ(const SPI_SLAVE_t *const handle, uint8_t* data_ptr, ui
 633:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 634:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_MODE_MISMATCH;
 635:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 636:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 637:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_StartReceiveIRQ: SPI_SLAVE APP handle invalid", ((handle != NULL)&&
 638:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (ptr_runtime != NULL)));
 639:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 640:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (handle->config->receive_mode == SPI_SLAVE_TRANSFER_MODE_INTERRUPT)
 641:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 642:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_STATUS_BUSY;
 643:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (ptr_runtime->rx_busy == false)
 644:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 645:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*If no active reception in progress*/
 646:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if ((data_ptr != NULL) && (count > 0U))
 647:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 648:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Obtain the address of data buffer and
 649:../Dave/Generated/SPI_SLAVE/spi_slave.c ****          * number of data bytes to be received*/
 650:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_data = data_ptr;
 651:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_data_count = count;
 652:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_busy = true;
 653:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_data_index = 0U;
 654:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 655:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Configure hardware port direction required for half duplex mode reception*/
 656:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_SPI_CH_Receive(handle->channel, handle->runtime->spi_current_mode);
 657:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 658:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 659:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 660:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           /*Clear the receive FIFO, configure the trigger lime
 661:../Dave/Generated/SPI_SLAVE/spi_slave.c ****            * and enable the receive events*/
 662:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 663:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 664:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           /*Configure the FIFO trigger limit based on the required data size*/
 665:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           SPI_SLAVE_lReconfigureRxFIFO(handle, count);
 666:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 667:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_USIC_CH_RXFIFO_EnableEvent(handle->channel,
 668:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 669:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 670:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 671:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         else
 672:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 673:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           XMC_USIC_CH_EnableEvent(handle->channel,
 674:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE | (uint32_t)XMC_USIC_CH_EVENT_ALT
 675:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 676:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Flush RBUF- Repeat for RBUF0 and RBUF1*/
 677:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         (void)XMC_SPI_CH_GetReceivedData(handle->channel);
 678:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         (void)XMC_SPI_CH_GetReceivedData(handle->channel);
 679:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_STATUS_SUCCESS;
 680:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 681:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       else
 682:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 683:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_STATUS_BUFFER_INVALID;
 684:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 685:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 686:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 687:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
 688:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 689:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 690:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 691:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Receive interrupt handler for the APP.
 692:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * This is a common interrupt handling function for different instances of the SPI_SLAVE APP.
 693:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 694:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * param[in]  handle SPI_SLAVE APP handle pointer of type SPI_SLAVE_t*
 695:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 696:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * return void
 697:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 698:../Dave/Generated/SPI_SLAVE/spi_slave.c **** void SPI_SLAVE_lReceiveHandler(const SPI_SLAVE_t * const handle)
 699:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 700:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 701:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t bytes_per_word = (uint32_t)ptr_runtime->data_size;
 702:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint16_t data_value;
 703:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 704:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 705:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 706:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*When Receive FIFO is enabled*/
 707:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     while (XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel) == false)
 708:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 709:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 710:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 711:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Read all the content of Receive FIFO */
 712:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         data_value = XMC_SPI_CH_GetReceivedData(handle->channel);
 713:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         memcpy((void *)&ptr_runtime->rx_data[ptr_runtime->rx_data_index * bytes_per_word], (void *)
 714:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_data_index++;
 715:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 716:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 717:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 718:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 719:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Reception complete*/
 720:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_busy = false;
 721:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Disable both standard receive and alternative receive FIFO events*/
 722:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,
 723:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 724:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 725:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         if (handle->config->rx_cbhandler != NULL)
 726:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 727:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           /*Execute the 'End of reception' callback function*/
 728:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           handle->config->rx_cbhandler();
 729:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 730:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         break;
 731:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 732:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 733:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Set the trigger limit if data still to be received*/
 734:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 735:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 736:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       SPI_SLAVE_lReconfigureRxFIFO(handle,
 737:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (uint32_t)(ptr_runtime->rx_data_count - ptr_runtime->rx_data_index));
 738:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 739:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 740:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   else
 741:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 742:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*When RxFIFO is disabled*/
 743:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 744:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 745:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       data_value = XMC_SPI_CH_GetReceivedData(handle->channel);
 746:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       memcpy((void *)&ptr_runtime->rx_data[ptr_runtime->rx_data_index * bytes_per_word], (void *)&d
 747:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ptr_runtime->rx_data_index++;
 748:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 749:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 750:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 751:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 752:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Reception complete*/
 753:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ptr_runtime->rx_busy = false;
 754:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Disable both standard receive and alternative receive FIFO events*/
 755:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_DisableEvent(handle->channel,
 756:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (uint32_t)((uint32_t)XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE | (uint32_t)XMC_SPI_CH_EVENT_ST
 757:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 758:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if (handle->config->rx_cbhandler != NULL)
 759:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 760:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Execute the 'End of reception' callback function*/
 761:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         handle->config->rx_cbhandler();
 762:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 763:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 764:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 765:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 766:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 767:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 768:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * A local function to reconfigure Receive FIFO with the given size and trigger limit.
 769:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Size is needed because the FIFO should be disabled before changing the trigger limit by
 770:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * clearing the FIFO size.
 771:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 772:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * param[in] SPI_SLAVE_t * pointer to the SPI_SLAVE APP handle
 773:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * param[in] uint8_t  number of bytes to be received.
 774:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 775:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * return void.
 776:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 777:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static void SPI_SLAVE_lReconfigureRxFIFO(const SPI_SLAVE_t * const handle, uint32_t count)
 778:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 779:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t fifo_size;
 780:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t ret_limit_val = 0U;
 781:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 782:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Get FIFO size in bytes*/
 783:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   fifo_size = (uint32_t)(0x01UL << (uint8_t)(handle->config->rx_fifo_size));
 784:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*If data size is more than FIFO size, configure the limit to the FIFO size*/
 785:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (count < fifo_size)
 786:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 787:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_limit_val = (uint32_t)(count - 1U);
 788:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 789:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   else
 790:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 791:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_limit_val = (uint32_t)(fifo_size - 1U);
 792:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 793:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Set the limit value*/
 794:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel,
 795:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         handle->config->rx_fifo_size, ret_limit_val);
 796:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 797:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 798:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 799:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Transmit and receive the data at the same time. This is supported for full duplex mode only.
 800:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 801:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_Transfer(const SPI_SLAVE_t *const handle,
 802:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint8_t* tx_dataptr,
 803:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint8_t* rx_dataptr,
 804:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint32_t count)
 805:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 1202              	 .loc 3 805 0
 1203              	 .cfi_startproc
 1204              	 
 1205              	 
 1206 0000 80B5     	 push {r7,lr}
 1207              	.LCFI96:
 1208              	 .cfi_def_cfa_offset 8
 1209              	 .cfi_offset 7,-8
 1210              	 .cfi_offset 14,-4
 1211 0002 86B0     	 sub sp,sp,#24
 1212              	.LCFI97:
 1213              	 .cfi_def_cfa_offset 32
 1214 0004 00AF     	 add r7,sp,#0
 1215              	.LCFI98:
 1216              	 .cfi_def_cfa_register 7
 1217 0006 F860     	 str r0,[r7,#12]
 1218 0008 B960     	 str r1,[r7,#8]
 1219 000a 7A60     	 str r2,[r7,#4]
 1220 000c 3B60     	 str r3,[r7]
 806:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t status = SPI_SLAVE_STATUS_MODE_MISMATCH;
 1221              	 .loc 3 806 0
 1222 000e 0423     	 movs r3,#4
 1223 0010 FB75     	 strb r3,[r7,#23]
 807:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 1224              	 .loc 3 807 0
 1225 0012 FB68     	 ldr r3,[r7,#12]
 1226 0014 9B68     	 ldr r3,[r3,#8]
 1227 0016 3B61     	 str r3,[r7,#16]
 808:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 809:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_Transfer: SPI_SLAVE APP handle invalid", (((handle != NULL)&&
 810:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (ptr_runtime != NULL))&&(handle->config != NULL)));
 811:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 812:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 813:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (XMC_SPI_CH_MODE_STANDARD == ptr_runtime->spi_current_mode)
 1228              	 .loc 3 813 0
 1229 0018 3B69     	 ldr r3,[r7,#16]
 1230 001a 1B7E     	 ldrb r3,[r3,#24]
 1231 001c 002B     	 cmp r3,#0
 1232 001e 36D1     	 bne .L55
 814:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 815:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /* Check whether SPI channel is free or not */
 816:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if ((tx_dataptr != NULL) && (rx_dataptr != NULL) && (count > 0U))
 1233              	 .loc 3 816 0
 1234 0020 BB68     	 ldr r3,[r7,#8]
 1235 0022 002B     	 cmp r3,#0
 1236 0024 31D0     	 beq .L56
 1237              	 .loc 3 816 0 is_stmt 0 discriminator 1
 1238 0026 7B68     	 ldr r3,[r7,#4]
 1239 0028 002B     	 cmp r3,#0
 1240 002a 2ED0     	 beq .L56
 1241              	 .loc 3 816 0 discriminator 2
 1242 002c 3B68     	 ldr r3,[r7]
 1243 002e 002B     	 cmp r3,#0
 1244 0030 2BD0     	 beq .L56
 817:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 818:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       status = SPI_SLAVE_STATUS_BUSY;
 1245              	 .loc 3 818 0 is_stmt 1
 1246 0032 0223     	 movs r3,#2
 1247 0034 FB75     	 strb r3,[r7,#23]
 819:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Check data pointer is valid or not*/
 820:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if ((false == ptr_runtime->rx_busy) && (false == ptr_runtime->tx_busy))
 1248              	 .loc 3 820 0
 1249 0036 3B69     	 ldr r3,[r7,#16]
 1250 0038 DB7E     	 ldrb r3,[r3,#27]
 1251 003a DBB2     	 uxtb r3,r3
 1252 003c 83F00103 	 eor r3,r3,#1
 1253 0040 DBB2     	 uxtb r3,r3
 1254 0042 002B     	 cmp r3,#0
 1255 0044 20D0     	 beq .L57
 1256              	 .loc 3 820 0 is_stmt 0 discriminator 1
 1257 0046 3B69     	 ldr r3,[r7,#16]
 1258 0048 9B7E     	 ldrb r3,[r3,#26]
 1259 004a DBB2     	 uxtb r3,r3
 1260 004c 83F00103 	 eor r3,r3,#1
 1261 0050 DBB2     	 uxtb r3,r3
 1262 0052 002B     	 cmp r3,#0
 1263 0054 18D0     	 beq .L57
 821:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 822:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         if(handle->config->receive_mode != SPI_SLAVE_TRANSFER_MODE_DIRECT)
 1264              	 .loc 3 822 0 is_stmt 1
 1265 0056 FB68     	 ldr r3,[r7,#12]
 1266 0058 5B68     	 ldr r3,[r3,#4]
 1267 005a 5B7E     	 ldrb r3,[r3,#25]
 1268 005c 022B     	 cmp r3,#2
 1269 005e 0AD0     	 beq .L58
 823:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 824:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (void)SPI_SLAVE_Receive(handle, rx_dataptr, count);
 1270              	 .loc 3 824 0
 1271 0060 F868     	 ldr r0,[r7,#12]
 1272 0062 7968     	 ldr r1,[r7,#4]
 1273 0064 3A68     	 ldr r2,[r7]
 1274 0066 FFF7FEFF 	 bl SPI_SLAVE_Receive
 825:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           /* Call the transmit, to receive the data synchronously */
 826:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (void)SPI_SLAVE_Transmit(handle, tx_dataptr, count);
 1275              	 .loc 3 826 0
 1276 006a F868     	 ldr r0,[r7,#12]
 1277 006c B968     	 ldr r1,[r7,#8]
 1278 006e 3A68     	 ldr r2,[r7]
 1279 0070 FFF7FEFF 	 bl SPI_SLAVE_Transmit
 1280 0074 05E0     	 b .L59
 1281              	.L58:
 827:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 828:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DIRECT_USED
 829:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         else
 830:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         {
 831:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           SPI_SLAVE_lTransferPolling(handle, tx_dataptr, rx_dataptr, count);
 1282              	 .loc 3 831 0
 1283 0076 F868     	 ldr r0,[r7,#12]
 1284 0078 B968     	 ldr r1,[r7,#8]
 1285 007a 7A68     	 ldr r2,[r7,#4]
 1286 007c 3B68     	 ldr r3,[r7]
 1287 007e FFF7FEFF 	 bl SPI_SLAVE_lTransferPolling
 1288              	.L59:
 832:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         }
 833:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 834:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         status = SPI_SLAVE_STATUS_SUCCESS;
 1289              	 .loc 3 834 0
 1290 0082 0023     	 movs r3,#0
 1291 0084 FB75     	 strb r3,[r7,#23]
 820:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 1292              	 .loc 3 820 0
 1293 0086 02E0     	 b .L55
 1294              	.L57:
 1295 0088 01E0     	 b .L55
 1296              	.L56:
 835:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 836:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 837:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
 838:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 839:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       status = SPI_SLAVE_STATUS_BUFFER_INVALID;
 1297              	 .loc 3 839 0
 1298 008a 0323     	 movs r3,#3
 1299 008c FB75     	 strb r3,[r7,#23]
 1300              	.L55:
 840:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 841:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 842:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 843:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return status;
 1301              	 .loc 3 843 0
 1302 008e FB7D     	 ldrb r3,[r7,#23]
 844:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 1303              	 .loc 3 844 0
 1304 0090 1846     	 mov r0,r3
 1305 0092 1837     	 adds r7,r7,#24
 1306              	.LCFI99:
 1307              	 .cfi_def_cfa_offset 8
 1308 0094 BD46     	 mov sp,r7
 1309              	.LCFI100:
 1310              	 .cfi_def_cfa_register 13
 1311              	 
 1312 0096 80BD     	 pop {r7,pc}
 1313              	 .cfi_endproc
 1314              	.LFE312:
 1316              	 .section .text.SPI_SLAVE_lTransferPolling,"ax",%progbits
 1317              	 .align 2
 1318              	 .thumb
 1319              	 .thumb_func
 1321              	SPI_SLAVE_lTransferPolling:
 1322              	.LFB313:
 845:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 846:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DIRECT_USED
 847:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static void SPI_SLAVE_lTransferPolling(const SPI_SLAVE_t *const handle,
 848:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint8_t* tx_dataptr,
 849:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint8_t* rx_dataptr,
 850:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                         uint32_t count)
 851:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 1323              	 .loc 3 851 0
 1324              	 .cfi_startproc
 1325              	 
 1326              	 
 1327 0000 80B5     	 push {r7,lr}
 1328              	.LCFI101:
 1329              	 .cfi_def_cfa_offset 8
 1330              	 .cfi_offset 7,-8
 1331              	 .cfi_offset 14,-4
 1332 0002 8AB0     	 sub sp,sp,#40
 1333              	.LCFI102:
 1334              	 .cfi_def_cfa_offset 48
 1335 0004 00AF     	 add r7,sp,#0
 1336              	.LCFI103:
 1337              	 .cfi_def_cfa_register 7
 1338 0006 F860     	 str r0,[r7,#12]
 1339 0008 B960     	 str r1,[r7,#8]
 1340 000a 7A60     	 str r2,[r7,#4]
 1341 000c 3B60     	 str r3,[r7]
 852:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 1342              	 .loc 3 852 0
 1343 000e FB68     	 ldr r3,[r7,#12]
 1344 0010 9B68     	 ldr r3,[r3,#8]
 1345 0012 3B62     	 str r3,[r7,#32]
 853:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t data_indx, bytes_per_word, loc_count;
 854:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint16_t data_value;
 855:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t rx_events = ((uint32_t)XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION |
 1346              	 .loc 3 855 0
 1347 0014 4FF44043 	 mov r3,#49152
 1348 0018 FB61     	 str r3,[r7,#28]
 856:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                         (uint32_t)XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION);
 857:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 858:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_Transfer: SPI_SLAVE APP handle invalid", (((handle != NULL)&&
 859:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (ptr_runtime != NULL))&&(handle->config != NULL)));
 860:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 861:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   bytes_per_word = (uint32_t)ptr_runtime->data_size;
 1349              	 .loc 3 861 0
 1350 001a 3B6A     	 ldr r3,[r7,#32]
 1351 001c 5B7E     	 ldrb r3,[r3,#25]
 1352 001e BB61     	 str r3,[r7,#24]
 862:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   loc_count = count << (bytes_per_word - 1U);
 1353              	 .loc 3 862 0
 1354 0020 BB69     	 ldr r3,[r7,#24]
 1355 0022 013B     	 subs r3,r3,#1
 1356 0024 1A46     	 mov r2,r3
 1357 0026 3B68     	 ldr r3,[r7]
 1358 0028 9340     	 lsls r3,r3,r2
 1359 002a 7B61     	 str r3,[r7,#20]
 863:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ptr_runtime->tx_busy = true;
 1360              	 .loc 3 863 0
 1361 002c 3B6A     	 ldr r3,[r7,#32]
 1362 002e 0122     	 movs r2,#1
 1363 0030 9A76     	 strb r2,[r3,#26]
 864:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ptr_runtime->rx_busy = true;
 1364              	 .loc 3 864 0
 1365 0032 3B6A     	 ldr r3,[r7,#32]
 1366 0034 0122     	 movs r2,#1
 1367 0036 DA76     	 strb r2,[r3,#27]
 865:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Flush tx buffers*/
 866:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if(handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 1368              	 .loc 3 866 0
 1369 0038 FB68     	 ldr r3,[r7,#12]
 1370 003a 5B68     	 ldr r3,[r3,#4]
 1371 003c 9B7E     	 ldrb r3,[r3,#26]
 1372 003e 002B     	 cmp r3,#0
 1373 0040 04D0     	 beq .L62
 867:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 868:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 1374              	 .loc 3 868 0
 1375 0042 FB68     	 ldr r3,[r7,#12]
 1376 0044 1B68     	 ldr r3,[r3]
 1377 0046 1846     	 mov r0,r3
 1378 0048 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_Flush
 1379              	.L62:
 869:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 870:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 871:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if(handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 1380              	 .loc 3 871 0
 1381 004c FB68     	 ldr r3,[r7,#12]
 1382 004e 5B68     	 ldr r3,[r3,#4]
 1383 0050 DB7E     	 ldrb r3,[r3,#27]
 1384 0052 002B     	 cmp r3,#0
 1385 0054 05D0     	 beq .L63
 872:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 873:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 1386              	 .loc 3 873 0
 1387 0056 FB68     	 ldr r3,[r7,#12]
 1388 0058 1B68     	 ldr r3,[r3]
 1389 005a 1846     	 mov r0,r3
 1390 005c FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_Flush
 1391 0060 05E0     	 b .L64
 1392              	.L63:
 874:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 875:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   else
 876:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 877:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, rx_events);
 1393              	 .loc 3 877 0
 1394 0062 FB68     	 ldr r3,[r7,#12]
 1395 0064 1B68     	 ldr r3,[r3]
 1396 0066 1846     	 mov r0,r3
 1397 0068 F969     	 ldr r1,[r7,#28]
 1398 006a FFF7FEFF 	 bl XMC_SPI_CH_ClearStatusFlag
 1399              	.L64:
 878:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 879:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Flush RBUF- Repeat for RBUF0 and RBUF1*/
 880:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   (void)XMC_SPI_CH_GetReceivedData(handle->channel);
 1400              	 .loc 3 880 0
 1401 006e FB68     	 ldr r3,[r7,#12]
 1402 0070 1B68     	 ldr r3,[r3]
 1403 0072 1846     	 mov r0,r3
 1404 0074 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 881:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   (void)XMC_SPI_CH_GetReceivedData(handle->channel);
 1405              	 .loc 3 881 0
 1406 0078 FB68     	 ldr r3,[r7,#12]
 1407 007a 1B68     	 ldr r3,[r3]
 1408 007c 1846     	 mov r0,r3
 1409 007e FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 882:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 883:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_USIC_CH_SetTransmitBufferStatus(handle->channel, XMC_USIC_CH_TBUF_STATUS_SET_IDLE);
 1410              	 .loc 3 883 0
 1411 0082 FB68     	 ldr r3,[r7,#12]
 1412 0084 1B68     	 ldr r3,[r3]
 1413 0086 1846     	 mov r0,r3
 1414 0088 0221     	 movs r1,#2
 1415 008a FFF7FEFF 	 bl XMC_USIC_CH_SetTransmitBufferStatus
 884:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 885:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   memcpy((void *)&data_value, (void *)&tx_dataptr[0U], bytes_per_word);
 1416              	 .loc 3 885 0
 1417 008e 07F11203 	 add r3,r7,#18
 1418 0092 1846     	 mov r0,r3
 1419 0094 B968     	 ldr r1,[r7,#8]
 1420 0096 BA69     	 ldr r2,[r7,#24]
 1421 0098 FFF7FEFF 	 bl memcpy
 886:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_SPI_CH_Transmit(handle->channel, data_value, ptr_runtime->spi_current_mode);
 1422              	 .loc 3 886 0
 1423 009c FB68     	 ldr r3,[r7,#12]
 1424 009e 1968     	 ldr r1,[r3]
 1425 00a0 7A8A     	 ldrh r2,[r7,#18]
 1426 00a2 3B6A     	 ldr r3,[r7,#32]
 1427 00a4 1B7E     	 ldrb r3,[r3,#24]
 1428 00a6 0846     	 mov r0,r1
 1429 00a8 1146     	 mov r1,r2
 1430 00aa 1A46     	 mov r2,r3
 1431 00ac FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 887:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   data_indx = bytes_per_word;
 1432              	 .loc 3 887 0
 1433 00b0 BB69     	 ldr r3,[r7,#24]
 1434 00b2 7B62     	 str r3,[r7,#36]
 888:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 889:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if(handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 1435              	 .loc 3 889 0
 1436 00b4 FB68     	 ldr r3,[r7,#12]
 1437 00b6 5B68     	 ldr r3,[r3,#4]
 1438 00b8 DB7E     	 ldrb r3,[r3,#27]
 1439 00ba 002B     	 cmp r3,#0
 1440 00bc 42D0     	 beq .L65
 890:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 891:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Load TBUF or TxFIFO with data and wait for receive interrupt*/
 892:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     while(data_indx < loc_count)
 1441              	 .loc 3 892 0
 1442 00be 33E0     	 b .L66
 1443              	.L68:
 893:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 894:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       memcpy((void *)&data_value, (void *)&tx_dataptr[data_indx], bytes_per_word);
 1444              	 .loc 3 894 0
 1445 00c0 BA68     	 ldr r2,[r7,#8]
 1446 00c2 7B6A     	 ldr r3,[r7,#36]
 1447 00c4 1344     	 add r3,r3,r2
 1448 00c6 07F11202 	 add r2,r7,#18
 1449 00ca 1046     	 mov r0,r2
 1450 00cc 1946     	 mov r1,r3
 1451 00ce BA69     	 ldr r2,[r7,#24]
 1452 00d0 FFF7FEFF 	 bl memcpy
 895:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_Transmit(handle->channel, data_value, ptr_runtime->spi_current_mode);
 1453              	 .loc 3 895 0
 1454 00d4 FB68     	 ldr r3,[r7,#12]
 1455 00d6 1968     	 ldr r1,[r3]
 1456 00d8 7A8A     	 ldrh r2,[r7,#18]
 1457 00da 3B6A     	 ldr r3,[r7,#32]
 1458 00dc 1B7E     	 ldrb r3,[r3,#24]
 1459 00de 0846     	 mov r0,r1
 1460 00e0 1146     	 mov r1,r2
 1461 00e2 1A46     	 mov r2,r3
 1462 00e4 FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 896:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 897:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while(XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel))
 1463              	 .loc 3 897 0
 1464 00e8 00BF     	 nop
 1465              	.L67:
 1466              	 .loc 3 897 0 is_stmt 0 discriminator 1
 1467 00ea FB68     	 ldr r3,[r7,#12]
 1468 00ec 1B68     	 ldr r3,[r3]
 1469 00ee 1846     	 mov r0,r3
 1470 00f0 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_IsEmpty
 1471 00f4 0346     	 mov r3,r0
 1472 00f6 002B     	 cmp r3,#0
 1473 00f8 F7D1     	 bne .L67
 898:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 899:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 900:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 901:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       data_value = XMC_SPI_CH_GetReceivedData(handle->channel);
 1474              	 .loc 3 901 0 is_stmt 1
 1475 00fa FB68     	 ldr r3,[r7,#12]
 1476 00fc 1B68     	 ldr r3,[r3]
 1477 00fe 1846     	 mov r0,r3
 1478 0100 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 1479 0104 0346     	 mov r3,r0
 1480 0106 7B82     	 strh r3,[r7,#18]
 902:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 903:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       memcpy((void *)&rx_dataptr[data_indx - bytes_per_word], (void *)&data_value, bytes_per_word);
 1481              	 .loc 3 903 0
 1482 0108 7A6A     	 ldr r2,[r7,#36]
 1483 010a BB69     	 ldr r3,[r7,#24]
 1484 010c D31A     	 subs r3,r2,r3
 1485 010e 7A68     	 ldr r2,[r7,#4]
 1486 0110 1A44     	 add r2,r2,r3
 1487 0112 07F11203 	 add r3,r7,#18
 1488 0116 1046     	 mov r0,r2
 1489 0118 1946     	 mov r1,r3
 1490 011a BA69     	 ldr r2,[r7,#24]
 1491 011c FFF7FEFF 	 bl memcpy
 904:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       data_indx = data_indx + bytes_per_word;
 1492              	 .loc 3 904 0
 1493 0120 7A6A     	 ldr r2,[r7,#36]
 1494 0122 BB69     	 ldr r3,[r7,#24]
 1495 0124 1344     	 add r3,r3,r2
 1496 0126 7B62     	 str r3,[r7,#36]
 1497              	.L66:
 892:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 1498              	 .loc 3 892 0
 1499 0128 7A6A     	 ldr r2,[r7,#36]
 1500 012a 7B69     	 ldr r3,[r7,#20]
 1501 012c 9A42     	 cmp r2,r3
 1502 012e C7D3     	 bcc .L68
 905:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 906:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     while(XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel))
 1503              	 .loc 3 906 0
 1504 0130 00BF     	 nop
 1505              	.L69:
 1506              	 .loc 3 906 0 is_stmt 0 discriminator 1
 1507 0132 FB68     	 ldr r3,[r7,#12]
 1508 0134 1B68     	 ldr r3,[r3]
 1509 0136 1846     	 mov r0,r3
 1510 0138 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_IsEmpty
 1511 013c 0346     	 mov r3,r0
 1512 013e 002B     	 cmp r3,#0
 1513 0140 F7D1     	 bne .L69
 1514 0142 51E0     	 b .L70
 1515              	.L65:
 907:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 908:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 909:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 910:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   else
 911:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 912:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Load TBUF or TxFIFO with data and wait for receive interrupt*/
 913:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     while(data_indx < loc_count)
 1516              	 .loc 3 913 0 is_stmt 1
 1517 0144 3BE0     	 b .L71
 1518              	.L73:
 914:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 915:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       memcpy((void *)&data_value, (void *)&tx_dataptr[data_indx], bytes_per_word);
 1519              	 .loc 3 915 0
 1520 0146 BA68     	 ldr r2,[r7,#8]
 1521 0148 7B6A     	 ldr r3,[r7,#36]
 1522 014a 1344     	 add r3,r3,r2
 1523 014c 07F11202 	 add r2,r7,#18
 1524 0150 1046     	 mov r0,r2
 1525 0152 1946     	 mov r1,r3
 1526 0154 BA69     	 ldr r2,[r7,#24]
 1527 0156 FFF7FEFF 	 bl memcpy
 916:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_Transmit(handle->channel, data_value, ptr_runtime->spi_current_mode);
 1528              	 .loc 3 916 0
 1529 015a FB68     	 ldr r3,[r7,#12]
 1530 015c 1968     	 ldr r1,[r3]
 1531 015e 7A8A     	 ldrh r2,[r7,#18]
 1532 0160 3B6A     	 ldr r3,[r7,#32]
 1533 0162 1B7E     	 ldrb r3,[r3,#24]
 1534 0164 0846     	 mov r0,r1
 1535 0166 1146     	 mov r1,r2
 1536 0168 1A46     	 mov r2,r3
 1537 016a FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 917:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 918:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while(!(XMC_SPI_CH_GetStatusFlag(handle->channel) & rx_events))
 1538              	 .loc 3 918 0
 1539 016e 00BF     	 nop
 1540              	.L72:
 1541              	 .loc 3 918 0 is_stmt 0 discriminator 1
 1542 0170 FB68     	 ldr r3,[r7,#12]
 1543 0172 1B68     	 ldr r3,[r3]
 1544 0174 1846     	 mov r0,r3
 1545 0176 FFF7FEFF 	 bl XMC_SPI_CH_GetStatusFlag
 1546 017a 0246     	 mov r2,r0
 1547 017c FB69     	 ldr r3,[r7,#28]
 1548 017e 1340     	 ands r3,r3,r2
 1549 0180 002B     	 cmp r3,#0
 1550 0182 F5D0     	 beq .L72
 919:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 920:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
 921:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_ClearStatusFlag(handle->channel, rx_events);
 1551              	 .loc 3 921 0 is_stmt 1
 1552 0184 FB68     	 ldr r3,[r7,#12]
 1553 0186 1B68     	 ldr r3,[r3]
 1554 0188 1846     	 mov r0,r3
 1555 018a F969     	 ldr r1,[r7,#28]
 1556 018c FFF7FEFF 	 bl XMC_SPI_CH_ClearStatusFlag
 922:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       data_value = XMC_SPI_CH_GetReceivedData(handle->channel);
 1557              	 .loc 3 922 0
 1558 0190 FB68     	 ldr r3,[r7,#12]
 1559 0192 1B68     	 ldr r3,[r3]
 1560 0194 1846     	 mov r0,r3
 1561 0196 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 1562 019a 0346     	 mov r3,r0
 1563 019c 7B82     	 strh r3,[r7,#18]
 923:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 924:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       memcpy((void *)&rx_dataptr[data_indx - bytes_per_word], (void *)&data_value, bytes_per_word);
 1564              	 .loc 3 924 0
 1565 019e 7A6A     	 ldr r2,[r7,#36]
 1566 01a0 BB69     	 ldr r3,[r7,#24]
 1567 01a2 D31A     	 subs r3,r2,r3
 1568 01a4 7A68     	 ldr r2,[r7,#4]
 1569 01a6 1A44     	 add r2,r2,r3
 1570 01a8 07F11203 	 add r3,r7,#18
 1571 01ac 1046     	 mov r0,r2
 1572 01ae 1946     	 mov r1,r3
 1573 01b0 BA69     	 ldr r2,[r7,#24]
 1574 01b2 FFF7FEFF 	 bl memcpy
 925:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       data_indx = data_indx + bytes_per_word;
 1575              	 .loc 3 925 0
 1576 01b6 7A6A     	 ldr r2,[r7,#36]
 1577 01b8 BB69     	 ldr r3,[r7,#24]
 1578 01ba 1344     	 add r3,r3,r2
 1579 01bc 7B62     	 str r3,[r7,#36]
 1580              	.L71:
 913:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 1581              	 .loc 3 913 0
 1582 01be 7A6A     	 ldr r2,[r7,#36]
 1583 01c0 7B69     	 ldr r3,[r7,#20]
 1584 01c2 9A42     	 cmp r2,r3
 1585 01c4 BFD3     	 bcc .L73
 926:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 927:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     while(!(XMC_SPI_CH_GetStatusFlag(handle->channel) & rx_events))
 1586              	 .loc 3 927 0
 1587 01c6 00BF     	 nop
 1588              	.L74:
 1589              	 .loc 3 927 0 is_stmt 0 discriminator 1
 1590 01c8 FB68     	 ldr r3,[r7,#12]
 1591 01ca 1B68     	 ldr r3,[r3]
 1592 01cc 1846     	 mov r0,r3
 1593 01ce FFF7FEFF 	 bl XMC_SPI_CH_GetStatusFlag
 1594 01d2 0246     	 mov r2,r0
 1595 01d4 FB69     	 ldr r3,[r7,#28]
 1596 01d6 1340     	 ands r3,r3,r2
 1597 01d8 002B     	 cmp r3,#0
 1598 01da F5D0     	 beq .L74
 928:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 929:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
 930:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, rx_events);
 1599              	 .loc 3 930 0 is_stmt 1
 1600 01dc FB68     	 ldr r3,[r7,#12]
 1601 01de 1B68     	 ldr r3,[r3]
 1602 01e0 1846     	 mov r0,r3
 1603 01e2 F969     	 ldr r1,[r7,#28]
 1604 01e4 FFF7FEFF 	 bl XMC_SPI_CH_ClearStatusFlag
 1605              	.L70:
 931:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
 932:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 933:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   data_value = XMC_SPI_CH_GetReceivedData(handle->channel);
 1606              	 .loc 3 933 0
 1607 01e8 FB68     	 ldr r3,[r7,#12]
 1608 01ea 1B68     	 ldr r3,[r3]
 1609 01ec 1846     	 mov r0,r3
 1610 01ee FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 1611 01f2 0346     	 mov r3,r0
 1612 01f4 7B82     	 strh r3,[r7,#18]
 934:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   memcpy((void *)&rx_dataptr[data_indx - bytes_per_word], (void *)&data_value, bytes_per_word);
 1613              	 .loc 3 934 0
 1614 01f6 7A6A     	 ldr r2,[r7,#36]
 1615 01f8 BB69     	 ldr r3,[r7,#24]
 1616 01fa D31A     	 subs r3,r2,r3
 1617 01fc 7A68     	 ldr r2,[r7,#4]
 1618 01fe 1A44     	 add r2,r2,r3
 1619 0200 07F11203 	 add r3,r7,#18
 1620 0204 1046     	 mov r0,r2
 1621 0206 1946     	 mov r1,r3
 1622 0208 BA69     	 ldr r2,[r7,#24]
 1623 020a FFF7FEFF 	 bl memcpy
 935:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ptr_runtime->tx_busy = false;
 1624              	 .loc 3 935 0
 1625 020e 3B6A     	 ldr r3,[r7,#32]
 1626 0210 0022     	 movs r2,#0
 1627 0212 9A76     	 strb r2,[r3,#26]
 936:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ptr_runtime->rx_busy = false;
 1628              	 .loc 3 936 0
 1629 0214 3B6A     	 ldr r3,[r7,#32]
 1630 0216 0022     	 movs r2,#0
 1631 0218 DA76     	 strb r2,[r3,#27]
 937:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 1632              	 .loc 3 937 0
 1633 021a 2837     	 adds r7,r7,#40
 1634              	.LCFI104:
 1635              	 .cfi_def_cfa_offset 8
 1636 021c BD46     	 mov sp,r7
 1637              	.LCFI105:
 1638              	 .cfi_def_cfa_register 13
 1639              	 
 1640 021e 80BD     	 pop {r7,pc}
 1641              	 .cfi_endproc
 1642              	.LFE313:
 1644              	 .section .text.SPI_SLAVE_lTransmitPolling,"ax",%progbits
 1645              	 .align 2
 1646              	 .thumb
 1647              	 .thumb_func
 1649              	SPI_SLAVE_lTransmitPolling:
 1650              	.LFB314:
 938:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
 939:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 940:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_DMA_USED
 941:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
 942:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Registers a request for transmitting data over SPI_SLAVE channel using DMA.
 943:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 944:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  SPI_SLAVE_t*  SPI_SLAVE APP handle pointer of type SPI_SLAVE_t
 945:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  uint8_t* Pointer to data
 946:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  uint32_t Total no of words to be transmitted.
 947:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 948:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t SPI_SLAVE_STATUS_SUCCESS if the request is accepted.
 949:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *                        SPI_SLAVE_STATUS_BUSY if a transmission is in progress.
 950:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Details of function:
 951:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * The data transmission is accomplished using a DMA channel. User can configure
 952:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 953:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * function will be executed.
 954:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 955:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * request is registered.
 956:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 957:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
 958:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
 959:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_StartTransmitDMA(const SPI_SLAVE_t *const handle, uint8_t* data_ptr, u
 960:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 961:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_MODE_MISMATCH;
 962:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 963:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   const SPI_SLAVE_DMA_CONFIG_t * ptr_dma_config = handle->config->transmit_dma_config;
 964:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_DMA_t * ptr_gpdma = handle->config->global_dma->dma;
 965:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t slave_mode = (uint32_t)handle->runtime->spi_current_mode;
 966:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 967:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_StartTransmitDMA: SPI_SLAVE APP handle invalid", (((handle != NULL)&&
 968:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (ptr_runtime != NULL))&&(handle->config != NULL)));
 969:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 970:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (handle->config->transmit_mode == SPI_SLAVE_TRANSFER_MODE_DMA)
 971:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 972:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_STATUS_BUSY;
 973:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (ptr_runtime->tx_busy == false)
 974:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
 975:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*If there is no transmission in progress*/
 976:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if ((data_ptr != NULL) && ((count > 0U) &&(count <= SPI_SLAVE_DMA_MAXCOUNT)))
 977:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
 978:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Obtain the address of data, size of data*/
 979:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->tx_data = data_ptr;
 980:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->tx_data_count = count;
 981:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Initialize to first index and set the busy flag*/
 982:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->tx_data_index = 0U;
 983:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->tx_busy = true;
 984:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_USIC_CH_SetTransmitBufferStatus(handle->channel, XMC_USIC_CH_TBUF_STATUS_SET_IDLE);
 985:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Clear pending triggers*/
 986:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_ClearRequestLine(ptr_gpdma, handle->config->tx_dlr_line);
 987:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 988:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Enable transmit event generation*/
 989:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_SPI_CH_EnableEvent(handle->channel, (uint32_t)XMC_SPI_CH_EVENT_RECEIVE_START);
 990:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
 991:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Enable DMA channel*/
 992:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_CH_SetBlockSize(ptr_gpdma, ptr_dma_config->dma_channel, count);
 993:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_CH_SetSourceAddress(ptr_gpdma, ptr_dma_config->dma_channel, (uint32_t)data_ptr);
 994:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_CH_SetDestinationAddress(ptr_gpdma, ptr_dma_config->dma_channel,
 995:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                                          (uint32_t)&(handle->channel->TBUF[slave_mode]));
 996:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_CH_Enable(ptr_gpdma, ptr_dma_config->dma_channel);
 997:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*First trigger to load TBUF*/
 998:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_USIC_CH_TriggerServiceRequest(handle->channel, handle->config->tx_sr);
 999:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_STATUS_SUCCESS;
1000:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
1001:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       else
1002:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
1003:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_STATUS_BUFFER_INVALID;
1004:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
1005:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1006:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1007:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
1008:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
1009:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
1010:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1011:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DMA_USED
1012:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
1013:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @brief Registers a request to receive data over SPI_SLAVE channel using DMA.
1014:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1015:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  SPI_SLAVE_t* SPI_SLAVE APP handle pointer of type SPI_SLAVE_t
1016:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  uint8_t*  Pointer to data array
1017:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in]  uint32_t  Total no of bytes to be read.
1018:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1019:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return  SPI_SLAVE_STATUS_t SPI_SLAVE_STATUS_SUCCESS if the request is accepted.
1020:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *                        SPI_SLAVE_STATUS_BUSY if a reception is in progress.
1021:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Details of function:
1022:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * This function registers the receive request by configuring the SPI_SLAVE
1023:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * receive Standard buffer and the DMA channel. The data
1024:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * is received asynchronously. When the requested number of data bytes are received,
1025:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * optionally, the user configured callback function will be executed.
1026:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1027:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
1028:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * request is registered.
1029:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1030:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1031:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
1032:../Dave/Generated/SPI_SLAVE/spi_slave.c **** SPI_SLAVE_STATUS_t SPI_SLAVE_StartReceiveDMA(const SPI_SLAVE_t *const handle, uint8_t* data_ptr, ui
1033:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
1034:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_MODE_MISMATCH;
1035:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
1036:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   const SPI_SLAVE_DMA_CONFIG_t * ptr_dma_config = handle->config->receive_dma_config;
1037:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_DMA_t * ptr_gpdma = handle->config->global_dma->dma;
1038:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1039:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_ASSERT("SPI_SLAVE_StartReceiveDMA: SPI_SLAVE APP handle invalid", (((handle != NULL)&&
1040:../Dave/Generated/SPI_SLAVE/spi_slave.c ****             (ptr_runtime != NULL)) && (handle->config != NULL)));
1041:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1042:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (handle->config->receive_mode == SPI_SLAVE_TRANSFER_MODE_DMA)
1043:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
1044:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     ret_stat = SPI_SLAVE_STATUS_BUSY;
1045:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (ptr_runtime->rx_busy == false)
1046:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1047:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*If no active reception in progress*/
1048:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       if ((data_ptr != NULL) && ((count > 0U) && (count <= SPI_SLAVE_DMA_MAXCOUNT)))
1049:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
1050:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Configure hardware port direction required for half duplex mode reception*/
1051:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_SPI_CH_Receive(handle->channel, handle->runtime->spi_current_mode);
1052:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Obtain the address of data buffer and
1053:../Dave/Generated/SPI_SLAVE/spi_slave.c ****          * number of data bytes to be received*/
1054:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_data = data_ptr;
1055:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_data_count = count;
1056:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_busy = true;
1057:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ptr_runtime->rx_data_index = 0U;
1058:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Flush RBUF- Repeat for RBUF0 and RBUF1*/
1059:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         (void)XMC_SPI_CH_GetReceivedData(handle->channel);
1060:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         (void)XMC_SPI_CH_GetReceivedData(handle->channel);
1061:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1062:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_SPI_CH_EnableEvent(handle->channel,
1063:../Dave/Generated/SPI_SLAVE/spi_slave.c ****           (uint32_t)((uint32_t)XMC_SPI_CH_EVENT_STANDARD_RECEIVE | (uint32_t)XMC_SPI_CH_EVENT_ALTER
1064:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_STATUS_SUCCESS;
1065:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1066:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         /*Enable DMA channel*/
1067:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_CH_SetBlockSize(ptr_gpdma, ptr_dma_config->dma_channel, count);
1068:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_CH_SetSourceAddress(ptr_gpdma, ptr_dma_config->dma_channel, (uint32_t)&(handle->cha
1069:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_CH_SetDestinationAddress(ptr_gpdma, ptr_dma_config->dma_channel, (uint32_t)data_ptr
1070:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         XMC_DMA_CH_Enable(ptr_gpdma, ptr_dma_config->dma_channel);
1071:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
1072:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       else
1073:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
1074:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         ret_stat = SPI_SLAVE_STATUS_BUFFER_INVALID;
1075:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
1076:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1077:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1078:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
1079:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
1080:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
1081:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1082:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_TX_DIRECT_USED
1083:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
1084:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Polling method to transmit data.
1085:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in] SPI_SLAVE_t* handle SPI_SLAVE APP handle pointer
1086:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in] uint8_t*  Pointer to data array
1087:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in] uint32_t number of bytes to be transmitted.
1088:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1089:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return SPI_SLAVE_STATUS_t Status of transmit request handling.
1090:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1091:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Description:
1092:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Transmits data by blocking the CPU until all data is sent. Transmission
1093:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * cannot be aborted since it is blocking implementation. Based on FIFO selection,
1094:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * either TBUF or IN register is updated with the data.
1095:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1096:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
1097:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static SPI_SLAVE_STATUS_t SPI_SLAVE_lTransmitPolling(const SPI_SLAVE_t *const handle, uint8_t* data
1098:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 1651              	 .loc 3 1098 0
 1652              	 .cfi_startproc
 1653              	 
 1654              	 
 1655 0000 80B5     	 push {r7,lr}
 1656              	.LCFI106:
 1657              	 .cfi_def_cfa_offset 8
 1658              	 .cfi_offset 7,-8
 1659              	 .cfi_offset 14,-4
 1660 0002 88B0     	 sub sp,sp,#32
 1661              	.LCFI107:
 1662              	 .cfi_def_cfa_offset 40
 1663 0004 00AF     	 add r7,sp,#0
 1664              	.LCFI108:
 1665              	 .cfi_def_cfa_register 7
 1666 0006 F860     	 str r0,[r7,#12]
 1667 0008 B960     	 str r1,[r7,#8]
 1668 000a 7A60     	 str r2,[r7,#4]
1099:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_BUFFER_INVALID;
 1669              	 .loc 3 1099 0
 1670 000c 0323     	 movs r3,#3
 1671 000e FB76     	 strb r3,[r7,#27]
1100:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t loc_index;
1101:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 1672              	 .loc 3 1101 0
 1673 0010 FB68     	 ldr r3,[r7,#12]
 1674 0012 9B68     	 ldr r3,[r3,#8]
 1675 0014 7B61     	 str r3,[r7,#20]
1102:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint16_t * ptr_data_16bit;
1103:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1104:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1105:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ptr_runtime->tx_busy = true;
 1676              	 .loc 3 1105 0
 1677 0016 7B69     	 ldr r3,[r7,#20]
 1678 0018 0122     	 movs r2,#1
 1679 001a 9A76     	 strb r2,[r3,#26]
1106:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 1680              	 .loc 3 1106 0
 1681 001c FB68     	 ldr r3,[r7,#12]
 1682 001e 5B68     	 ldr r3,[r3,#4]
 1683 0020 9B7E     	 ldrb r3,[r3,#26]
 1684 0022 002B     	 cmp r3,#0
 1685 0024 05D0     	 beq .L76
1107:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
1108:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Clear the transmit FIFO*/
1109:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 1686              	 .loc 3 1109 0
 1687 0026 FB68     	 ldr r3,[r7,#12]
 1688 0028 1B68     	 ldr r3,[r3]
 1689 002a 1846     	 mov r0,r3
 1690 002c FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_Flush
 1691 0030 06E0     	 b .L77
 1692              	.L76:
1110:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1111:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   else
1112:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
1113:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, (uint32_t)XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_IND
 1693              	 .loc 3 1113 0
 1694 0032 FB68     	 ldr r3,[r7,#12]
 1695 0034 1B68     	 ldr r3,[r3]
 1696 0036 1846     	 mov r0,r3
 1697 0038 4FF48061 	 mov r1,#1024
 1698 003c FFF7FEFF 	 bl XMC_SPI_CH_ClearStatusFlag
 1699              	.L77:
1114:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1115:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Invalidate TBUF*/
1116:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_USIC_CH_SetTransmitBufferStatus(handle->channel, XMC_USIC_CH_TBUF_STATUS_SET_IDLE);
 1700              	 .loc 3 1116 0
 1701 0040 FB68     	 ldr r3,[r7,#12]
 1702 0042 1B68     	 ldr r3,[r3]
 1703 0044 1846     	 mov r0,r3
 1704 0046 0221     	 movs r1,#2
 1705 0048 FFF7FEFF 	 bl XMC_USIC_CH_SetTransmitBufferStatus
1117:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1118:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Loop through each byte*/
1119:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   for (loc_index = 0U; loc_index < count; loc_index++)
 1706              	 .loc 3 1119 0
 1707 004c 0023     	 movs r3,#0
 1708 004e FB61     	 str r3,[r7,#28]
 1709 0050 3FE0     	 b .L78
 1710              	.L85:
1120:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
1121:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if(ptr_runtime->data_size == SPI_SLAVE_DATA_SIZE_8BITS)
 1711              	 .loc 3 1121 0
 1712 0052 7B69     	 ldr r3,[r7,#20]
 1713 0054 5B7E     	 ldrb r3,[r3,#25]
 1714 0056 012B     	 cmp r3,#1
 1715 0058 0ED1     	 bne .L79
1122:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1123:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_Transmit(handle->channel,(uint16_t)data_ptr[loc_index], ptr_runtime->spi_current_m
 1716              	 .loc 3 1123 0
 1717 005a FB68     	 ldr r3,[r7,#12]
 1718 005c 1968     	 ldr r1,[r3]
 1719 005e BA68     	 ldr r2,[r7,#8]
 1720 0060 FB69     	 ldr r3,[r7,#28]
 1721 0062 1344     	 add r3,r3,r2
 1722 0064 1B78     	 ldrb r3,[r3]
 1723 0066 9AB2     	 uxth r2,r3
 1724 0068 7B69     	 ldr r3,[r7,#20]
 1725 006a 1B7E     	 ldrb r3,[r3,#24]
 1726 006c 0846     	 mov r0,r1
 1727 006e 1146     	 mov r1,r2
 1728 0070 1A46     	 mov r2,r3
 1729 0072 FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 1730 0076 0FE0     	 b .L80
 1731              	.L79:
1124:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1125:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
1126:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1127:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ptr_data_16bit = (uint16_t*)data_ptr;
 1732              	 .loc 3 1127 0
 1733 0078 BB68     	 ldr r3,[r7,#8]
 1734 007a 3B61     	 str r3,[r7,#16]
1128:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_Transmit(handle->channel, ptr_data_16bit[loc_index], ptr_runtime->spi_current_mode
 1735              	 .loc 3 1128 0
 1736 007c FB68     	 ldr r3,[r7,#12]
 1737 007e 1968     	 ldr r1,[r3]
 1738 0080 FB69     	 ldr r3,[r7,#28]
 1739 0082 5B00     	 lsls r3,r3,#1
 1740 0084 3A69     	 ldr r2,[r7,#16]
 1741 0086 1344     	 add r3,r3,r2
 1742 0088 1A88     	 ldrh r2,[r3]
 1743 008a 7B69     	 ldr r3,[r7,#20]
 1744 008c 1B7E     	 ldrb r3,[r3,#24]
 1745 008e 0846     	 mov r0,r1
 1746 0090 1146     	 mov r1,r2
 1747 0092 1A46     	 mov r2,r3
 1748 0094 FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 1749              	.L80:
1129:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1130:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*If FIFO is enabled, FIFO filling status should be checked
1131:../Dave/Generated/SPI_SLAVE/spi_slave.c ****      * to avoid overflow error*/
1132:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 1750              	 .loc 3 1132 0
 1751 0098 FB68     	 ldr r3,[r7,#12]
 1752 009a 5B68     	 ldr r3,[r3,#4]
 1753 009c 9B7E     	 ldrb r3,[r3,#26]
 1754 009e 002B     	 cmp r3,#0
 1755 00a0 09D0     	 beq .L81
1133:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1134:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Wait if transmit FIFO is full*/
1135:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while (XMC_USIC_CH_TXFIFO_IsFull(handle->channel) == true)
 1756              	 .loc 3 1135 0
 1757 00a2 00BF     	 nop
 1758              	.L82:
 1759              	 .loc 3 1135 0 is_stmt 0 discriminator 1
 1760 00a4 FB68     	 ldr r3,[r7,#12]
 1761 00a6 1B68     	 ldr r3,[r3]
 1762 00a8 1846     	 mov r0,r3
 1763 00aa FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsFull
 1764 00ae 0346     	 mov r3,r0
 1765 00b0 002B     	 cmp r3,#0
 1766 00b2 F7D1     	 bne .L82
 1767 00b4 0AE0     	 b .L83
 1768              	.L81:
1136:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
1137:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
1138:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1139:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
1140:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1141:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while(!(XMC_SPI_CH_GetStatusFlag(handle->channel) & (uint32_t)XMC_SPI_CH_STATUS_FLAG_RECEIVER
 1769              	 .loc 3 1141 0 is_stmt 1
 1770 00b6 00BF     	 nop
 1771              	.L84:
 1772              	 .loc 3 1141 0 is_stmt 0 discriminator 1
 1773 00b8 FB68     	 ldr r3,[r7,#12]
 1774 00ba 1B68     	 ldr r3,[r3]
 1775 00bc 1846     	 mov r0,r3
 1776 00be FFF7FEFF 	 bl XMC_SPI_CH_GetStatusFlag
 1777 00c2 0346     	 mov r3,r0
 1778 00c4 03F48063 	 and r3,r3,#1024
 1779 00c8 002B     	 cmp r3,#0
 1780 00ca F5D0     	 beq .L84
 1781              	.L83:
1119:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 1782              	 .loc 3 1119 0 is_stmt 1 discriminator 2
 1783 00cc FB69     	 ldr r3,[r7,#28]
 1784 00ce 0133     	 adds r3,r3,#1
 1785 00d0 FB61     	 str r3,[r7,#28]
 1786              	.L78:
1119:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 1787              	 .loc 3 1119 0 is_stmt 0 discriminator 1
 1788 00d2 FA69     	 ldr r2,[r7,#28]
 1789 00d4 7B68     	 ldr r3,[r7,#4]
 1790 00d6 9A42     	 cmp r2,r3
 1791 00d8 BBD3     	 bcc .L85
1142:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
1143:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
1144:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1145:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1146:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1147:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 1792              	 .loc 3 1147 0 is_stmt 1
 1793 00da FB68     	 ldr r3,[r7,#12]
 1794 00dc 5B68     	 ldr r3,[r3,#4]
 1795 00de 9B7E     	 ldrb r3,[r3,#26]
 1796 00e0 002B     	 cmp r3,#0
 1797 00e2 0BD0     	 beq .L86
1148:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
1149:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Wait till FIFO is empty*/
1150:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     while (XMC_USIC_CH_TXFIFO_IsEmpty(handle->channel) == false)
 1798              	 .loc 3 1150 0
 1799 00e4 00BF     	 nop
 1800              	.L87:
 1801              	 .loc 3 1150 0 is_stmt 0 discriminator 1
 1802 00e6 FB68     	 ldr r3,[r7,#12]
 1803 00e8 1B68     	 ldr r3,[r3]
 1804 00ea 1846     	 mov r0,r3
 1805 00ec FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsEmpty
 1806 00f0 0346     	 mov r3,r0
 1807 00f2 83F00103 	 eor r3,r3,#1
 1808 00f6 DBB2     	 uxtb r3,r3
 1809 00f8 002B     	 cmp r3,#0
 1810 00fa F4D1     	 bne .L87
 1811              	.L86:
1151:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1152:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1153:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1154:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ret_stat = SPI_SLAVE_STATUS_SUCCESS;
 1812              	 .loc 3 1154 0 is_stmt 1
 1813 00fc 0023     	 movs r3,#0
 1814 00fe FB76     	 strb r3,[r7,#27]
1155:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ptr_runtime->tx_busy = false;
 1815              	 .loc 3 1155 0
 1816 0100 7B69     	 ldr r3,[r7,#20]
 1817 0102 0022     	 movs r2,#0
 1818 0104 9A76     	 strb r2,[r3,#26]
1156:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
 1819              	 .loc 3 1156 0
 1820 0106 FB7E     	 ldrb r3,[r7,#27]
1157:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 1821              	 .loc 3 1157 0
 1822 0108 1846     	 mov r0,r3
 1823 010a 2037     	 adds r7,r7,#32
 1824              	.LCFI109:
 1825              	 .cfi_def_cfa_offset 8
 1826 010c BD46     	 mov sp,r7
 1827              	.LCFI110:
 1828              	 .cfi_def_cfa_register 13
 1829              	 
 1830 010e 80BD     	 pop {r7,pc}
 1831              	 .cfi_endproc
 1832              	.LFE314:
 1834              	 .section .text.SPI_SLAVE_lReceivePolling,"ax",%progbits
 1835              	 .align 2
 1836              	 .thumb
 1837              	 .thumb_func
 1839              	SPI_SLAVE_lReceivePolling:
 1840              	.LFB315:
1158:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #endif
1159:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1160:../Dave/Generated/SPI_SLAVE/spi_slave.c **** #ifdef SPI_SLAVE_RX_DIRECT_USED
1161:../Dave/Generated/SPI_SLAVE/spi_slave.c **** /*
1162:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Polling method to receive data.
1163:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in] SPI_SLAVE_t* handle SPI_SLAVE APP handle pointer
1164:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in] uint8_t*  Pointer to data array
1165:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @param[in] uint32_t number of bytes to be received.
1166:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1167:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * @return SPI_SLAVE_STATUS_t Status of receive request handling.
1168:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1169:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Description:
1170:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * Receives data by blocking the CPU until all data is received. Reception
1171:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * cannot be aborted since it is blocking implementation. Based on FIFO selection,
1172:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  * either RBUF or OUT register will be read.
1173:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  *
1174:../Dave/Generated/SPI_SLAVE/spi_slave.c ****  */
1175:../Dave/Generated/SPI_SLAVE/spi_slave.c **** static SPI_SLAVE_STATUS_t SPI_SLAVE_lReceivePolling(const SPI_SLAVE_t *const handle, uint8_t* data_
1176:../Dave/Generated/SPI_SLAVE/spi_slave.c **** {
 1841              	 .loc 3 1176 0
 1842              	 .cfi_startproc
 1843              	 
 1844              	 
 1845 0000 90B5     	 push {r4,r7,lr}
 1846              	.LCFI111:
 1847              	 .cfi_def_cfa_offset 12
 1848              	 .cfi_offset 4,-12
 1849              	 .cfi_offset 7,-8
 1850              	 .cfi_offset 14,-4
 1851 0002 8BB0     	 sub sp,sp,#44
 1852              	.LCFI112:
 1853              	 .cfi_def_cfa_offset 56
 1854 0004 00AF     	 add r7,sp,#0
 1855              	.LCFI113:
 1856              	 .cfi_def_cfa_register 7
 1857 0006 F860     	 str r0,[r7,#12]
 1858 0008 B960     	 str r1,[r7,#8]
 1859 000a 7A60     	 str r2,[r7,#4]
1177:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_STATUS_t ret_stat = SPI_SLAVE_STATUS_BUFFER_INVALID;
 1860              	 .loc 3 1177 0
 1861 000c 0323     	 movs r3,#3
 1862 000e 87F82330 	 strb r3,[r7,#35]
1178:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t loc_index;
1179:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t loc_status;
1180:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   SPI_SLAVE_RUNTIME_t * ptr_runtime = handle->runtime;
 1863              	 .loc 3 1180 0
 1864 0012 FB68     	 ldr r3,[r7,#12]
 1865 0014 9B68     	 ldr r3,[r3,#8]
 1866 0016 FB61     	 str r3,[r7,#28]
1181:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint16_t * ptr_data_16bit;
1182:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   uint32_t rx_events = ((uint32_t)XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION |
 1867              	 .loc 3 1182 0
 1868 0018 4FF44043 	 mov r3,#49152
 1869 001c BB61     	 str r3,[r7,#24]
1183:../Dave/Generated/SPI_SLAVE/spi_slave.c ****                         (uint32_t)XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION);
1184:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1185:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1186:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ptr_runtime->rx_busy = true;
 1870              	 .loc 3 1186 0
 1871 001e FB69     	 ldr r3,[r7,#28]
 1872 0020 0122     	 movs r2,#1
 1873 0022 DA76     	 strb r2,[r3,#27]
1187:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Configure hardware port direction required for half duplex mode reception*/
1188:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   XMC_SPI_CH_Receive(handle->channel, handle->runtime->spi_current_mode);
 1874              	 .loc 3 1188 0
 1875 0024 FB68     	 ldr r3,[r7,#12]
 1876 0026 1A68     	 ldr r2,[r3]
 1877 0028 FB68     	 ldr r3,[r7,#12]
 1878 002a 9B68     	 ldr r3,[r3,#8]
 1879 002c 1B7E     	 ldrb r3,[r3,#24]
 1880 002e 1046     	 mov r0,r2
 1881 0030 1946     	 mov r1,r3
 1882 0032 FFF7FEFF 	 bl XMC_SPI_CH_Receive
1189:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1190:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 1883              	 .loc 3 1190 0
 1884 0036 FB68     	 ldr r3,[r7,#12]
 1885 0038 5B68     	 ldr r3,[r3,#4]
 1886 003a DB7E     	 ldrb r3,[r3,#27]
 1887 003c 002B     	 cmp r3,#0
 1888 003e 05D0     	 beq .L90
1191:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
1192:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*Clear the receive FIFO, configure the trigger lime
1193:../Dave/Generated/SPI_SLAVE/spi_slave.c ****      * and enable the receive events*/
1194:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 1889              	 .loc 3 1194 0
 1890 0040 FB68     	 ldr r3,[r7,#12]
 1891 0042 1B68     	 ldr r3,[r3]
 1892 0044 1846     	 mov r0,r3
 1893 0046 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_Flush
 1894 004a 05E0     	 b .L91
 1895              	.L90:
1195:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1196:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   else
1197:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
1198:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, rx_events);
 1896              	 .loc 3 1198 0
 1897 004c FB68     	 ldr r3,[r7,#12]
 1898 004e 1B68     	 ldr r3,[r3]
 1899 0050 1846     	 mov r0,r3
 1900 0052 B969     	 ldr r1,[r7,#24]
 1901 0054 FFF7FEFF 	 bl XMC_SPI_CH_ClearStatusFlag
 1902              	.L91:
1199:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1200:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   /*Flush RBUF- Repeat for RBUF0 and RBUF1*/
1201:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   (void)XMC_SPI_CH_GetReceivedData(handle->channel);
 1903              	 .loc 3 1201 0
 1904 0058 FB68     	 ldr r3,[r7,#12]
 1905 005a 1B68     	 ldr r3,[r3]
 1906 005c 1846     	 mov r0,r3
 1907 005e FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
1202:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   (void)XMC_SPI_CH_GetReceivedData(handle->channel);
 1908              	 .loc 3 1202 0
 1909 0062 FB68     	 ldr r3,[r7,#12]
 1910 0064 1B68     	 ldr r3,[r3]
 1911 0066 1846     	 mov r0,r3
 1912 0068 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
1203:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1204:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1205:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   for (loc_index = 0U; loc_index < count; loc_index++)
 1913              	 .loc 3 1205 0
 1914 006c 0023     	 movs r3,#0
 1915 006e 7B62     	 str r3,[r7,#36]
 1916 0070 3FE0     	 b .L92
 1917              	.L98:
1206:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
1207:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     /*If receive FIFO is configured, wait for FIFO to get data.*/
1208:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 1918              	 .loc 3 1208 0
 1919 0072 FB68     	 ldr r3,[r7,#12]
 1920 0074 5B68     	 ldr r3,[r3,#4]
 1921 0076 DB7E     	 ldrb r3,[r3,#27]
 1922 0078 002B     	 cmp r3,#0
 1923 007a 09D0     	 beq .L93
1209:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1210:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Wait if FIFO empty*/
1211:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       while(XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel) == true)
 1924              	 .loc 3 1211 0
 1925 007c 00BF     	 nop
 1926              	.L94:
 1927              	 .loc 3 1211 0 is_stmt 0 discriminator 1
 1928 007e FB68     	 ldr r3,[r7,#12]
 1929 0080 1B68     	 ldr r3,[r3]
 1930 0082 1846     	 mov r0,r3
 1931 0084 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_IsEmpty
 1932 0088 0346     	 mov r3,r0
 1933 008a 002B     	 cmp r3,#0
 1934 008c F7D1     	 bne .L94
 1935 008e 10E0     	 b .L95
 1936              	.L93:
1212:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
1213:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }
1214:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1215:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
1216:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1217:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Wait for RIF or AIF flag update*/
1218:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       do
1219:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       {
1220:../Dave/Generated/SPI_SLAVE/spi_slave.c ****         loc_status = XMC_SPI_CH_GetStatusFlag(handle->channel);
 1937              	 .loc 3 1220 0 is_stmt 1 discriminator 1
 1938 0090 FB68     	 ldr r3,[r7,#12]
 1939 0092 1B68     	 ldr r3,[r3]
 1940 0094 1846     	 mov r0,r3
 1941 0096 FFF7FEFF 	 bl XMC_SPI_CH_GetStatusFlag
 1942 009a 7861     	 str r0,[r7,#20]
1221:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       }while (!(loc_status & rx_events));
 1943              	 .loc 3 1221 0 discriminator 1
 1944 009c 7A69     	 ldr r2,[r7,#20]
 1945 009e BB69     	 ldr r3,[r7,#24]
 1946 00a0 1340     	 ands r3,r3,r2
 1947 00a2 002B     	 cmp r3,#0
 1948 00a4 F4D0     	 beq .L93
1222:../Dave/Generated/SPI_SLAVE/spi_slave.c **** 
1223:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       /*Clear the detected event.
1224:../Dave/Generated/SPI_SLAVE/spi_slave.c ****        * Both events should not be cleared at once, otherwise if 2 bytes are received, only
1225:../Dave/Generated/SPI_SLAVE/spi_slave.c ****        * one byte will be read.*/
1226:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       XMC_SPI_CH_ClearStatusFlag(handle->channel, rx_events);
 1949              	 .loc 3 1226 0
 1950 00a6 FB68     	 ldr r3,[r7,#12]
 1951 00a8 1B68     	 ldr r3,[r3]
 1952 00aa 1846     	 mov r0,r3
 1953 00ac B969     	 ldr r1,[r7,#24]
 1954 00ae FFF7FEFF 	 bl XMC_SPI_CH_ClearStatusFlag
 1955              	.L95:
1227:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1228:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     if(ptr_runtime->data_size == SPI_SLAVE_DATA_SIZE_8BITS)
 1956              	 .loc 3 1228 0
 1957 00b2 FB69     	 ldr r3,[r7,#28]
 1958 00b4 5B7E     	 ldrb r3,[r3,#25]
 1959 00b6 012B     	 cmp r3,#1
 1960 00b8 0BD1     	 bne .L96
1229:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1230:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       data_ptr[loc_index] = (uint8_t)XMC_SPI_CH_GetReceivedData(handle->channel);
 1961              	 .loc 3 1230 0
 1962 00ba BA68     	 ldr r2,[r7,#8]
 1963 00bc 7B6A     	 ldr r3,[r7,#36]
 1964 00be D418     	 adds r4,r2,r3
 1965 00c0 FB68     	 ldr r3,[r7,#12]
 1966 00c2 1B68     	 ldr r3,[r3]
 1967 00c4 1846     	 mov r0,r3
 1968 00c6 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 1969 00ca 0346     	 mov r3,r0
 1970 00cc DBB2     	 uxtb r3,r3
 1971 00ce 2370     	 strb r3,[r4]
 1972 00d0 0CE0     	 b .L97
 1973              	.L96:
1231:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1232:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     else
1233:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     {
1234:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ptr_data_16bit = (uint16_t*)data_ptr;
 1974              	 .loc 3 1234 0
 1975 00d2 BB68     	 ldr r3,[r7,#8]
 1976 00d4 3B61     	 str r3,[r7,#16]
1235:../Dave/Generated/SPI_SLAVE/spi_slave.c ****       ptr_data_16bit[loc_index] = (uint16_t)XMC_SPI_CH_GetReceivedData(handle->channel);
 1977              	 .loc 3 1235 0
 1978 00d6 7B6A     	 ldr r3,[r7,#36]
 1979 00d8 5B00     	 lsls r3,r3,#1
 1980 00da 3A69     	 ldr r2,[r7,#16]
 1981 00dc D418     	 adds r4,r2,r3
 1982 00de FB68     	 ldr r3,[r7,#12]
 1983 00e0 1B68     	 ldr r3,[r3]
 1984 00e2 1846     	 mov r0,r3
 1985 00e4 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 1986 00e8 0346     	 mov r3,r0
 1987 00ea 2380     	 strh r3,[r4]
 1988              	.L97:
1205:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 1989              	 .loc 3 1205 0 discriminator 2
 1990 00ec 7B6A     	 ldr r3,[r7,#36]
 1991 00ee 0133     	 adds r3,r3,#1
 1992 00f0 7B62     	 str r3,[r7,#36]
 1993              	.L92:
1205:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   {
 1994              	 .loc 3 1205 0 is_stmt 0 discriminator 1
 1995 00f2 7A6A     	 ldr r2,[r7,#36]
 1996 00f4 7B68     	 ldr r3,[r7,#4]
 1997 00f6 9A42     	 cmp r2,r3
 1998 00f8 BBD3     	 bcc .L98
1236:../Dave/Generated/SPI_SLAVE/spi_slave.c ****     }
1237:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   }
1238:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ret_stat = SPI_SLAVE_STATUS_SUCCESS;
 1999              	 .loc 3 1238 0 is_stmt 1
 2000 00fa 0023     	 movs r3,#0
 2001 00fc 87F82330 	 strb r3,[r7,#35]
1239:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   ptr_runtime->rx_busy = false;
 2002              	 .loc 3 1239 0
 2003 0100 FB69     	 ldr r3,[r7,#28]
 2004 0102 0022     	 movs r2,#0
 2005 0104 DA76     	 strb r2,[r3,#27]
1240:../Dave/Generated/SPI_SLAVE/spi_slave.c ****   return ret_stat;
 2006              	 .loc 3 1240 0
 2007 0106 97F82330 	 ldrb r3,[r7,#35]
1241:../Dave/Generated/SPI_SLAVE/spi_slave.c **** }
 2008              	 .loc 3 1241 0
 2009 010a 1846     	 mov r0,r3
 2010 010c 2C37     	 adds r7,r7,#44
 2011              	.LCFI114:
 2012              	 .cfi_def_cfa_offset 12
 2013 010e BD46     	 mov sp,r7
 2014              	.LCFI115:
 2015              	 .cfi_def_cfa_register 13
 2016              	 
 2017 0110 90BD     	 pop {r4,r7,pc}
 2018              	 .cfi_endproc
 2019              	.LFE315:
 2021 0112 00BF     	 .text
 2022              	.Letext0:
 2023              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2024              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2025              	 .file 6 "C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc/xmc_gpio.h"
 2026              	 .file 7 "C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/XMCLib/inc/xmc4_gpio.h"
 2027              	 .file 8 "C:/work_mari/XMC4800/common-tasks/SPI_Slave/Dave/Generated/DAVE_Common.h"
 2028              	 .file 9 "../Dave/Generated/SPI_SLAVE/spi_slave.h"
 2029              	 .file 10 "C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/CMSIS/Include/cmsis_gcc.h"
 2030              	 .file 11 "C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/CMSIS/Include/core_cm4.h"
 2031              	 .file 12 "C:/work_mari/XMC4800/common-tasks/SPI_Slave/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 spi_slave.c
    {standard input}:20     .text.XMC_USIC_CH_SetInputSource:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_SetInputSource:00000000 XMC_USIC_CH_SetInputSource
    {standard input}:82     .text.XMC_USIC_CH_SetTransmitBufferStatus:00000000 $t
    {standard input}:86     .text.XMC_USIC_CH_SetTransmitBufferStatus:00000000 XMC_USIC_CH_SetTransmitBufferStatus
    {standard input}:127    .text.XMC_USIC_CH_TXFIFO_Flush:00000000 $t
    {standard input}:131    .text.XMC_USIC_CH_TXFIFO_Flush:00000000 XMC_USIC_CH_TXFIFO_Flush
    {standard input}:170    .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 $t
    {standard input}:174    .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 XMC_USIC_CH_TXFIFO_IsFull
    {standard input}:219    .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 $t
    {standard input}:223    .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 XMC_USIC_CH_TXFIFO_IsEmpty
    {standard input}:268    .text.XMC_USIC_CH_RXFIFO_Flush:00000000 $t
    {standard input}:272    .text.XMC_USIC_CH_RXFIFO_Flush:00000000 XMC_USIC_CH_RXFIFO_Flush
    {standard input}:311    .text.XMC_USIC_CH_RXFIFO_IsEmpty:00000000 $t
    {standard input}:315    .text.XMC_USIC_CH_RXFIFO_IsEmpty:00000000 XMC_USIC_CH_RXFIFO_IsEmpty
    {standard input}:360    .text.XMC_SPI_CH_Receive:00000000 $t
    {standard input}:364    .text.XMC_SPI_CH_Receive:00000000 XMC_SPI_CH_Receive
    {standard input}:406    .text.XMC_SPI_CH_GetStatusFlag:00000000 $t
    {standard input}:410    .text.XMC_SPI_CH_GetStatusFlag:00000000 XMC_SPI_CH_GetStatusFlag
    {standard input}:449    .text.XMC_SPI_CH_ClearStatusFlag:00000000 $t
    {standard input}:453    .text.XMC_SPI_CH_ClearStatusFlag:00000000 XMC_SPI_CH_ClearStatusFlag
    {standard input}:496    .text.XMC_SPI_CH_SetInputSource:00000000 $t
    {standard input}:500    .text.XMC_SPI_CH_SetInputSource:00000000 XMC_SPI_CH_SetInputSource
    {standard input}:557    .text.SPI_SLAVE_GetAppVersion:00000000 $t
    {standard input}:562    .text.SPI_SLAVE_GetAppVersion:00000000 SPI_SLAVE_GetAppVersion
    {standard input}:623    .text.SPI_SLAVE_Init:00000000 $t
    {standard input}:628    .text.SPI_SLAVE_Init:00000000 SPI_SLAVE_Init
    {standard input}:672    .text.SPI_SLAVE_Transmit:00000000 $t
    {standard input}:677    .text.SPI_SLAVE_Transmit:00000000 SPI_SLAVE_Transmit
    {standard input}:1649   .text.SPI_SLAVE_lTransmitPolling:00000000 SPI_SLAVE_lTransmitPolling
    {standard input}:761    .text.SPI_SLAVE_Receive:00000000 $t
    {standard input}:766    .text.SPI_SLAVE_Receive:00000000 SPI_SLAVE_Receive
    {standard input}:1839   .text.SPI_SLAVE_lReceivePolling:00000000 SPI_SLAVE_lReceivePolling
    {standard input}:850    .text.SPI_SLAVE_SetMode:00000000 $t
    {standard input}:855    .text.SPI_SLAVE_SetMode:00000000 SPI_SLAVE_SetMode
    {standard input}:1074   .text.SPI_SLAVE_lValidateModeChange:00000000 SPI_SLAVE_lValidateModeChange
    {standard input}:935    .text.SPI_SLAVE_SetMode:0000007c $d
    {standard input}:943    .text.SPI_SLAVE_SetMode:0000009c $t
    {standard input}:1070   .text.SPI_SLAVE_lValidateModeChange:00000000 $t
    {standard input}:1195   .text.SPI_SLAVE_Transfer:00000000 $t
    {standard input}:1200   .text.SPI_SLAVE_Transfer:00000000 SPI_SLAVE_Transfer
    {standard input}:1321   .text.SPI_SLAVE_lTransferPolling:00000000 SPI_SLAVE_lTransferPolling
    {standard input}:1317   .text.SPI_SLAVE_lTransferPolling:00000000 $t
    {standard input}:1645   .text.SPI_SLAVE_lTransmitPolling:00000000 $t
    {standard input}:1835   .text.SPI_SLAVE_lReceivePolling:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SPI_CH_Transmit
XMC_GPIO_SetMode
XMC_GPIO_SetHardwareControl
XMC_GPIO_Init
XMC_SPI_CH_GetReceivedData
memcpy
