   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "clock_xmc4_conf.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_CLOCK_SetECATClockSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_CLOCK_SetECATClockSource:
  25              	.LFB144:
  26              	 .file 1 "C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc/xmc4_scu.h"
   1:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @date 2019-02-18
   4:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *****************************************************************************
   7:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.
  11:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  12:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  14:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * do so, all subject to the following:
  20:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  21:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * a source language processor.
  27:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  28:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *****************************************************************************
  40:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  41:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Change History
  42:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * --------------
  43:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  44:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  45:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  46:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  47:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  48:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  49:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  50:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  51:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  52:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  53:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  54:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  55:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent,
  56:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  57:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  58:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  59:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  60:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  61:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  62:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks
  63:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  64:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  65:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  66:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  67:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(),
  68:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  69:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  70:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(),
  71:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  72:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  73:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  74:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  75:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  76:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  77:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  79:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  80:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  81:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  82:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  83:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2019-02-18:
  84:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fix conditional definition of XMC_SCU_PARITY_t elements
  85:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
  86:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
  87:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SetParityWriteValue(uint8_t val)
  88:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_GetParityReadValue(void)
  89:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  90:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2020-11-11:
  91:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Change making declaration of functions XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature()
  92:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  93:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @endcond
  94:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  95:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  96:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
  97:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  98:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  99:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 100:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 101:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
 102:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 103:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 104:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
 105:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 106:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
 107:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 108:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 109:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
 110:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 111:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 112:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 113:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 114:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 115:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 116:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 117:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 118:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 119:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * MACROS
 120:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 121:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 122:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 123:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 124:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 125:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 126:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 127:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 128:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 129:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 130:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 131:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 132:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 133:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 134:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 135:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 136:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 137:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 138:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 139:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 140:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 141:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 142:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 143:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 144:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 145:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 146:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 147:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 148:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 149:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 150:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 151:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 152:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 153:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 154:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 155:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 156:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 157:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 158:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 159:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 160:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 161:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 162:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 163:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 164:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 165:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 166:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 167:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 168:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 169:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 170:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 171:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 172:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 173:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 174:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 175:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 176:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 177:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 178:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 179:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 180:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 181:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 182:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 183:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 184:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 185:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 186:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 187:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 188:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 189:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 190:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 191:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 192:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 193:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 194:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 195:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 196:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 197:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 198:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 199:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 200:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 201:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 202:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 203:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 204:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 205:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 206:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 207:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 208:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 209:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 210:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 211:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 212:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 213:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 214:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose.
 215:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 216:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 217:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP
 218:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 219:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 220:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 221:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */
 222:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */
 223:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */
 224:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */
 225:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 226:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 227:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 228:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 229:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 230:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 231:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 232:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 233:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 234:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */
 235:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 236:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 237:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 238:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 239:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 240:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 241:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 242:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 243:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 244:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 245:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 246:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 247:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 248:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */
 249:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENDS2_Msk)
 250:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */
 251:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 252:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 253:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU1_Msk)
 254:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 255:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 256:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU2_Msk)
 257:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 258:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 259:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 260:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 261:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */
 262:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 263:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 264:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 265:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 266:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 267:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 268:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 269:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 270:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 271:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 272:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 273:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 274:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENECAT0_Msk)
 275:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ECAT_MEM = SCU_PARITY_PEEN_PEENECAT0_Msk, /**< ECAT0 SRAM parity error trap. */
 276:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 277:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 278:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 279:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 280:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 281:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 282:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 283:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 284:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 285:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 286:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 287:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 288:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 289:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 290:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 291:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 292:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 293:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 294:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 295:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 296:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 297:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 298:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register.
 299:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 300:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 301:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 302:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 303:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 304:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 305:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 306:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 307:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 308:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 309:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 310:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 311:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 312:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 313:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 314:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 315:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */
 316:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */
 317:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */
 318:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */
 319:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */
 320:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */
 321:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 322:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 323:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 324:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 325:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 326:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 327:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 328:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 329:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 330:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 331:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 332:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 333:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */
 334:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 335:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 336:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 337:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 338:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 339:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 340:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 341:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 342:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 343:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 344:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 345:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 346:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 347:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 348:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 349:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 350:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 351:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 352:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 353:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 354:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 355:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 356:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 357:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 358:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 359:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 360:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 361:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 362:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 363:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 364:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 365:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 366:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 367:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 368:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 369:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 370:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)
 371:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 372:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 373:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 374:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 375:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 376:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 377:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 378:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 379:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 380:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 381:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 382:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 383:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 384:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 385:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 386:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 387:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 388:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 389:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 390:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 391:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 392:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 393:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 394:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 395:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 396:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 397:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 398:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 399:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 400:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 401:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 402:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 403:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 404:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 405:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 406:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 407:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 408:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 409:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 410:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 411:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 412:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 413:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 414:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 415:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 416:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 417:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 418:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 419:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 420:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 421:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 422:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 423:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 424:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 425:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 426:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 427:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 428:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating.
 429:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 430:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 431:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 432:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 433:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 434:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 435:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 436:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 437:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 438:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 439:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 440:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 441:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 442:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 443:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 444:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 445:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 446:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 447:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 448:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 449:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 450:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 451:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 452:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 453:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 454:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 455:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 456:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 457:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 458:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 459:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 460:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 461:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 462:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 463:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 464:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 465:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 466:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 467:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 468:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 469:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 470:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 471:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 472:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)
 473:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 474:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 475:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 476:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 477:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 478:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 479:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 480:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 481:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 482:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 483:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 484:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 485:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 486:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 487:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 488:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 489:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 490:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 491:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 492:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 493:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 494:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 495:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 496:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 497:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 498:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 499:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 500:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 501:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 502:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 503:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 504:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 505:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 506:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 507:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 508:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 509:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 510:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register.
 511:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 512:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 513:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 514:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 515:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 516:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 517:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 518:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 519:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 520:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 521:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 522:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 523:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register.
 524:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 525:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 526:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 527:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 528:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 529:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 530:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 531:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 532:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 533:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 534:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 535:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 536:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 537:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock.
 538:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 539:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 540:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 541:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 542:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 543:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 544:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 545:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 546:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 547:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 548:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 549:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 550:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 551:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 552:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 553:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 554:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 555:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 556:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 557:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 558:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 559:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 560:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 561:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock.
 562:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 563:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 564:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 565:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 566:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock
 567:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 568:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock
 569:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 570:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 571:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 572:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 573:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 574:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 575:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 576:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 577:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 578:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 579:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 580:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 581:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 582:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 583:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 584:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 585:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 586:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 587:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 588:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 589:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 590:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 591:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 592:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 593:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 594:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 595:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 596:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 597:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 598:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 599:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 600:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 601:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 602:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 603:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 604:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 605:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 606:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 607:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 608:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 609:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 610:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 611:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 612:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 613:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock
 614:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 615:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 616:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 617:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 618:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 619:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 620:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 621:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 622:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 623:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 624:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 625:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 626:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 627:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration:
 628:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 629:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 630:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 631:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 632:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 633:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 634:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 635:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 636:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 637:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 638:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE
 639:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 640:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 641:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 642:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 643:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 644:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 645:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 646:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 647:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 648:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 649:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 650:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 651:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 652:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 653:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 654:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 655:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 656:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 657:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 658:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 659:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 660:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 661:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 662:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 663:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 664:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 665:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 666:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 667:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 668:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 669:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 670:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 671:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 672:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 673:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled.
 674:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 675:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 676:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 677:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 678:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  state.
 679:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 680:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 681:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 682:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 683:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 684:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 685:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 686:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 687:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 688:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 689:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 690:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 691:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 692:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 693:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 694:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 695:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 696:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 697:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 698:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 699:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 700:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 701:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 702:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 703:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 704:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 705:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 706:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 707:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 708:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 709:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 710:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 711:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 712:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 713:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 714:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped.
 715:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 716:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 717:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled.
 718:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 719:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 720:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 721:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 722:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 723:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 724:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 725:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 726:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 727:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 728:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 729:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 730:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 731:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 732:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 733:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 734:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 735:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 736:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 737:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 738:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 739:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 740:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 741:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 742:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 743:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 744:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 745:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 746:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 747:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 748:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 749:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 750:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 751:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 752:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 753:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 754:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 755:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 756:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 757:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 758:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 759:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 760:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 761:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 762:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 763:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control
 764:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 765:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 766:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 767:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 768:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 769:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 770:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 771:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 772:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 773:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 774:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 775:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 776:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 777:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 778:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 779:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 780:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 781:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 782:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 783:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 784:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 785:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 786:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 787:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 788:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 789:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 790:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 791:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 792:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 793:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 794:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   */
 795:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 796:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 797:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin.
 798:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 799:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 800:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin.
 801:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 802:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 803:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 804:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 805:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 806:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 807:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 808:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 809:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 810:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 811:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 812:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 813:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 814:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 815:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 816:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 817:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 818:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 819:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 820:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 821:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 822:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 823:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 824:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 825:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 826:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 827:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 828:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 829:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 830:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 831:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 832:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 833:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 834:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 835:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 836:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 837:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 838:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 839:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 840:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 841:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 842:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 843:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 844:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 845:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 846:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 847:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 848:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 849:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 850:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 851:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 852:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 853:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 854:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 855:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 856:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 857:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 858:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 859:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 860:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 861:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 862:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 863:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 864:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 865:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 866:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 867:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 868:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 869:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 870:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 871:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 872:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 873:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 874:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 875:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 876:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 877:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 878:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 879:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 880:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 881:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 882:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 883:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 884:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 885:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 886:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 887:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 888:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 889:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 890:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 891:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 892:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 893:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 894:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 895:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 896:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 897:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 898:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 899:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 900:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 901:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 902:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 903:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 904:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 905:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 906:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 907:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 908:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 909:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 910:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 911:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 912:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 913:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 914:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 915:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 916:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 917:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 918:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 919:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 920:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 921:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 922:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 923:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired
 924:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 925:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 926:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 927:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 928:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 929:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 930:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 931:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 932:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 933:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 934:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 935:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 936:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 937:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 938:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 939:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 940:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 941:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 942:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 943:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 944:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 945:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 946:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 947:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 948:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 949:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 950:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 951:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 952:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 953:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 954:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 955:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 956:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 957:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 958:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 959:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 960:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 961:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
 962:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 963:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 964:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 965:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 966:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 967:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 968:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 969:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 970:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 971:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** extern "C" {
 972:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 973:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 974:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 975:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 976:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 977:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 978:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 979:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 980:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 981:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 982:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 983:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 984:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 985:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 986:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 987:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 988:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 989:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 990:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 991:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 992:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
 993:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 994:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 995:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 996:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 997:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 998:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 999:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1000:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1001:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1002:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1003:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
1004:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
1005:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1006:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
1007:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1008:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
1009:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1010:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1011:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1012:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1013:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1014:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
1015:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
1016:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1017:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1018:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1019:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1020:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1021:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1022:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1023:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1024:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1025:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1026:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1027:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1028:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1030:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1031:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1032:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1033:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1034:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1035:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1036:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1037:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1038:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1039:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1041:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1042:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1044:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1045:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1046:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1047:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1048:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1049:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1050:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1051:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1052:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1053:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1054:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1055:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1056:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1057:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1058:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1059:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1060:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1061:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1062:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result.
1063:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1064:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1065:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1066:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1067:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1068:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1069:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1070:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1071:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1072:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1073:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1074:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1075:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1076:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1077:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1078:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1079:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1080:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1081:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1082:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n
1083:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1084:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1085:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1086:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1087:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1088:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1089:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1090:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1091:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1092:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1093:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1094:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1095:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1096:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1097:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1098:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1099:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1100:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1101:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1102:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1103:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1104:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1105:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1106:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1107:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1108:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1109:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1110:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1111:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1112:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1113:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1114:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1115:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1116:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1117:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1118:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1119:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1120:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1121:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1122:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1123:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1124:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1125:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1126:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1127:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1128:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1129:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1130:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1131:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1132:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1133:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1134:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1135:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1136:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1137:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1138:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1139:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1140:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1141:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1142:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1143:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1144:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1145:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1146:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1147:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC41) || (UC_SERIES == XMC42) || (UC_SERIES == XMC44))
1148:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1149:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1150:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1151:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1152:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1153:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1154:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1155:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1156:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in
1157:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1158:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1159:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1160:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1161:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1162:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1163:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1164:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1165:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1166:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1167:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1168:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1169:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1170:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1171:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1172:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1173:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1174:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1175:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1176:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1177:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1178:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1179:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1180:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1181:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1182:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1183:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1184:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1185:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1186:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1187:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1188:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1189:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1190:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1191:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1192:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1193:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1194:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1195:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1196:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1197:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1198:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1199:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1200:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1201:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1202:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1203:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1204:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1205:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1206:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1207:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1208:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1209:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1210:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1211:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1212:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1213:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1214:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1215:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1216:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1217:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1218:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1219:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1220:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1221:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1222:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1223:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1224:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1225:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1226:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1227:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1228:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1229:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1230:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1231:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1232:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1233:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1234:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1235:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1236:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1238:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1239:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1240:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1241:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1242:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1243:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1244:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1245:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1246:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1247:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1248:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1249:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1250:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1251:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1252:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1253:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1254:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1255:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1256:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1257:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1258:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1259:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1260:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1261:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1262:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1263:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1267:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1268:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1269:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1270:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1271:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1272:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1273:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1274:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1275:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1276:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1277:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1278:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1279:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1280:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1281:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1282:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1283:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1284:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1285:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1286:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1287:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1288:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain.
1289:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1290:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface.
1291:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1292:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1293:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1294:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1295:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1296:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1297:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1298:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1299:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1300:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1301:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1302:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1303:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1304:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1305:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1306:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1307:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1308:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1309:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1310:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain.
1311:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1312:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface.
1313:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1314:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1316:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1317:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1318:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1319:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1320:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1321:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1322:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple
1323:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1324:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1325:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1326:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1327:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1328:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1329:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the
1330:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1331:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1332:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1333:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1334:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1335:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1336:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1337:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1338:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1339:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple
1340:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1341:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1342:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1343:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1344:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1345:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1346:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1347:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1348:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1349:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1350:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1351:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1352:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1353:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1354:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1355:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1356:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1357:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1358:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1359:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1360:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1361:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the
1362:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1363:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1364:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1365:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1366:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1367:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1368:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1369:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1370:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1371:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1372:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1373:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1374:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1375:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1376:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1377:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit
1378:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1379:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1380:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1381:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1382:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1383:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1384:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1385:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1386:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1387:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1388:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1389:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1390:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1391:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1392:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1393:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced.
1394:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time.
1395:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1396:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1397:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1398:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1399:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1400:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1401:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1402:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1403:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1404:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1405:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1406:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1407:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1408:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1409:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1410:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1411:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1412:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1413:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1414:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1415:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1416:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1417:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);
1418:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1419:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1420:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1421:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1422:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1423:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1424:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1425:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1426:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1427:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1428:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API.
1429:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1430:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1431:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1432:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1433:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1434:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1436:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1437:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1438:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1439:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1440:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1441:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1442:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1444:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1446:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1448:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1449:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1450:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1451:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1452:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1453:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1454:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1455:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1456:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1457:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1458:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1459:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1460:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1461:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1462:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1463:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1464:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1465:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1466:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1467:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1468:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1469:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1470:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1471:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1472:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1473:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1474:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1475:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1476:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1477:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1478:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1479:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1480:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1481:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1482:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1483:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1484:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1485:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1486:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1487:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1488:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1489:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1490:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1491:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1492:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1493:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state.
1494:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1495:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1496:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1497:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1498:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1499:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1500:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1501:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1502:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1503:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1504:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1505:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1506:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1507:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1508:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1509:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1510:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to
1511:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1512:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the
1513:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors
1514:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1515:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1516:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1517:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1518:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1519:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1520:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1521:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1522:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1523:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1524:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1525:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1526:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1527:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1528:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1529:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1530:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1531:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1532:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1533:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1534:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1535:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1536:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1537:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1538:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1539:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1540:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1541:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1542:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1543:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1544:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1545:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1546:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1547:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1548:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1549:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1550:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1551:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1552:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1553:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1554:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1555:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1556:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1557:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1558:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1559:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1560:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1561:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1562:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1563:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1564:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1565:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1566:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1567:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1568:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1569:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1570:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1571:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1572:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1573:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1574:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1575:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1576:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1577:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1578:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1579:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1580:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1581:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1582:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1583:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1584:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1585:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1586:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1587:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1588:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1589:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1590:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1591:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1592:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1593:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1594:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1595:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1596:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1597:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1598:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1599:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the
1600:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1601:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1602:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1603:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1604:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1605:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);
1606:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1607:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1608:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1609:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity logic should be overriden.\n
1610:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1611:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1612:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1613:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1614:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1615:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1616:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable access to parity bits of SRAM modules for various types of peripherals.
1617:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable direct write to parity bits using value selected using XMC_SCU_PARITY_SetParityWriteValue
1618:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1619:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_SetParityWriteValue() \n\n\n
1620:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1621:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1622:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
1623:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1624:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->MCHKCON = memory;
1625:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1626:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1627:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1628:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity test has to be enabled.\n
1629:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type.
1630:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Only a single memory type should be specified.
1631:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1632:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1633:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1634:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1635:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects parity test output from a memory instance that can be inspected using XMC_SCU_PARITY_Get
1636:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetParityReadValue() \n\n\n
1638:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1639:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1640:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
1641:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1642:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTSR = memory;
1643:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1644:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1645:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1646:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param write_value parity bits value stored with next write access\n
1647:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1648:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1650:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits corresponding to the next write access are sele
1652:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1653:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1654:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1655:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1656:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1657:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SetParityWriteValue(uint8_t write_value)
1658:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1659:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTPR = ((write_value << SCU_PARITY_PMTPR_PWR_Pos) & SCU_PARITY_PMTPR_PWR_Msk);
1660:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1661:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1662:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1663:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return parity bits generated during last read access
1664:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1665:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1666:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits generated during the most recent read access ca
1667:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1668:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1669:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1670:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1671:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1672:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint8_t XMC_SCU_PARITY_GetParityReadValue(void)
1673:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1674:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   return ((SCU_PARITY->PMTPR & SCU_PARITY_PMTPR_PRD_Msk) >> SCU_PARITY_PMTPR_PRD_Pos);
1675:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1676:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1677:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1678:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1679:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1680:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1681:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1682:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1683:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1684:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1685:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1686:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1687:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1688:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1689:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1690:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1691:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1692:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1693:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1694:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1695:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1696:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1697:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1698:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1699:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1700:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1701:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1702:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1703:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1704:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1705:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1706:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1707:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1708:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1709:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1710:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1711:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1712:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1713:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1714:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1715:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1716:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1717:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1718:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1719:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1720:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1721:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1722:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1723:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1724:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1725:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register.
1726:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1727:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1728:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1729:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1730:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1731:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1732:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1733:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1734:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1735:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1736:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1737:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1738:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1739:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1740:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1741:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1742:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1743:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1744:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1745:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency.
1746:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1747:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1748:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1749:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1750:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1751:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1752:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1753:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1754:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1755:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1756:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1757:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1758:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1759:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1760:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1761:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1762:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1763:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1764:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1765:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1766:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1767:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1768:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1769:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1770:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1771:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1772:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1773:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1774:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1775:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1776:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1777:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1778:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1779:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1780:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1781:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1782:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1783:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1784:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1785:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1786:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1787:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1788:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1789:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1790:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1791:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1792:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1793:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1794:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1795:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1796:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1797:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1798:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1799:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1800:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
1801:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1802:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1803:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1804:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1805:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1806:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1807:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1808:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1809:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1810:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1811:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1812:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1813:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1814:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1815:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1816:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1817:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1818:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1819:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1821:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1822:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1823:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1824:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1825:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1826:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1827:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1828:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1829:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1830:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1831:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1832:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1833:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1834:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on
1835:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1836:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1837:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1838:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1839:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1840:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1841:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
1842:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1843:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1844:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1845:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1846:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1847:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1848:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1849:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1850:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1851:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1852:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1853:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1854:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1855:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1856:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1857:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1858:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1859:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1860:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1861:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1862:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1863:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1864:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1865:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1866:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1867:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1868:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1869:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1870:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1871:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1872:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1873:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1874:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1875:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1876:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1877:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1878:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1879:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1880:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1881:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1882:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1883:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1884:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1885:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1886:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1887:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1888:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1889:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1890:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1891:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1892:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1893:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1894:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1895:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1896:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1897:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1898:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1899:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1900:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1901:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1902:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1903:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1904:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1905:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1906:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1907:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1908:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1909:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1910:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1911:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1912:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1913:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1914:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1915:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1916:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1917:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1918:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1919:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1920:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1921:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1922:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1923:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1924:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1925:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1926:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1927:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1928:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1929:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1930:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1931:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1932:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1933:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1934:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1935:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1936:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1937:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1938:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1939:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1940:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1941:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1942:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1943:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1944:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1945:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1946:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1947:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1948:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1949:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1950:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1951:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1952:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1953:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1954:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1955:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1956:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1957:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1958:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1959:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1960:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1961:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1962:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1963:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1964:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1965:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1966:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1967:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1968:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1969:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
1970:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
1971:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
1972:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1973:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1974:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1975:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1976:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1977:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1978:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1979:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1980:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1981:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1982:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1983:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1984:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1985:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1986:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1987:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1988:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1989:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1990:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1991:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
1992:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1993:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1994:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1995:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1996:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1997:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1998:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1999:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
2000:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
2001:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
2003:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2004:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
2005:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
2006:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
2007:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
2008:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** 
2009:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2010:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2011:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2012:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
2013:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2014:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2015:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2016:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2017:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2018:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2019:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2020:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
2021:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
2022:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2023:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
2024:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2025:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
2026:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** {
  27              	 .loc 1 2026 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
2027:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
  43              	 .loc 1 2027 0
  44 0008 0649     	 ldr r1,.L2
  45 000a 064B     	 ldr r3,.L2
  46 000c 9B6B     	 ldr r3,[r3,#56]
  47 000e 23F48032 	 bic r2,r3,#65536
  48 0012 7B68     	 ldr r3,[r7,#4]
  49 0014 1343     	 orrs r3,r3,r2
  50 0016 8B63     	 str r3,[r1,#56]
2028:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h ****                        ((uint32_t)source);
2029:C:/work_mari/XMC4800/spi_master/Libraries/XMCLib/inc\xmc4_scu.h **** }
  51              	 .loc 1 2029 0
  52 0018 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 001a BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001c 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 0020 7047     	 bx lr
  64              	.L3:
  65 0022 00BF     	 .align 2
  66              	.L2:
  67 0024 00460050 	 .word 1342195200
  68              	 .cfi_endproc
  69              	.LFE144:
  71              	 .global CLOCK_XMC4_0
  72              	 .section .bss.CLOCK_XMC4_0,"aw",%nobits
  73              	 .align 2
  76              	CLOCK_XMC4_0:
  77 0000 00       	 .space 1
  78 0001 000000   	 .section .rodata
  79              	 .align 2
  80              	.LC0:
  81 0000 30       	 .byte 48
  82 0001 02       	 .byte 2
  83 0002 01       	 .byte 1
  84 0003 01       	 .byte 1
  85 0004 0000     	 .short 0
  86 0006 01       	 .byte 1
  87 0007 00       	 .byte 0
  88 0008 00       	 .byte 0
  89 0009 00       	 .byte 0
  90 000a 0000     	 .space 2
  91 000c 00000100 	 .word 65536
  92 0010 02       	 .byte 2
  93 0011 01       	 .byte 1
  94 0012 01       	 .byte 1
  95 0013 01       	 .byte 1
  96              	 .section .text.SystemCoreClockSetup,"ax",%progbits
  97              	 .align 2
  98              	 .global SystemCoreClockSetup
  99              	 .thumb
 100              	 .thumb_func
 102              	SystemCoreClockSetup:
 103              	.LFB184:
 104              	 .file 2 "../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c"
   1:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** /**************************************************************************************************
   2:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** * DAVE APP Name : CLOCK_XMC4       APP Version: 4.0.24
   3:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** *
   4:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** * NOTE:
   5:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** * This file is generated by DAVE. Any manual modification done to this file will be lost when the c
   6:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** ***************************************************************************************************
   7:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** 
   8:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** /**
   9:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * @cond
  10:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  **************************************************************************************************
  11:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  12:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * All rights reserved.
  14:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  15:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * following conditions are met:
  17:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  18:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *   disclaimer.
  20:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  21:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  24:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  27:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  35:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  **************************************************************************************************
  38:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  39:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * Change History
  40:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * --------------
  41:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2015-02-16:
  42:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Initial version for DAVEv4. <BR>
  43:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2015-05-08:
  44:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - No functional change; Updated to adhere latest guidelines <br>
  45:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2015-10-08:
  46:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Ensured Trap status bit clearing for XMC48 and XMC47 device.<br>
  47:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - USB PLL Configuration made based on user configuration.<br>
  48:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - ECAT Configuration supported for XMC48 device.<br>
  49:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2015-10-20:
  50:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - High Precision Oscillator Settings are enabled only when it is required.<br>
  51:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2015-12-01:
  52:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Ensured Trap status bit clearing for XMC43 device.<br>
  53:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2015-12-20:
  54:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Disabled option supported in combo box for High Precision Oscillator Settings.<br>
  55:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2015-12-24:
  56:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - TRAP event settings are moved to SystemCoreClockSetup API from CLOCK_XMC4_Init. <BR>
  57:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Code size is improved. <BR>
  58:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - OSCHP_GetFrequency API is made to available to user only when high precision oscillator is
  59:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2016-01-08:
  60:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Removed clear trap status settings at the end of the clock initialization which was redund
  61:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2016-05-25:
  62:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Ensured main PLL and USBPLL dependencies based on its checkbox enable via CLOCK_XMC4 APP G
  63:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2016-07-08:
  64:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Fixed incorrect case for an included header.<br>
  65:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * 2021-01-08:
  66:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *     - Fixed compiler warnings.<br>
  67:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  68:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * @endcond
  69:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  *
  70:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  */
  71:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** 
  72:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** /**************************************************************************************************
  73:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * HEADER FILES
  74:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  **************************************************************************************************
  75:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #include "clock_xmc4.h"
  76:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** 
  77:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** /**************************************************************************************************
  78:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * DATA STRUCTURES
  79:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  **************************************************************************************************
  80:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** CLOCK_XMC4_t CLOCK_XMC4_0 =
  81:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** {
  82:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   .init_status = false
  83:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** };
  84:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** 
  85:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  /*************************************************************************************************
  86:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  * API IMPLEMENTATION
  87:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****  **************************************************************************************************
  88:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** /**
  89:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** * @brief  Function to initialize the Clock Tree based on UI configuration
  90:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** * @note   -
  91:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** * @param  None
  92:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** * @retval None
  93:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** */
  94:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** void SystemCoreClockSetup(void)
  95:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** {
 105              	 .loc 2 95 0
 106              	 .cfi_startproc
 107              	 
 108              	 
 109 0000 B0B5     	 push {r4,r5,r7,lr}
 110              	.LCFI6:
 111              	 .cfi_def_cfa_offset 16
 112              	 .cfi_offset 4,-16
 113              	 .cfi_offset 5,-12
 114              	 .cfi_offset 7,-8
 115              	 .cfi_offset 14,-4
 116 0002 86B0     	 sub sp,sp,#24
 117              	.LCFI7:
 118              	 .cfi_def_cfa_offset 40
 119 0004 00AF     	 add r7,sp,#0
 120              	.LCFI8:
 121              	 .cfi_def_cfa_register 7
  96:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* Local data structure for initializing the clock functional block */
  97:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   const XMC_SCU_CLOCK_CONFIG_t CLOCK_XMC4_0_CONFIG =
 122              	 .loc 2 97 0
 123 0006 164B     	 ldr r3,.L5
 124 0008 3C1D     	 adds r4,r7,#4
 125 000a 1D46     	 mov r5,r3
 126 000c 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 127 000e 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 128 0010 2B68     	 ldr r3,[r5]
 129 0012 2360     	 str r3,[r4]
  98:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   {
  99:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .syspll_config =
 100:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     {
 101:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       /* N-Divider Value */
 102:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       .n_div = 48U,
 103:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       /* P-Divider Value */
 104:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       .p_div = 2U,
 105:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       /* K2-Divider Value */
 106:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       .k_div = 1U,
 107:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       /* PLL Operating Mode */
 108:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       .mode = XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,
 109:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       /* PLL Clock Source */
 110:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****       .clksrc = XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP
 111:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     },
 112:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* High Precision Oscillator Operating Mode */
 113:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .enable_oschp = true,
 114:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* Ultra Low Power Oscillator Setting */
 115:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .enable_osculp = false,
 116:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* Calibration Mode */
 117:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .calibration_mode = XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY,
 118:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* Standby Clock Source */
 119:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .fstdby_clksrc = XMC_SCU_HIB_STDBYCLKSRC_OSI,
 120:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* System Clock Source */
 121:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .fsys_clksrc = XMC_SCU_CLOCK_SYSCLKSRC_PLL,
 122:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* System Clock Divider Value */
 123:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .fsys_clkdiv = 2U,
 124:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* CPU Clock Divider Value */
 125:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .fcpu_clkdiv = 1U,
 126:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #ifdef CLOCK_XMC4_CCUCLK_ENABLED  
 127:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* CCU Clock Divider Value */
 128:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .fccu_clkdiv = 1U,
 129:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #endif
 130:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     /* Peripheral Clock Divider Value */
 131:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****     .fperipheral_clkdiv = 1U
 132:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   };
 133:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* Initialize the SCU clock */
 134:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_Init(&CLOCK_XMC4_0_CONFIG);
 130              	 .loc 2 134 0
 131 0014 3B1D     	 adds r3,r7,#4
 132 0016 1846     	 mov r0,r3
 133 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_Init
 135:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* RTC source clock */
 136:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_HIB_SetRtcClockSource(XMC_SCU_HIB_RTCCLKSRC_OSI);
 134              	 .loc 2 136 0
 135 001c 0020     	 movs r0,#0
 136 001e FFF7FEFF 	 bl XMC_SCU_HIB_SetRtcClockSource
 137:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   
 138:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #ifdef CLOCK_XMC4_USBCLK_ENABLED  
 139:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* USB/SDMMC source clock */
 140:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_SetUsbClockSource(XMC_SCU_CLOCK_USBCLKSRC_SYSPLL);
 137              	 .loc 2 140 0
 138 0022 4FF48030 	 mov r0,#65536
 139 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetUsbClockSource
 141:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* USB/SDMMC divider setting */
 142:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_SetUsbClockDivider(6U);
 140              	 .loc 2 142 0
 141 002a 0620     	 movs r0,#6
 142 002c FFF7FEFF 	 bl XMC_SCU_CLOCK_SetUsbClockDivider
 143:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #endif
 144:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* Start USB PLL */
 145:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_EnableUsbPll();
 143              	 .loc 2 145 0
 144 0030 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableUsbPll
 146:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_StartUsbPll(3U, 100U);
 145              	 .loc 2 146 0
 146 0034 0320     	 movs r0,#3
 147 0036 6421     	 movs r1,#100
 148 0038 FFF7FEFF 	 bl XMC_SCU_CLOCK_StartUsbPll
 147:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   
 148:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #ifdef CLOCK_XMC4_ECATCLK_ENABLED    
 149:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* ECAT source clock */
 150:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_SetECATClockSource(XMC_SCU_CLOCK_ECATCLKSRC_USBPLL);
 149              	 .loc 2 150 0
 150 003c 0020     	 movs r0,#0
 151 003e FFF7FEFF 	 bl XMC_SCU_CLOCK_SetECATClockSource
 151:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* ECAT divider setting */
 152:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_SetECATClockDivider(2U);
 152              	 .loc 2 152 0
 153 0042 0220     	 movs r0,#2
 154 0044 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetECATClockDivider
 153:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #endif
 154:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** 
 155:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #ifdef CLOCK_XMC4_WDTCLK_ENABLED    
 156:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* WDT source clock */
 157:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_SetWdtClockSource(XMC_SCU_CLOCK_WDTCLKSRC_OFI);
 155              	 .loc 2 157 0
 156 0048 0020     	 movs r0,#0
 157 004a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetWdtClockSource
 158:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* WDT divider setting */
 159:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_SetWdtClockDivider(1U);
 158              	 .loc 2 159 0
 159 004e 0120     	 movs r0,#1
 160 0050 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetWdtClockDivider
 160:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #endif
 161:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** 
 162:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #ifdef CLOCK_XMC4_EBUCLK_ENABLED 
 163:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   /* EBU divider setting */
 164:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c ****   XMC_SCU_CLOCK_SetEbuClockDivider(1U);
 161              	 .loc 2 164 0
 162 0054 0120     	 movs r0,#1
 163 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetEbuClockDivider
 165:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** #endif
 166:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** 
 167:../Dave/Generated/CLOCK_XMC4/clock_xmc4_conf.c **** }
 164              	 .loc 2 167 0
 165 005a 1837     	 adds r7,r7,#24
 166              	.LCFI9:
 167              	 .cfi_def_cfa_offset 16
 168 005c BD46     	 mov sp,r7
 169              	.LCFI10:
 170              	 .cfi_def_cfa_register 13
 171              	 
 172 005e B0BD     	 pop {r4,r5,r7,pc}
 173              	.L6:
 174              	 .align 2
 175              	.L5:
 176 0060 00000000 	 .word .LC0
 177              	 .cfi_endproc
 178              	.LFE184:
 180              	 .text
 181              	.Letext0:
 182              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 183              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 184              	 .file 5 "C:/work_mari/XMC4800/spi_master/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 185              	 .file 6 "../Dave/Generated/CLOCK_XMC4/clock_xmc4.h"
 186              	 .file 7 "C:/work_mari/XMC4800/spi_master/Libraries/CMSIS/Include/cmsis_gcc.h"
 187              	 .file 8 "C:/work_mari/XMC4800/spi_master/Libraries/CMSIS/Include/core_cm4.h"
 188              	 .file 9 "C:/work_mari/XMC4800/spi_master/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 clock_xmc4_conf.c
    {standard input}:20     .text.XMC_SCU_CLOCK_SetECATClockSource:00000000 $t
    {standard input}:24     .text.XMC_SCU_CLOCK_SetECATClockSource:00000000 XMC_SCU_CLOCK_SetECATClockSource
    {standard input}:67     .text.XMC_SCU_CLOCK_SetECATClockSource:00000024 $d
    {standard input}:76     .bss.CLOCK_XMC4_0:00000000 CLOCK_XMC4_0
    {standard input}:73     .bss.CLOCK_XMC4_0:00000000 $d
    {standard input}:79     .rodata:00000000 $d
    {standard input}:97     .text.SystemCoreClockSetup:00000000 $t
    {standard input}:102    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:176    .text.SystemCoreClockSetup:00000060 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_Init
XMC_SCU_HIB_SetRtcClockSource
XMC_SCU_CLOCK_SetUsbClockSource
XMC_SCU_CLOCK_SetUsbClockDivider
XMC_SCU_CLOCK_EnableUsbPll
XMC_SCU_CLOCK_StartUsbPll
XMC_SCU_CLOCK_SetECATClockDivider
XMC_SCU_CLOCK_SetWdtClockSource
XMC_SCU_CLOCK_SetWdtClockDivider
XMC_SCU_CLOCK_SetEbuClockDivider
