   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ecat.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ECAT_lRequestPhyAccessToMII,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ECAT_lRequestPhyAccessToMII:
  25              	.LFB178:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_ecat.c"
   1:../Libraries/XMCLib/src/xmc_ecat.c **** 
   2:../Libraries/XMCLib/src/xmc_ecat.c **** /**
   3:../Libraries/XMCLib/src/xmc_ecat.c ****  * @file xmc_ecat.c
   4:../Libraries/XMCLib/src/xmc_ecat.c ****  * @date 2019-12-16
   5:../Libraries/XMCLib/src/xmc_ecat.c ****  *
   6:../Libraries/XMCLib/src/xmc_ecat.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_ecat.c ****  *****************************************************************************
   8:../Libraries/XMCLib/src/xmc_ecat.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  10:../Libraries/XMCLib/src/xmc_ecat.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_ecat.c ****  * All rights reserved.
  12:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  13:../Libraries/XMCLib/src/xmc_ecat.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  15:../Libraries/XMCLib/src/xmc_ecat.c ****  * Permission is hereby granted, free of charge, to any person or organization
  16:../Libraries/XMCLib/src/xmc_ecat.c ****  * obtaining a copy of the software and accompanying documentation covered by
  17:../Libraries/XMCLib/src/xmc_ecat.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:../Libraries/XMCLib/src/xmc_ecat.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:../Libraries/XMCLib/src/xmc_ecat.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:../Libraries/XMCLib/src/xmc_ecat.c ****  * do so, all subject to the following:
  21:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  22:../Libraries/XMCLib/src/xmc_ecat.c ****  * The copyright notices in the Software and this entire statement, including
  23:../Libraries/XMCLib/src/xmc_ecat.c ****  * the above license grant, this restriction and the following disclaimer,
  24:../Libraries/XMCLib/src/xmc_ecat.c ****  * must be included in all copies of the Software, in whole or in part, and
  25:../Libraries/XMCLib/src/xmc_ecat.c ****  * all derivative works of the Software, unless such copies or derivative
  26:../Libraries/XMCLib/src/xmc_ecat.c ****  * works are solely in the form of machine-executable object code generated by
  27:../Libraries/XMCLib/src/xmc_ecat.c ****  * a source language processor.
  28:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  29:../Libraries/XMCLib/src/xmc_ecat.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:../Libraries/XMCLib/src/xmc_ecat.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:../Libraries/XMCLib/src/xmc_ecat.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:../Libraries/XMCLib/src/xmc_ecat.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:../Libraries/XMCLib/src/xmc_ecat.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:../Libraries/XMCLib/src/xmc_ecat.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:../Libraries/XMCLib/src/xmc_ecat.c ****  * DEALINGS IN THE SOFTWARE.
  36:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  37:../Libraries/XMCLib/src/xmc_ecat.c ****  * To improve the quality of the software, users are encouraged to share
  38:../Libraries/XMCLib/src/xmc_ecat.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:../Libraries/XMCLib/src/xmc_ecat.c ****  * at XMCSupport@infineon.com.
  40:../Libraries/XMCLib/src/xmc_ecat.c ****  *****************************************************************************
  41:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  42:../Libraries/XMCLib/src/xmc_ecat.c ****  * Change History
  43:../Libraries/XMCLib/src/xmc_ecat.c ****  * --------------
  44:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  45:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2015-10-21:
  46:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Initial Version
  47:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  48:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2015-12-27:
  49:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Add clock gating control in enable/disable APIs
  50:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  51:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2017-04-27:
  52:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Changed XMC_ECAT_ReadPhy() and XMC_ECAT_WritePhy() to release the MII access and check tha
  53:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  54:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2019-12-16:
  55:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  56:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  57:../Libraries/XMCLib/src/xmc_ecat.c ****  * @endcond
  58:../Libraries/XMCLib/src/xmc_ecat.c ****  */
  59:../Libraries/XMCLib/src/xmc_ecat.c **** 
  60:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  61:../Libraries/XMCLib/src/xmc_ecat.c ****  * HEADER FILES
  62:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  63:../Libraries/XMCLib/src/xmc_ecat.c **** 
  64:../Libraries/XMCLib/src/xmc_ecat.c **** #include "xmc_ecat.h"
  65:../Libraries/XMCLib/src/xmc_ecat.c **** 
  66:../Libraries/XMCLib/src/xmc_ecat.c **** #if defined (ECAT0)
  67:../Libraries/XMCLib/src/xmc_ecat.c **** 
  68:../Libraries/XMCLib/src/xmc_ecat.c **** #include "xmc_scu.h"
  69:../Libraries/XMCLib/src/xmc_ecat.c **** 
  70:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  71:../Libraries/XMCLib/src/xmc_ecat.c ****  * MACROS
  72:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  73:../Libraries/XMCLib/src/xmc_ecat.c **** 
  74:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  75:../Libraries/XMCLib/src/xmc_ecat.c ****  * API IMPLEMENTATION
  76:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  77:../Libraries/XMCLib/src/xmc_ecat.c **** /* The function defines the access state to the MII management for the PDI interface*/
  78:../Libraries/XMCLib/src/xmc_ecat.c **** __STATIC_INLINE void XMC_ECAT_lRequestPhyAccessToMII(void)
  79:../Libraries/XMCLib/src/xmc_ecat.c **** {
  27              	 .loc 1 79 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  80:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PDI_ACS_STATE = 0x1;
  39              	 .loc 1 80 0
  40 0004 034B     	 ldr r3,.L2
  41 0006 0122     	 movs r2,#1
  42 0008 83F81725 	 strb r2,[r3,#1303]
  81:../Libraries/XMCLib/src/xmc_ecat.c **** }
  43              	 .loc 1 81 0
  44 000c BD46     	 mov sp,r7
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 13
  47              	 
  48 000e 5DF8047B 	 ldr r7,[sp],#4
  49              	.LCFI3:
  50              	 .cfi_restore 7
  51              	 .cfi_def_cfa_offset 0
  52 0012 7047     	 bx lr
  53              	.L3:
  54              	 .align 2
  55              	.L2:
  56 0014 00000154 	 .word 1409351680
  57              	 .cfi_endproc
  58              	.LFE178:
  60              	 .section .text.XMC_ECAT_lReleasePhyAccessToMII,"ax",%progbits
  61              	 .align 2
  62              	 .thumb
  63              	 .thumb_func
  65              	XMC_ECAT_lReleasePhyAccessToMII:
  66              	.LFB179:
  82:../Libraries/XMCLib/src/xmc_ecat.c **** 
  83:../Libraries/XMCLib/src/xmc_ecat.c **** __STATIC_INLINE void XMC_ECAT_lReleasePhyAccessToMII(void)
  84:../Libraries/XMCLib/src/xmc_ecat.c **** {
  67              	 .loc 1 84 0
  68              	 .cfi_startproc
  69              	 
  70              	 
  71              	 
  72 0000 80B4     	 push {r7}
  73              	.LCFI4:
  74              	 .cfi_def_cfa_offset 4
  75              	 .cfi_offset 7,-4
  76 0002 00AF     	 add r7,sp,#0
  77              	.LCFI5:
  78              	 .cfi_def_cfa_register 7
  85:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PDI_ACS_STATE = 0x0;
  79              	 .loc 1 85 0
  80 0004 034B     	 ldr r3,.L5
  81 0006 0022     	 movs r2,#0
  82 0008 83F81725 	 strb r2,[r3,#1303]
  86:../Libraries/XMCLib/src/xmc_ecat.c **** }
  83              	 .loc 1 86 0
  84 000c BD46     	 mov sp,r7
  85              	.LCFI6:
  86              	 .cfi_def_cfa_register 13
  87              	 
  88 000e 5DF8047B 	 ldr r7,[sp],#4
  89              	.LCFI7:
  90              	 .cfi_restore 7
  91              	 .cfi_def_cfa_offset 0
  92 0012 7047     	 bx lr
  93              	.L6:
  94              	 .align 2
  95              	.L5:
  96 0014 00000154 	 .word 1409351680
  97              	 .cfi_endproc
  98              	.LFE179:
 100              	 .section .text.XMC_ECAT_Enable,"ax",%progbits
 101              	 .align 2
 102              	 .global XMC_ECAT_Enable
 103              	 .thumb
 104              	 .thumb_func
 106              	XMC_ECAT_Enable:
 107              	.LFB180:
  87:../Libraries/XMCLib/src/xmc_ecat.c **** 
  88:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT module clock ungating and deassert reset API (Enables ECAT) */
  89:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Enable(void)
  90:../Libraries/XMCLib/src/xmc_ecat.c **** {
 108              	 .loc 1 90 0
 109              	 .cfi_startproc
 110              	 
 111              	 
 112 0000 80B5     	 push {r7,lr}
 113              	.LCFI8:
 114              	 .cfi_def_cfa_offset 8
 115              	 .cfi_offset 7,-8
 116              	 .cfi_offset 14,-4
 117 0002 00AF     	 add r7,sp,#0
 118              	.LCFI9:
 119              	 .cfi_def_cfa_register 7
  91:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ECAT0);
 120              	 .loc 1 91 0
 121 0004 0648     	 ldr r0,.L9
 122 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  92:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ECAT0);
 123              	 .loc 1 92 0
 124 000a 0548     	 ldr r0,.L9
 125 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  93:../Libraries/XMCLib/src/xmc_ecat.c **** 
  94:../Libraries/XMCLib/src/xmc_ecat.c ****   while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_ECAT0) == true) {}
 126              	 .loc 1 94 0
 127 0010 00BF     	 nop
 128              	.L8:
 129              	 .loc 1 94 0 is_stmt 0 discriminator 1
 130 0012 0348     	 ldr r0,.L9
 131 0014 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 132 0018 0346     	 mov r3,r0
 133 001a 002B     	 cmp r3,#0
 134 001c F9D1     	 bne .L8
  95:../Libraries/XMCLib/src/xmc_ecat.c **** }
 135              	 .loc 1 95 0 is_stmt 1
 136 001e 80BD     	 pop {r7,pc}
 137              	.L10:
 138              	 .align 2
 139              	.L9:
 140 0020 00040020 	 .word 536871936
 141              	 .cfi_endproc
 142              	.LFE180:
 144              	 .section .text.XMC_ECAT_Disable,"ax",%progbits
 145              	 .align 2
 146              	 .global XMC_ECAT_Disable
 147              	 .thumb
 148              	 .thumb_func
 150              	XMC_ECAT_Disable:
 151              	.LFB181:
  96:../Libraries/XMCLib/src/xmc_ecat.c **** 
  97:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT module clock gating and assert reset API (Disables ECAT)*/
  98:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Disable(void)
  99:../Libraries/XMCLib/src/xmc_ecat.c **** {
 152              	 .loc 1 99 0
 153              	 .cfi_startproc
 154              	 
 155              	 
 156 0000 80B5     	 push {r7,lr}
 157              	.LCFI10:
 158              	 .cfi_def_cfa_offset 8
 159              	 .cfi_offset 7,-8
 160              	 .cfi_offset 14,-4
 161 0002 00AF     	 add r7,sp,#0
 162              	.LCFI11:
 163              	 .cfi_def_cfa_register 7
 100:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ECAT0);
 164              	 .loc 1 100 0
 165 0004 0848     	 ldr r0,.L13
 166 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 101:../Libraries/XMCLib/src/xmc_ecat.c ****   while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_ECAT0) == false) {}
 167              	 .loc 1 101 0
 168 000a 00BF     	 nop
 169              	.L12:
 170              	 .loc 1 101 0 is_stmt 0 discriminator 1
 171 000c 0648     	 ldr r0,.L13
 172 000e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 173 0012 0346     	 mov r3,r0
 174 0014 83F00103 	 eor r3,r3,#1
 175 0018 DBB2     	 uxtb r3,r3
 176 001a 002B     	 cmp r3,#0
 177 001c F6D1     	 bne .L12
 102:../Libraries/XMCLib/src/xmc_ecat.c **** 
 103:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ECAT0);
 178              	 .loc 1 103 0 is_stmt 1
 179 001e 0248     	 ldr r0,.L13
 180 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 104:../Libraries/XMCLib/src/xmc_ecat.c **** }
 181              	 .loc 1 104 0
 182 0024 80BD     	 pop {r7,pc}
 183              	.L14:
 184 0026 00BF     	 .align 2
 185              	.L13:
 186 0028 00040020 	 .word 536871936
 187              	 .cfi_endproc
 188              	.LFE181:
 190              	 .section .text.XMC_ECAT_Init,"ax",%progbits
 191              	 .align 2
 192              	 .global XMC_ECAT_Init
 193              	 .thumb
 194              	 .thumb_func
 196              	XMC_ECAT_Init:
 197              	.LFB182:
 105:../Libraries/XMCLib/src/xmc_ecat.c **** 
 106:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT initialization function */
 107:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Init(XMC_ECAT_CONFIG_t *const config)
 108:../Libraries/XMCLib/src/xmc_ecat.c **** {
 198              	 .loc 1 108 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202 0000 80B5     	 push {r7,lr}
 203              	.LCFI12:
 204              	 .cfi_def_cfa_offset 8
 205              	 .cfi_offset 7,-8
 206              	 .cfi_offset 14,-4
 207 0002 82B0     	 sub sp,sp,#8
 208              	.LCFI13:
 209              	 .cfi_def_cfa_offset 16
 210 0004 00AF     	 add r7,sp,#0
 211              	.LCFI14:
 212              	 .cfi_def_cfa_register 7
 213 0006 7860     	 str r0,[r7,#4]
 109:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_Enable();
 214              	 .loc 1 109 0
 215 0008 FFF7FEFF 	 bl XMC_ECAT_Enable
 110:../Libraries/XMCLib/src/xmc_ecat.c **** 
 111:../Libraries/XMCLib/src/xmc_ecat.c ****   /* The process memory is not accessible until the ESC Configuration Area is loaded successfully. 
 112:../Libraries/XMCLib/src/xmc_ecat.c **** 
 113:../Libraries/XMCLib/src/xmc_ecat.c ****   /* words 0x0-0x3 */
 114:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[0U] = config->dword[0U];
 216              	 .loc 1 114 0
 217 000c 194A     	 ldr r2,.L17
 218 000e 7B68     	 ldr r3,[r7,#4]
 219 0010 1B68     	 ldr r3,[r3]
 220 0012 C2F80835 	 str r3,[r2,#1288]
 115:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[1U] = config->dword[1U];
 221              	 .loc 1 115 0
 222 0016 174A     	 ldr r2,.L17
 223 0018 7B68     	 ldr r3,[r7,#4]
 224 001a 5B68     	 ldr r3,[r3,#4]
 225 001c C2F80C35 	 str r3,[r2,#1292]
 116:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_CONT_STAT |= (uint16_t)((uint16_t)0x4U << (uint16_t)ECAT_EEP_CONT_STAT_CMD_REG_Pos);
 226              	 .loc 1 116 0
 227 0020 144A     	 ldr r2,.L17
 228 0022 144B     	 ldr r3,.L17
 229 0024 B3F80235 	 ldrh r3,[r3,#1282]
 230 0028 9BB2     	 uxth r3,r3
 231 002a 43F48063 	 orr r3,r3,#1024
 232 002e 9BB2     	 uxth r3,r3
 233 0030 A2F80235 	 strh r3,[r2,#1282]
 117:../Libraries/XMCLib/src/xmc_ecat.c **** 
 118:../Libraries/XMCLib/src/xmc_ecat.c ****   /* words 0x4-0x7 */
 119:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[0U] = config->dword[2U];
 234              	 .loc 1 119 0
 235 0034 0F4A     	 ldr r2,.L17
 236 0036 7B68     	 ldr r3,[r7,#4]
 237 0038 9B68     	 ldr r3,[r3,#8]
 238 003a C2F80835 	 str r3,[r2,#1288]
 120:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[1U] = config->dword[3U];
 239              	 .loc 1 120 0
 240 003e 0D4A     	 ldr r2,.L17
 241 0040 7B68     	 ldr r3,[r7,#4]
 242 0042 DB68     	 ldr r3,[r3,#12]
 243 0044 C2F80C35 	 str r3,[r2,#1292]
 121:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_CONT_STAT |= (uint16_t)((uint16_t)0x4U << (uint16_t)ECAT_EEP_CONT_STAT_CMD_REG_Pos);
 244              	 .loc 1 121 0
 245 0048 0A4A     	 ldr r2,.L17
 246 004a 0A4B     	 ldr r3,.L17
 247 004c B3F80235 	 ldrh r3,[r3,#1282]
 248 0050 9BB2     	 uxth r3,r3
 249 0052 43F48063 	 orr r3,r3,#1024
 250 0056 9BB2     	 uxth r3,r3
 251 0058 A2F80235 	 strh r3,[r2,#1282]
 122:../Libraries/XMCLib/src/xmc_ecat.c **** 
 123:../Libraries/XMCLib/src/xmc_ecat.c ****   while (ECAT0->EEP_CONT_STAT & ECAT_EEP_CONT_STAT_L_STAT_Msk)
 252              	 .loc 1 123 0
 253 005c 00BF     	 nop
 254              	.L16:
 255              	 .loc 1 123 0 is_stmt 0 discriminator 1
 256 005e 054B     	 ldr r3,.L17
 257 0060 B3F80235 	 ldrh r3,[r3,#1282]
 258 0064 9BB2     	 uxth r3,r3
 259 0066 03F48053 	 and r3,r3,#4096
 260 006a 002B     	 cmp r3,#0
 261 006c F7D1     	 bne .L16
 124:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 125:../Libraries/XMCLib/src/xmc_ecat.c ****     /* Wait until the EEPROM_Loaded signal is active */
 126:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 127:../Libraries/XMCLib/src/xmc_ecat.c **** 
 128:../Libraries/XMCLib/src/xmc_ecat.c **** }
 262              	 .loc 1 128 0 is_stmt 1
 263 006e 0837     	 adds r7,r7,#8
 264              	.LCFI15:
 265              	 .cfi_def_cfa_offset 8
 266 0070 BD46     	 mov sp,r7
 267              	.LCFI16:
 268              	 .cfi_def_cfa_register 13
 269              	 
 270 0072 80BD     	 pop {r7,pc}
 271              	.L18:
 272              	 .align 2
 273              	.L17:
 274 0074 00000154 	 .word 1409351680
 275              	 .cfi_endproc
 276              	.LFE182:
 278              	 .section .text.XMC_ECAT_EnableEvent,"ax",%progbits
 279              	 .align 2
 280              	 .global XMC_ECAT_EnableEvent
 281              	 .thumb
 282              	 .thumb_func
 284              	XMC_ECAT_EnableEvent:
 285              	.LFB183:
 129:../Libraries/XMCLib/src/xmc_ecat.c **** 
 130:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event enable API */
 131:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_EnableEvent(uint32_t event)
 132:../Libraries/XMCLib/src/xmc_ecat.c **** {
 286              	 .loc 1 132 0
 287              	 .cfi_startproc
 288              	 
 289              	 
 290              	 
 291 0000 80B4     	 push {r7}
 292              	.LCFI17:
 293              	 .cfi_def_cfa_offset 4
 294              	 .cfi_offset 7,-4
 295 0002 83B0     	 sub sp,sp,#12
 296              	.LCFI18:
 297              	 .cfi_def_cfa_offset 16
 298 0004 00AF     	 add r7,sp,#0
 299              	.LCFI19:
 300              	 .cfi_def_cfa_register 7
 301 0006 7860     	 str r0,[r7,#4]
 133:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->AL_EVENT_MASK |= event;
 302              	 .loc 1 133 0
 303 0008 0649     	 ldr r1,.L20
 304 000a 064B     	 ldr r3,.L20
 305 000c D3F80422 	 ldr r2,[r3,#516]
 306 0010 7B68     	 ldr r3,[r7,#4]
 307 0012 1343     	 orrs r3,r3,r2
 308 0014 C1F80432 	 str r3,[r1,#516]
 134:../Libraries/XMCLib/src/xmc_ecat.c **** }
 309              	 .loc 1 134 0
 310 0018 0C37     	 adds r7,r7,#12
 311              	.LCFI20:
 312              	 .cfi_def_cfa_offset 4
 313 001a BD46     	 mov sp,r7
 314              	.LCFI21:
 315              	 .cfi_def_cfa_register 13
 316              	 
 317 001c 5DF8047B 	 ldr r7,[sp],#4
 318              	.LCFI22:
 319              	 .cfi_restore 7
 320              	 .cfi_def_cfa_offset 0
 321 0020 7047     	 bx lr
 322              	.L21:
 323 0022 00BF     	 .align 2
 324              	.L20:
 325 0024 00000154 	 .word 1409351680
 326              	 .cfi_endproc
 327              	.LFE183:
 329              	 .section .text.XMC_ECAT_DisableEvent,"ax",%progbits
 330              	 .align 2
 331              	 .global XMC_ECAT_DisableEvent
 332              	 .thumb
 333              	 .thumb_func
 335              	XMC_ECAT_DisableEvent:
 336              	.LFB184:
 135:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event disable API */
 136:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_DisableEvent(uint32_t event)
 137:../Libraries/XMCLib/src/xmc_ecat.c **** {
 337              	 .loc 1 137 0
 338              	 .cfi_startproc
 339              	 
 340              	 
 341              	 
 342 0000 80B4     	 push {r7}
 343              	.LCFI23:
 344              	 .cfi_def_cfa_offset 4
 345              	 .cfi_offset 7,-4
 346 0002 83B0     	 sub sp,sp,#12
 347              	.LCFI24:
 348              	 .cfi_def_cfa_offset 16
 349 0004 00AF     	 add r7,sp,#0
 350              	.LCFI25:
 351              	 .cfi_def_cfa_register 7
 352 0006 7860     	 str r0,[r7,#4]
 138:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->AL_EVENT_MASK &= ~event;
 353              	 .loc 1 138 0
 354 0008 0649     	 ldr r1,.L23
 355 000a 064B     	 ldr r3,.L23
 356 000c D3F80422 	 ldr r2,[r3,#516]
 357 0010 7B68     	 ldr r3,[r7,#4]
 358 0012 DB43     	 mvns r3,r3
 359 0014 1340     	 ands r3,r3,r2
 360 0016 C1F80432 	 str r3,[r1,#516]
 139:../Libraries/XMCLib/src/xmc_ecat.c **** }
 361              	 .loc 1 139 0
 362 001a 0C37     	 adds r7,r7,#12
 363              	.LCFI26:
 364              	 .cfi_def_cfa_offset 4
 365 001c BD46     	 mov sp,r7
 366              	.LCFI27:
 367              	 .cfi_def_cfa_register 13
 368              	 
 369 001e 5DF8047B 	 ldr r7,[sp],#4
 370              	.LCFI28:
 371              	 .cfi_restore 7
 372              	 .cfi_def_cfa_offset 0
 373 0022 7047     	 bx lr
 374              	.L24:
 375              	 .align 2
 376              	.L23:
 377 0024 00000154 	 .word 1409351680
 378              	 .cfi_endproc
 379              	.LFE184:
 381              	 .section .text.XMC_ECAT_GetEventStatus,"ax",%progbits
 382              	 .align 2
 383              	 .global XMC_ECAT_GetEventStatus
 384              	 .thumb
 385              	 .thumb_func
 387              	XMC_ECAT_GetEventStatus:
 388              	.LFB185:
 140:../Libraries/XMCLib/src/xmc_ecat.c **** 
 141:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event status reading API */
 142:../Libraries/XMCLib/src/xmc_ecat.c **** uint32_t XMC_ECAT_GetEventStatus(void)
 143:../Libraries/XMCLib/src/xmc_ecat.c **** {
 389              	 .loc 1 143 0
 390              	 .cfi_startproc
 391              	 
 392              	 
 393              	 
 394 0000 80B4     	 push {r7}
 395              	.LCFI29:
 396              	 .cfi_def_cfa_offset 4
 397              	 .cfi_offset 7,-4
 398 0002 00AF     	 add r7,sp,#0
 399              	.LCFI30:
 400              	 .cfi_def_cfa_register 7
 144:../Libraries/XMCLib/src/xmc_ecat.c ****   return (ECAT0->AL_EVENT_REQ);
 401              	 .loc 1 144 0
 402 0004 034B     	 ldr r3,.L27
 403 0006 D3F82032 	 ldr r3,[r3,#544]
 145:../Libraries/XMCLib/src/xmc_ecat.c **** }
 404              	 .loc 1 145 0
 405 000a 1846     	 mov r0,r3
 406 000c BD46     	 mov sp,r7
 407              	.LCFI31:
 408              	 .cfi_def_cfa_register 13
 409              	 
 410 000e 5DF8047B 	 ldr r7,[sp],#4
 411              	.LCFI32:
 412              	 .cfi_restore 7
 413              	 .cfi_def_cfa_offset 0
 414 0012 7047     	 bx lr
 415              	.L28:
 416              	 .align 2
 417              	.L27:
 418 0014 00000154 	 .word 1409351680
 419              	 .cfi_endproc
 420              	.LFE185:
 422              	 .section .text.XMC_ECAT_DisableSyncManChannel,"ax",%progbits
 423              	 .align 2
 424              	 .global XMC_ECAT_DisableSyncManChannel
 425              	 .thumb
 426              	 .thumb_func
 428              	XMC_ECAT_DisableSyncManChannel:
 429              	.LFB186:
 146:../Libraries/XMCLib/src/xmc_ecat.c **** 
 147:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT SyncManager channel disable function*/
 148:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_DisableSyncManChannel(const uint8_t channel)
 149:../Libraries/XMCLib/src/xmc_ecat.c **** {
 430              	 .loc 1 149 0
 431              	 .cfi_startproc
 432              	 
 433              	 
 434              	 
 435 0000 80B4     	 push {r7}
 436              	.LCFI33:
 437              	 .cfi_def_cfa_offset 4
 438              	 .cfi_offset 7,-4
 439 0002 83B0     	 sub sp,sp,#12
 440              	.LCFI34:
 441              	 .cfi_def_cfa_offset 16
 442 0004 00AF     	 add r7,sp,#0
 443              	.LCFI35:
 444              	 .cfi_def_cfa_register 7
 445 0006 0346     	 mov r3,r0
 446 0008 FB71     	 strb r3,[r7,#7]
 150:../Libraries/XMCLib/src/xmc_ecat.c ****   ((ECAT0_SM_Type *)(void *)((uint8_t *)(void *)ECAT0_SM0 + (channel * 8U)))->SM_PDI_CTR |= 0x1U;
 447              	 .loc 1 150 0
 448 000a FB79     	 ldrb r3,[r7,#7]
 449 000c DB00     	 lsls r3,r3,#3
 450 000e 03F1A843 	 add r3,r3,#1409286144
 451 0012 03F58433 	 add r3,r3,#67584
 452 0016 FA79     	 ldrb r2,[r7,#7]
 453 0018 D200     	 lsls r2,r2,#3
 454 001a 02F1A842 	 add r2,r2,#1409286144
 455 001e 02F58432 	 add r2,r2,#67584
 456 0022 D279     	 ldrb r2,[r2,#7]
 457 0024 D2B2     	 uxtb r2,r2
 458 0026 42F00102 	 orr r2,r2,#1
 459 002a D2B2     	 uxtb r2,r2
 460 002c DA71     	 strb r2,[r3,#7]
 151:../Libraries/XMCLib/src/xmc_ecat.c **** }
 461              	 .loc 1 151 0
 462 002e 0C37     	 adds r7,r7,#12
 463              	.LCFI36:
 464              	 .cfi_def_cfa_offset 4
 465 0030 BD46     	 mov sp,r7
 466              	.LCFI37:
 467              	 .cfi_def_cfa_register 13
 468              	 
 469 0032 5DF8047B 	 ldr r7,[sp],#4
 470              	.LCFI38:
 471              	 .cfi_restore 7
 472              	 .cfi_def_cfa_offset 0
 473 0036 7047     	 bx lr
 474              	 .cfi_endproc
 475              	.LFE186:
 477              	 .section .text.XMC_ECAT_EnableSyncManChannel,"ax",%progbits
 478              	 .align 2
 479              	 .global XMC_ECAT_EnableSyncManChannel
 480              	 .thumb
 481              	 .thumb_func
 483              	XMC_ECAT_EnableSyncManChannel:
 484              	.LFB187:
 152:../Libraries/XMCLib/src/xmc_ecat.c **** 
 153:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT SyncManager channel enable function*/
 154:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_EnableSyncManChannel(const uint8_t channel)
 155:../Libraries/XMCLib/src/xmc_ecat.c **** {
 485              	 .loc 1 155 0
 486              	 .cfi_startproc
 487              	 
 488              	 
 489              	 
 490 0000 80B4     	 push {r7}
 491              	.LCFI39:
 492              	 .cfi_def_cfa_offset 4
 493              	 .cfi_offset 7,-4
 494 0002 83B0     	 sub sp,sp,#12
 495              	.LCFI40:
 496              	 .cfi_def_cfa_offset 16
 497 0004 00AF     	 add r7,sp,#0
 498              	.LCFI41:
 499              	 .cfi_def_cfa_register 7
 500 0006 0346     	 mov r3,r0
 501 0008 FB71     	 strb r3,[r7,#7]
 156:../Libraries/XMCLib/src/xmc_ecat.c ****   ((ECAT0_SM_Type *)(void *)((uint8_t *)(void *)ECAT0_SM0 + (channel * 8U)))->SM_PDI_CTR &= (uint8_
 502              	 .loc 1 156 0
 503 000a FB79     	 ldrb r3,[r7,#7]
 504 000c DB00     	 lsls r3,r3,#3
 505 000e 03F1A843 	 add r3,r3,#1409286144
 506 0012 03F58433 	 add r3,r3,#67584
 507 0016 FA79     	 ldrb r2,[r7,#7]
 508 0018 D200     	 lsls r2,r2,#3
 509 001a 02F1A842 	 add r2,r2,#1409286144
 510 001e 02F58432 	 add r2,r2,#67584
 511 0022 D279     	 ldrb r2,[r2,#7]
 512 0024 D2B2     	 uxtb r2,r2
 513 0026 22F00102 	 bic r2,r2,#1
 514 002a D2B2     	 uxtb r2,r2
 515 002c DA71     	 strb r2,[r3,#7]
 157:../Libraries/XMCLib/src/xmc_ecat.c **** }
 516              	 .loc 1 157 0
 517 002e 0C37     	 adds r7,r7,#12
 518              	.LCFI42:
 519              	 .cfi_def_cfa_offset 4
 520 0030 BD46     	 mov sp,r7
 521              	.LCFI43:
 522              	 .cfi_def_cfa_register 13
 523              	 
 524 0032 5DF8047B 	 ldr r7,[sp],#4
 525              	.LCFI44:
 526              	 .cfi_restore 7
 527              	 .cfi_def_cfa_offset 0
 528 0036 7047     	 bx lr
 529              	 .cfi_endproc
 530              	.LFE187:
 532              	 .section .text.XMC_ECAT_ReadPhy,"ax",%progbits
 533              	 .align 2
 534              	 .global XMC_ECAT_ReadPhy
 535              	 .thumb
 536              	 .thumb_func
 538              	XMC_ECAT_ReadPhy:
 539              	.LFB188:
 158:../Libraries/XMCLib/src/xmc_ecat.c **** 
 159:../Libraries/XMCLib/src/xmc_ecat.c **** 
 160:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT PHY register read function*/
 161:../Libraries/XMCLib/src/xmc_ecat.c **** XMC_ECAT_STATUS_t XMC_ECAT_ReadPhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t *data)
 162:../Libraries/XMCLib/src/xmc_ecat.c **** {
 540              	 .loc 1 162 0
 541              	 .cfi_startproc
 542              	 
 543              	 
 544 0000 80B5     	 push {r7,lr}
 545              	.LCFI45:
 546              	 .cfi_def_cfa_offset 8
 547              	 .cfi_offset 7,-8
 548              	 .cfi_offset 14,-4
 549 0002 84B0     	 sub sp,sp,#16
 550              	.LCFI46:
 551              	 .cfi_def_cfa_offset 24
 552 0004 00AF     	 add r7,sp,#0
 553              	.LCFI47:
 554              	 .cfi_def_cfa_register 7
 555 0006 0346     	 mov r3,r0
 556 0008 3A60     	 str r2,[r7]
 557 000a FB71     	 strb r3,[r7,#7]
 558 000c 0B46     	 mov r3,r1
 559 000e BB71     	 strb r3,[r7,#6]
 163:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_STATUS_t status;
 164:../Libraries/XMCLib/src/xmc_ecat.c **** 
 165:../Libraries/XMCLib/src/xmc_ecat.c ****   if ((ECAT0->MII_ECAT_ACS_STATE != 0) || ((ECAT0->MII_PDI_ACS_STATE & ECAT_MII_PDI_ACS_STATE_FORCE
 560              	 .loc 1 165 0
 561 0010 234B     	 ldr r3,.L39
 562 0012 93F81635 	 ldrb r3,[r3,#1302]
 563 0016 DBB2     	 uxtb r3,r3
 564 0018 002B     	 cmp r3,#0
 565 001a 07D1     	 bne .L32
 566              	 .loc 1 165 0 is_stmt 0 discriminator 1
 567 001c 204B     	 ldr r3,.L39
 568 001e 93F81735 	 ldrb r3,[r3,#1303]
 569 0022 DBB2     	 uxtb r3,r3
 570 0024 03F00203 	 and r3,r3,#2
 571 0028 002B     	 cmp r3,#0
 572 002a 02D0     	 beq .L33
 573              	.L32:
 166:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 167:../Libraries/XMCLib/src/xmc_ecat.c ****     status =  XMC_ECAT_STATUS_ERROR;
 574              	 .loc 1 167 0 is_stmt 1
 575 002c 0223     	 movs r3,#2
 576 002e FB73     	 strb r3,[r7,#15]
 577 0030 30E0     	 b .L34
 578              	.L33:
 168:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 169:../Libraries/XMCLib/src/xmc_ecat.c ****   else
 170:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 171:../Libraries/XMCLib/src/xmc_ecat.c ****     XMC_ECAT_lRequestPhyAccessToMII();
 579              	 .loc 1 171 0
 580 0032 FFF7FEFF 	 bl XMC_ECAT_lRequestPhyAccessToMII
 172:../Libraries/XMCLib/src/xmc_ecat.c **** 
 173:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_ADR = phy_addr;
 581              	 .loc 1 173 0
 582 0036 1A4A     	 ldr r2,.L39
 583 0038 FB79     	 ldrb r3,[r7,#7]
 584 003a 82F81235 	 strb r3,[r2,#1298]
 174:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_REG_ADR = reg_addr;
 585              	 .loc 1 174 0
 586 003e 184A     	 ldr r2,.L39
 587 0040 BB79     	 ldrb r3,[r7,#6]
 588 0042 82F81335 	 strb r3,[r2,#1299]
 175:../Libraries/XMCLib/src/xmc_ecat.c **** 
 176:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_CONT_STAT = 0x0100U;  /* read instruction */
 589              	 .loc 1 176 0
 590 0046 164B     	 ldr r3,.L39
 591 0048 4FF48072 	 mov r2,#256
 592 004c A3F81025 	 strh r2,[r3,#1296]
 177:../Libraries/XMCLib/src/xmc_ecat.c ****     while ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_BUSY_Msk) != 0U) {}
 593              	 .loc 1 177 0
 594 0050 00BF     	 nop
 595              	.L35:
 596              	 .loc 1 177 0 is_stmt 0 discriminator 1
 597 0052 134B     	 ldr r3,.L39
 598 0054 B3F81035 	 ldrh r3,[r3,#1296]
 599 0058 9BB2     	 uxth r3,r3
 600 005a 9BB2     	 uxth r3,r3
 601 005c 1BB2     	 sxth r3,r3
 602 005e 002B     	 cmp r3,#0
 603 0060 F7DB     	 blt .L35
 178:../Libraries/XMCLib/src/xmc_ecat.c **** 
 179:../Libraries/XMCLib/src/xmc_ecat.c ****     if ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_ERROR_Msk) != 0U)
 604              	 .loc 1 179 0 is_stmt 1
 605 0062 0F4B     	 ldr r3,.L39
 606 0064 B3F81035 	 ldrh r3,[r3,#1296]
 607 0068 9BB2     	 uxth r3,r3
 608 006a 03F48043 	 and r3,r3,#16384
 609 006e 002B     	 cmp r3,#0
 610 0070 06D0     	 beq .L36
 180:../Libraries/XMCLib/src/xmc_ecat.c ****     {
 181:../Libraries/XMCLib/src/xmc_ecat.c ****       ECAT0->MII_CONT_STAT = 0; /* Clear error */
 611              	 .loc 1 181 0
 612 0072 0B4B     	 ldr r3,.L39
 613 0074 0022     	 movs r2,#0
 614 0076 A3F81025 	 strh r2,[r3,#1296]
 182:../Libraries/XMCLib/src/xmc_ecat.c ****       status = XMC_ECAT_STATUS_ERROR;
 615              	 .loc 1 182 0
 616 007a 0223     	 movs r3,#2
 617 007c FB73     	 strb r3,[r7,#15]
 618 007e 07E0     	 b .L37
 619              	.L36:
 183:../Libraries/XMCLib/src/xmc_ecat.c ****     }
 184:../Libraries/XMCLib/src/xmc_ecat.c ****     else
 185:../Libraries/XMCLib/src/xmc_ecat.c ****     {
 186:../Libraries/XMCLib/src/xmc_ecat.c ****       *data = (uint16_t)ECAT0->MII_PHY_DATA;
 620              	 .loc 1 186 0
 621 0080 074B     	 ldr r3,.L39
 622 0082 B3F81435 	 ldrh r3,[r3,#1300]
 623 0086 9AB2     	 uxth r2,r3
 624 0088 3B68     	 ldr r3,[r7]
 625 008a 1A80     	 strh r2,[r3]
 187:../Libraries/XMCLib/src/xmc_ecat.c ****       status = XMC_ECAT_STATUS_OK;
 626              	 .loc 1 187 0
 627 008c 0023     	 movs r3,#0
 628 008e FB73     	 strb r3,[r7,#15]
 629              	.L37:
 188:../Libraries/XMCLib/src/xmc_ecat.c ****     }
 189:../Libraries/XMCLib/src/xmc_ecat.c **** 
 190:../Libraries/XMCLib/src/xmc_ecat.c ****     XMC_ECAT_lReleasePhyAccessToMII();
 630              	 .loc 1 190 0
 631 0090 FFF7FEFF 	 bl XMC_ECAT_lReleasePhyAccessToMII
 632              	.L34:
 191:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 192:../Libraries/XMCLib/src/xmc_ecat.c **** 
 193:../Libraries/XMCLib/src/xmc_ecat.c ****   return status;
 633              	 .loc 1 193 0
 634 0094 FB7B     	 ldrb r3,[r7,#15]
 194:../Libraries/XMCLib/src/xmc_ecat.c **** }
 635              	 .loc 1 194 0
 636 0096 1846     	 mov r0,r3
 637 0098 1037     	 adds r7,r7,#16
 638              	.LCFI48:
 639              	 .cfi_def_cfa_offset 8
 640 009a BD46     	 mov sp,r7
 641              	.LCFI49:
 642              	 .cfi_def_cfa_register 13
 643              	 
 644 009c 80BD     	 pop {r7,pc}
 645              	.L40:
 646 009e 00BF     	 .align 2
 647              	.L39:
 648 00a0 00000154 	 .word 1409351680
 649              	 .cfi_endproc
 650              	.LFE188:
 652              	 .section .text.XMC_ECAT_WritePhy,"ax",%progbits
 653              	 .align 2
 654              	 .global XMC_ECAT_WritePhy
 655              	 .thumb
 656              	 .thumb_func
 658              	XMC_ECAT_WritePhy:
 659              	.LFB189:
 195:../Libraries/XMCLib/src/xmc_ecat.c **** 
 196:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT PHY register write function*/
 197:../Libraries/XMCLib/src/xmc_ecat.c **** XMC_ECAT_STATUS_t XMC_ECAT_WritePhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t data)
 198:../Libraries/XMCLib/src/xmc_ecat.c **** {
 660              	 .loc 1 198 0
 661              	 .cfi_startproc
 662              	 
 663              	 
 664 0000 80B5     	 push {r7,lr}
 665              	.LCFI50:
 666              	 .cfi_def_cfa_offset 8
 667              	 .cfi_offset 7,-8
 668              	 .cfi_offset 14,-4
 669 0002 84B0     	 sub sp,sp,#16
 670              	.LCFI51:
 671              	 .cfi_def_cfa_offset 24
 672 0004 00AF     	 add r7,sp,#0
 673              	.LCFI52:
 674              	 .cfi_def_cfa_register 7
 675 0006 0346     	 mov r3,r0
 676 0008 FB71     	 strb r3,[r7,#7]
 677 000a 0B46     	 mov r3,r1
 678 000c BB71     	 strb r3,[r7,#6]
 679 000e 1346     	 mov r3,r2
 680 0010 BB80     	 strh r3,[r7,#4]
 199:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_STATUS_t status;
 200:../Libraries/XMCLib/src/xmc_ecat.c **** 
 201:../Libraries/XMCLib/src/xmc_ecat.c ****   if ((ECAT0->MII_ECAT_ACS_STATE != 0) || ((ECAT0->MII_PDI_ACS_STATE & ECAT_MII_PDI_ACS_STATE_FORCE
 681              	 .loc 1 201 0
 682 0012 224B     	 ldr r3,.L49
 683 0014 93F81635 	 ldrb r3,[r3,#1302]
 684 0018 DBB2     	 uxtb r3,r3
 685 001a 002B     	 cmp r3,#0
 686 001c 07D1     	 bne .L42
 687              	 .loc 1 201 0 is_stmt 0 discriminator 1
 688 001e 1F4B     	 ldr r3,.L49
 689 0020 93F81735 	 ldrb r3,[r3,#1303]
 690 0024 DBB2     	 uxtb r3,r3
 691 0026 03F00203 	 and r3,r3,#2
 692 002a 002B     	 cmp r3,#0
 693 002c 02D0     	 beq .L43
 694              	.L42:
 202:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 203:../Libraries/XMCLib/src/xmc_ecat.c ****     status =  XMC_ECAT_STATUS_ERROR;
 695              	 .loc 1 203 0 is_stmt 1
 696 002e 0223     	 movs r3,#2
 697 0030 FB73     	 strb r3,[r7,#15]
 698 0032 2EE0     	 b .L44
 699              	.L43:
 204:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 205:../Libraries/XMCLib/src/xmc_ecat.c ****   else
 206:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 207:../Libraries/XMCLib/src/xmc_ecat.c ****     XMC_ECAT_lRequestPhyAccessToMII();
 700              	 .loc 1 207 0
 701 0034 FFF7FEFF 	 bl XMC_ECAT_lRequestPhyAccessToMII
 208:../Libraries/XMCLib/src/xmc_ecat.c **** 
 209:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_ADR = phy_addr;
 702              	 .loc 1 209 0
 703 0038 184A     	 ldr r2,.L49
 704 003a FB79     	 ldrb r3,[r7,#7]
 705 003c 82F81235 	 strb r3,[r2,#1298]
 210:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_REG_ADR = reg_addr;
 706              	 .loc 1 210 0
 707 0040 164A     	 ldr r2,.L49
 708 0042 BB79     	 ldrb r3,[r7,#6]
 709 0044 82F81335 	 strb r3,[r2,#1299]
 211:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_DATA = data;
 710              	 .loc 1 211 0
 711 0048 144A     	 ldr r2,.L49
 712 004a BB88     	 ldrh r3,[r7,#4]
 713 004c A2F81435 	 strh r3,[r2,#1300]
 212:../Libraries/XMCLib/src/xmc_ecat.c **** 
 213:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_CONT_STAT = 0x0200U;  /* write instruction */
 714              	 .loc 1 213 0
 715 0050 124B     	 ldr r3,.L49
 716 0052 4FF40072 	 mov r2,#512
 717 0056 A3F81025 	 strh r2,[r3,#1296]
 214:../Libraries/XMCLib/src/xmc_ecat.c ****     while ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_BUSY_Msk) != 0U) {}
 718              	 .loc 1 214 0
 719 005a 00BF     	 nop
 720              	.L45:
 721              	 .loc 1 214 0 is_stmt 0 discriminator 1
 722 005c 0F4B     	 ldr r3,.L49
 723 005e B3F81035 	 ldrh r3,[r3,#1296]
 724 0062 9BB2     	 uxth r3,r3
 725 0064 9BB2     	 uxth r3,r3
 726 0066 1BB2     	 sxth r3,r3
 727 0068 002B     	 cmp r3,#0
 728 006a F7DB     	 blt .L45
 215:../Libraries/XMCLib/src/xmc_ecat.c **** 
 216:../Libraries/XMCLib/src/xmc_ecat.c ****     if ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_ERROR_Msk) != 0U)
 729              	 .loc 1 216 0 is_stmt 1
 730 006c 0B4B     	 ldr r3,.L49
 731 006e B3F81035 	 ldrh r3,[r3,#1296]
 732 0072 9BB2     	 uxth r3,r3
 733 0074 03F48043 	 and r3,r3,#16384
 734 0078 002B     	 cmp r3,#0
 735 007a 06D0     	 beq .L46
 217:../Libraries/XMCLib/src/xmc_ecat.c ****     {
 218:../Libraries/XMCLib/src/xmc_ecat.c ****       ECAT0->MII_CONT_STAT = 0; /* Clear error */
 736              	 .loc 1 218 0
 737 007c 074B     	 ldr r3,.L49
 738 007e 0022     	 movs r2,#0
 739 0080 A3F81025 	 strh r2,[r3,#1296]
 219:../Libraries/XMCLib/src/xmc_ecat.c ****       status = XMC_ECAT_STATUS_ERROR;
 740              	 .loc 1 219 0
 741 0084 0223     	 movs r3,#2
 742 0086 FB73     	 strb r3,[r7,#15]
 743 0088 01E0     	 b .L47
 744              	.L46:
 220:../Libraries/XMCLib/src/xmc_ecat.c ****     }
 221:../Libraries/XMCLib/src/xmc_ecat.c ****     else
 222:../Libraries/XMCLib/src/xmc_ecat.c ****     {
 223:../Libraries/XMCLib/src/xmc_ecat.c ****       status = XMC_ECAT_STATUS_OK;
 745              	 .loc 1 223 0
 746 008a 0023     	 movs r3,#0
 747 008c FB73     	 strb r3,[r7,#15]
 748              	.L47:
 224:../Libraries/XMCLib/src/xmc_ecat.c ****     }
 225:../Libraries/XMCLib/src/xmc_ecat.c **** 
 226:../Libraries/XMCLib/src/xmc_ecat.c ****     XMC_ECAT_lReleasePhyAccessToMII();
 749              	 .loc 1 226 0
 750 008e FFF7FEFF 	 bl XMC_ECAT_lReleasePhyAccessToMII
 751              	.L44:
 227:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 228:../Libraries/XMCLib/src/xmc_ecat.c **** 
 229:../Libraries/XMCLib/src/xmc_ecat.c ****   return status;
 752              	 .loc 1 229 0
 753 0092 FB7B     	 ldrb r3,[r7,#15]
 230:../Libraries/XMCLib/src/xmc_ecat.c **** }
 754              	 .loc 1 230 0
 755 0094 1846     	 mov r0,r3
 756 0096 1037     	 adds r7,r7,#16
 757              	.LCFI53:
 758              	 .cfi_def_cfa_offset 8
 759 0098 BD46     	 mov sp,r7
 760              	.LCFI54:
 761              	 .cfi_def_cfa_register 13
 762              	 
 763 009a 80BD     	 pop {r7,pc}
 764              	.L50:
 765              	 .align 2
 766              	.L49:
 767 009c 00000154 	 .word 1409351680
 768              	 .cfi_endproc
 769              	.LFE189:
 771              	 .text
 772              	.Letext0:
 773              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 774              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 775              	 .file 4 "C:/work_mari/XMC4800/DAC_ADC/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 776              	 .file 5 "C:/work_mari/XMC4800/DAC_ADC/Libraries/XMCLib/inc/xmc_ecat.h"
 777              	 .file 6 "C:/work_mari/XMC4800/DAC_ADC/Libraries/XMCLib/inc/xmc4_scu.h"
 778              	 .file 7 "C:/work_mari/XMC4800/DAC_ADC/Libraries/CMSIS/Include/cmsis_gcc.h"
 779              	 .file 8 "C:/work_mari/XMC4800/DAC_ADC/Libraries/CMSIS/Include/core_cm4.h"
 780              	 .file 9 "C:/work_mari/XMC4800/DAC_ADC/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ecat.c
    {standard input}:20     .text.XMC_ECAT_lRequestPhyAccessToMII:00000000 $t
    {standard input}:24     .text.XMC_ECAT_lRequestPhyAccessToMII:00000000 XMC_ECAT_lRequestPhyAccessToMII
    {standard input}:56     .text.XMC_ECAT_lRequestPhyAccessToMII:00000014 $d
    {standard input}:61     .text.XMC_ECAT_lReleasePhyAccessToMII:00000000 $t
    {standard input}:65     .text.XMC_ECAT_lReleasePhyAccessToMII:00000000 XMC_ECAT_lReleasePhyAccessToMII
    {standard input}:96     .text.XMC_ECAT_lReleasePhyAccessToMII:00000014 $d
    {standard input}:101    .text.XMC_ECAT_Enable:00000000 $t
    {standard input}:106    .text.XMC_ECAT_Enable:00000000 XMC_ECAT_Enable
    {standard input}:140    .text.XMC_ECAT_Enable:00000020 $d
    {standard input}:145    .text.XMC_ECAT_Disable:00000000 $t
    {standard input}:150    .text.XMC_ECAT_Disable:00000000 XMC_ECAT_Disable
    {standard input}:186    .text.XMC_ECAT_Disable:00000028 $d
    {standard input}:191    .text.XMC_ECAT_Init:00000000 $t
    {standard input}:196    .text.XMC_ECAT_Init:00000000 XMC_ECAT_Init
    {standard input}:274    .text.XMC_ECAT_Init:00000074 $d
    {standard input}:279    .text.XMC_ECAT_EnableEvent:00000000 $t
    {standard input}:284    .text.XMC_ECAT_EnableEvent:00000000 XMC_ECAT_EnableEvent
    {standard input}:325    .text.XMC_ECAT_EnableEvent:00000024 $d
    {standard input}:330    .text.XMC_ECAT_DisableEvent:00000000 $t
    {standard input}:335    .text.XMC_ECAT_DisableEvent:00000000 XMC_ECAT_DisableEvent
    {standard input}:377    .text.XMC_ECAT_DisableEvent:00000024 $d
    {standard input}:382    .text.XMC_ECAT_GetEventStatus:00000000 $t
    {standard input}:387    .text.XMC_ECAT_GetEventStatus:00000000 XMC_ECAT_GetEventStatus
    {standard input}:418    .text.XMC_ECAT_GetEventStatus:00000014 $d
    {standard input}:423    .text.XMC_ECAT_DisableSyncManChannel:00000000 $t
    {standard input}:428    .text.XMC_ECAT_DisableSyncManChannel:00000000 XMC_ECAT_DisableSyncManChannel
    {standard input}:478    .text.XMC_ECAT_EnableSyncManChannel:00000000 $t
    {standard input}:483    .text.XMC_ECAT_EnableSyncManChannel:00000000 XMC_ECAT_EnableSyncManChannel
    {standard input}:533    .text.XMC_ECAT_ReadPhy:00000000 $t
    {standard input}:538    .text.XMC_ECAT_ReadPhy:00000000 XMC_ECAT_ReadPhy
    {standard input}:648    .text.XMC_ECAT_ReadPhy:000000a0 $d
    {standard input}:653    .text.XMC_ECAT_WritePhy:00000000 $t
    {standard input}:658    .text.XMC_ECAT_WritePhy:00000000 XMC_ECAT_WritePhy
    {standard input}:767    .text.XMC_ECAT_WritePhy:0000009c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
